<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_p_i_x_i_e_i_i__data__utilities_8cpp" kind="file" language="C++">
    <compoundname>PIXIEII_data_utilities.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="_p_i_x_i_e_i_i__data__utilities_8h" local="yes">PIXIEII_data_utilities.h</includes>
    <incdepgraph>
      <node id="5">
        <label>PIXIEII_data_utilities.h</label>
        <link refid="_p_i_x_i_e_i_i__data__utilities_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp</label>
        <link refid="_p_i_x_i_e_i_i__data__utilities_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>unistd.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_p_i_x_i_e_i_i__data__utilities_8cpp_1a544c8af6e704d666c2104f737a6fb9a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void genera_tabella_clock</definition>
        <argsstring>(unsigned short *clocks, unsigned short dim, unsigned short counterwidth)</argsstring>
        <name>genera_tabella_clock</name>
        <param>
          <type>unsigned short *</type>
          <declname>clocks</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>counterwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" line="9" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" bodystart="9" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="_p_i_x_i_e_i_i__data__utilities_8cpp_1a848cf5b6e2450dac41ab33c6f670ab0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned short *</type>
        <definition>unsigned short* conversion_table_allocation</definition>
        <argsstring>(void)</argsstring>
        <name>conversion_table_allocation</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" line="37" column="17" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" bodystart="37" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="_p_i_x_i_e_i_i__data__utilities_8cpp_1a6774b8771b354ada8645914824cdf751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned short *</type>
        <definition>unsigned short* databuffer_allocation</definition>
        <argsstring>(unsigned long size)</argsstring>
        <name>databuffer_allocation</name>
        <param>
          <type>unsigned long</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" line="50" column="17" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" bodystart="50" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="_p_i_x_i_e_i_i__data__utilities_8cpp_1a6e698a7f20e2ddf74e87d40f309afeb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int databuffer_sorting</definition>
        <argsstring>(unsigned short *buffer_a)</argsstring>
        <name>databuffer_sorting</name>
        <param>
          <type>unsigned short *</type>
          <declname>buffer_a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" line="62" column="5" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" bodystart="62" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="_p_i_x_i_e_i_i__data__utilities_8cpp_1a393b1ee19ff33df1bb2910245c043880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int map_data_buffer_on_pixie</definition>
        <argsstring>(unsigned short *buffer_a)</argsstring>
        <name>map_data_buffer_on_pixie</name>
        <param>
          <type>unsigned short *</type>
          <declname>buffer_a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" line="99" column="5" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" bodystart="99" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="_p_i_x_i_e_i_i__data__utilities_8cpp_1a921a833a1f6e228dea39b0aba94bbad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int generate_test_buffer</definition>
        <argsstring>(unsigned short *buffer_a, unsigned short type)</argsstring>
        <name>generate_test_buffer</name>
        <param>
          <type>unsigned short *</type>
          <declname>buffer_a</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" line="140" column="5" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" bodystart="140" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="_p_i_x_i_e_i_i__data__utilities_8cpp_1a24bd1ed713dc773489d66ab1f3f79535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decode_pixie_data_buffer</definition>
        <argsstring>(unsigned short *table, unsigned short *databuffer)</argsstring>
        <name>decode_pixie_data_buffer</name>
        <param>
          <type>unsigned short *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>databuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" line="190" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" bodystart="190" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="_p_i_x_i_e_i_i__data__utilities_8cpp_1aa8f1a1fe1fdd97aeaea4758afd7cbffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void databuffer_filtering</definition>
        <argsstring>(unsigned short *buffer_a, unsigned short low_limit, unsigned short high_limit)</argsstring>
        <name>databuffer_filtering</name>
        <param>
          <type>unsigned short *</type>
          <declname>buffer_a</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>low_limit</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>high_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" line="199" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" bodystart="199" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="_p_i_x_i_e_i_i__data__utilities_8cpp_1a1e534f1401f09a882767e6ab34ee5a32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_data_consistency</definition>
        <argsstring>(unsigned short *data_buffer, unsigned short test_pattern)</argsstring>
        <name>check_data_consistency</name>
        <param>
          <type>unsigned short *</type>
          <declname>data_buffer</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>test_pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" line="212" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" bodystart="212" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="_p_i_x_i_e_i_i__data__utilities_8cpp_1ad64dd442f2c8f664444d215ce90899a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dummy_buffer_init</definition>
        <argsstring>(unsigned short *data_buffer, char *namefile)</argsstring>
        <name>dummy_buffer_init</name>
        <param>
          <type>unsigned short *</type>
          <declname>data_buffer</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>namefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" line="231" column="5" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" bodystart="231" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="_p_i_x_i_e_i_i__data__utilities_8cpp_1ab68a12eba15481f88f5399db1263edd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void copy_databuff_to_netbuff</definition>
        <argsstring>(unsigned short *databuff, unsigned short *netbuff, unsigned char position)</argsstring>
        <name>copy_databuff_to_netbuff</name>
        <param>
          <type>unsigned short *</type>
          <declname>databuff</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>netbuff</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" line="250" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp" bodystart="250" bodyend="257"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h" kindref="compound">PIXIEII_data_utilities.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>routine<sp/>has<sp/>been<sp/>developed<sp/>by<sp/>SAndro,<sp/>abd<sp/>generates<sp/>the<sp/>lookup<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>pixie<sp/>counter<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8cpp_1a544c8af6e704d666c2104f737a6fb9a9" kindref="member">genera_tabella_clock</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*clocks,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>counterwidth){</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//unsigned<sp/>int<sp/>clocks[32768];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>potenze[16],<sp/>bit1,bit2;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,tempo;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>potenze[0]=1;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=1;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)counterwidth+1;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potenze[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]=potenze[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>-1]*2;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>clocks[0]=0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>tempo=0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=1;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;dim;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit1=tempo&amp;potenze[14];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bit1<sp/>!=<sp/>0)bit1=1;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit2=tempo&amp;potenze[6];</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bit2<sp/>!=<sp/>0)bit2=1;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit1=!(bit1^bit2);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempo=tempo*2+bit1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempo=tempo%potenze[15];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clocks[tempo]=<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>clocks[0]=0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8cpp_1a848cf5b6e2450dac41ab33c6f670ab0d" kindref="member">conversion_table_allocation</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*ush_ptr;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ush_ptr=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*)calloc(<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a07cd4dfb59dddf1dc76164fc44c92929" kindref="member">PSTABLE_DEPTH</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ush_ptr==NULL)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\r\nCOversion<sp/>Table:Memory<sp/>allocation<sp/>unsuccesfull!!<sp/>Please<sp/>contact<sp/>an<sp/>expert<sp/>:-)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8cpp_1a544c8af6e704d666c2104f737a6fb9a9" kindref="member">genera_tabella_clock</ref>(ush_ptr,<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a07cd4dfb59dddf1dc76164fc44c92929" kindref="member">PSTABLE_DEPTH</ref>,<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1ab7cc892e634a4fb344c780bd909db599" kindref="member">PSCNT_WIDTH</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ush_ptr);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8cpp_1a6774b8771b354ada8645914824cdf751" kindref="member">databuffer_allocation</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*ush_ptr;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>ush_ptr=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)calloc(size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ush_ptr==NULL)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\r\nData:Memory<sp/>allocation<sp/>unsuccesfull!!<sp/>Please<sp/>contact<sp/>an<sp/>expert<sp/>(Massimo)<sp/>:-)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ush_ptr);}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//databuffer_sorting<sp/>arranges<sp/>data<sp/>from<sp/>fpga<sp/>in<sp/>an<sp/>array<sp/>in<sp/>which<sp/>16<sp/>sectors<sp/>(31200<sp/>pixel<sp/>each)<sp/>are<sp/>contiguos<sp/>in<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8cpp_1a6e698a7f20e2ddf74e87d40f309afeb0" kindref="member">databuffer_sorting</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*buffer_a){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>PIXELS_IN_SECTOR;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*buffer_b;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXELS_IN_SECTOR=(<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a1fbd1cc32722d283da6b500da8331323" kindref="member">COLS_PER_DOUT</ref><sp/>*<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sector_cntr,pixel_cntr;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_b=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*)calloc(<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a0bf424bf8ed271bc080ba848b0f31660" kindref="member">PIXIE_COLS</ref>*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer_b==NULL)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\r\nDATA<sp/>sorting:Memory<sp/>allocation<sp/>unsuccesfull!!<sp/>Please<sp/>contact<sp/>an<sp/>expert<sp/>:-)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//in<sp/>the<sp/>original<sp/>buffer<sp/>same<sp/>index(position<sp/>in<sp/>the<sp/>sector)<sp/>pixels<sp/>are<sp/>stored<sp/>contiguosly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>filling<sp/>starts<sp/>from<sp/>the<sp/>end<sp/>of<sp/>each<sp/>sector<sp/>up<sp/>to<sp/>the<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>because<sp/>the<sp/>first<sp/>data<sp/>you<sp/>get<sp/>from<sp/>fpga<sp/>actually<sp/>is<sp/>the<sp/>last<sp/>pixel<sp/>of<sp/>the<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//you<sp/>are<sp/>reading<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(sector_cntr=0;sector_cntr&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a7a99b63166092789a099186cb797e257" kindref="member">SECTORS_IN_PIXIE</ref>-1;sector_cntr++){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(pixel_cntr=0;pixel_cntr&lt;PIXELS_IN_SECTOR;pixel_cntr++){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_b[((sector_cntr+1)*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a562071d491fdd9df96dc360e0d6e15b3" kindref="member">PIXELS_IN_SECTOR_MAP</ref>)-pixel_cntr-1]=buffer_a[sector_cntr+pixel_cntr*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a7a99b63166092789a099186cb797e257" kindref="member">SECTORS_IN_PIXIE</ref>];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//last<sp/>sector<sp/>hasn&apos;t<sp/>as<sp/>many<sp/>pixels<sp/>as<sp/>others<sp/>so<sp/>filling<sp/>for<sp/>it,<sp/>must<sp/>start<sp/>before<sp/>than<sp/>PIXEL_IN_SECTORS-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>has<sp/>to<sp/>start<sp/>from<sp/>PIXELS_IN_LAST_SECTOR-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//at<sp/>this<sp/>point<sp/>sector_cntr<sp/>is<sp/>already<sp/>at<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(pixel_cntr=0;pixel_cntr&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a37d8fcbe5ffb2d22232f23686b9a49e5" kindref="member">PIXELS_IN_LAST_SECTOR</ref>;pixel_cntr++){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_b[((sector_cntr)*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a562071d491fdd9df96dc360e0d6e15b3" kindref="member">PIXELS_IN_SECTOR_MAP</ref>+<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1abd49c82955e2f3b2572130c856685207" kindref="member">PIXELS_IN_LAST_SECTOR_MAP</ref>)-pixel_cntr-1]<sp/>=<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_a[sector_cntr+pixel_cntr*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a7a99b63166092789a099186cb797e257" kindref="member">SECTORS_IN_PIXIE</ref>];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copying<sp/>buffer<sp/>to<sp/>the<sp/>original<sp/>one<sp/>and<sp/>adding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(pixel_cntr=0;pixel_cntr&lt;(<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1aaf18184b256f606c749991ad158e5b43" kindref="member">MATRIX_DIM_WORDS</ref>);pixel_cntr++)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_a[pixel_cntr]=buffer_b[pixel_cntr];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buffer_b);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//map_data_buffer_on_pixie<sp/>rearranges<sp/>data<sp/>in<sp/>PIXIE<sp/>layout<sp/>taking<sp/>in<sp/>account<sp/>the<sp/>&quot;snake&quot;<sp/>readout<sp/>architecture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8cpp_1a393b1ee19ff33df1bb2910245c043880" kindref="member">map_data_buffer_on_pixie</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*buffer_a){</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>temp_col;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>col_cntr,row_cntr;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_col=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*)calloc(<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_col==NULL)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\r\nDATA<sp/>mapping:Memory<sp/>allocation<sp/>unsuccesfull!!<sp/>Please<sp/>contact<sp/>an<sp/>expert<sp/>:-)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sectors<sp/>0,2,4,6,8,10,12,14<sp/>start<sp/>with<sp/>the<sp/>first<sp/>column(800<sp/>pix)<sp/>in<sp/>the<sp/>right<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sectors<sp/>1,3,5,7,8,11,13,15<sp/>start<sp/>with<sp/>the<sp/>first<sp/>column(800<sp/>pix)<sp/>in<sp/>the<sp/>reversed<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//in<sp/>general<sp/>even<sp/>index<sp/>columns<sp/>has<sp/>the<sp/>right<sp/>dir<sp/>and<sp/>odd<sp/>ones<sp/>are<sp/>reversed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(col_cntr=0;col_cntr&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a0bf424bf8ed271bc080ba848b0f31660" kindref="member">PIXIE_COLS</ref>;col_cntr++){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col_cntr%2)){</highlight><highlight class="comment">//only<sp/>odd<sp/>index<sp/>columns<sp/>are<sp/>reversed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row_cntr=0;row_cntr&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>;row_cntr++){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_col[<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>-row_cntr-1]=buffer_a[col_cntr*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>+row_cntr];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row_cntr=0;row_cntr&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>;row_cntr++){</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_a[col_cntr*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>+row_cntr]=temp_col[row_cntr];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mirroring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(col_cntr=0;col_cntr&lt;PIXIE_COLS/2;col_cntr++){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(row_cntr=0;row_cntr&lt;PIXIE_ROWS;row_cntr++){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_col[row_cntr]=buffer_a[col_cntr*PIXIE_ROWS+row_cntr];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(row_cntr=0;row_cntr&lt;PIXIE_ROWS;row_cntr++){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_a[col_cntr*PIXIE_ROWS+row_cntr]=buffer_a[(PIXIE_COLS-col_cntr-1)*PIXIE_ROWS+row_cntr];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(row_cntr=0;row_cntr&lt;PIXIE_ROWS;row_cntr++){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_a[(PIXIE_COLS-col_cntr-1)*PIXIE_ROWS+row_cntr]=temp_col[row_cntr];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(temp_col);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1);}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8cpp_1a921a833a1f6e228dea39b0aba94bbad5" kindref="member">generate_test_buffer</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*buffer_a,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>type){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_cntr,row_cntr;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(type){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1add21ba3409ea20e55aac68983f0f73ce" kindref="member">GRADIENT</ref>:{</highlight><highlight class="comment">//this<sp/>is<sp/>implemented<sp/>with<sp/>the<sp/>&quot;snake&quot;<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(col_cntr=0;col_cntr&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a0bf424bf8ed271bc080ba848b0f31660" kindref="member">PIXIE_COLS</ref>;col_cntr++){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(col_cntr%2)){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row_cntr=0;row_cntr&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>;row_cntr++){</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_a[col_cntr*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>+row_cntr]=row_cntr+col_cntr;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row_cntr=0;row_cntr&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>;row_cntr++){</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_a[col_cntr*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>+row_cntr]=<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>+col_cntr-row_cntr;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1ab6acc7f7d859c41c00fc2b0aeb6ea225" kindref="member">LINE_45</ref>:{</highlight><highlight class="comment">//this<sp/>is<sp/>implemented<sp/>with<sp/>no<sp/>&quot;snake&quot;<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(col_cntr=0;col_cntr&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a0bf424bf8ed271bc080ba848b0f31660" kindref="member">PIXIE_COLS</ref>;col_cntr++){</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row_cntr=0;row_cntr&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>;row_cntr++){</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(row_cntr==col_cntr)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_a[col_cntr*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>+row_cntr]=500;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_a[col_cntr*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>+row_cntr]=0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a3e13eb9b8f8429a94279ab8fbd0b9a7d" kindref="member">SOMB</ref>:{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>implemented<sp/>with<sp/>no<sp/>&quot;snake&quot;<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(col_cntr=0;col_cntr&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a0bf424bf8ed271bc080ba848b0f31660" kindref="member">PIXIE_COLS</ref>;col_cntr++){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(row_cntr=0;row_cntr&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>;row_cntr++){</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_a[col_cntr*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>+row_cntr]=</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10000/(1+(row_cntr-<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>/2)*(row_cntr-<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>/2)+</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(col_cntr-<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a0bf424bf8ed271bc080ba848b0f31660" kindref="member">PIXIE_COLS</ref>/2)*(col_cntr-<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a0bf424bf8ed271bc080ba848b0f31660" kindref="member">PIXIE_COLS</ref>/2));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n<sp/>unknown<sp/>test<sp/>reqested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8cpp_1a24bd1ed713dc773489d66ab1f3f79535" kindref="member">decode_pixie_data_buffer</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>table,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>databuffer){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1aaf18184b256f606c749991ad158e5b43" kindref="member">MATRIX_DIM_WORDS</ref>;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>databuffer[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]=table[(0x7fff)&amp;<sp/>databuffer[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]];</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8cpp_1aa8f1a1fe1fdd97aeaea4758afd7cbffd" kindref="member">databuffer_filtering</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*buffer_a,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>low_limit,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>high_limit){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,suppressed=0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1acaf400df9a74b3295697ca29cc9261cb" kindref="member">HEADER_LENGTH</ref>;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;(<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a0bf424bf8ed271bc080ba848b0f31660" kindref="member">PIXIE_COLS</ref>*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>)+<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1acaf400df9a74b3295697ca29cc9261cb" kindref="member">HEADER_LENGTH</ref>;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((buffer_a[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]&lt;low_limit)||(buffer_a[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]&gt;high_limit)){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_a[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]=0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suppressed++;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\r\n<sp/>%.2f<sp/>suppressed<sp/>channels&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((suppressed/(<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a0bf424bf8ed271bc080ba848b0f31660" kindref="member">PIXIE_COLS</ref>*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>))*100));</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8cpp_1a1e534f1401f09a882767e6ab34ee5a32" kindref="member">check_data_consistency</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*data_buffer,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>test_pattern){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,total_failed_channels=0,<sp/>partial_failed_channels[<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a5c81db0ba59899d43fd348733272a455" kindref="member">PIXIE_DOUTS</ref>]={0};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>percentage_total_failed_channels,percentage_partial_failed_channels[<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a5c81db0ba59899d43fd348733272a455" kindref="member">PIXIE_DOUTS</ref>]={0};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;(<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a0bf424bf8ed271bc080ba848b0f31660" kindref="member">PIXIE_COLS</ref>*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>);<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++){</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_buffer[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>+<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1acaf400df9a74b3295697ca29cc9261cb" kindref="member">HEADER_LENGTH</ref>]!=test_pattern)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_failed_channels++;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partial_failed_channels[(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>/(<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a1fbd1cc32722d283da6b500da8331323" kindref="member">COLS_PER_DOUT</ref>*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>))]++;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>percentage_total_failed_channels=(double)total_failed_channels*100/(<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a0bf424bf8ed271bc080ba848b0f31660" kindref="member">PIXIE_COLS</ref>*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a5c81db0ba59899d43fd348733272a455" kindref="member">PIXIE_DOUTS</ref>-1;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>percentage_partial_failed_channels[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]=(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)partial_failed_channels[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]*100/(<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a1fbd1cc32722d283da6b500da8331323" kindref="member">COLS_PER_DOUT</ref>*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>percentage_partial_failed_channels[<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a5c81db0ba59899d43fd348733272a455" kindref="member">PIXIE_DOUTS</ref>-1]=</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(double)partial_failed_channels[<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a5c81db0ba59899d43fd348733272a455" kindref="member">PIXIE_DOUTS</ref>-1]*100/(<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a801cb34555f57988a9a9dccdf741c68d" kindref="member">COLS_PER_DOUT_LAST_SECTOR</ref>*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a46b777cd533c09f088f48fc8fa1e4265" kindref="member">PIXIE_ROWS</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\r\n\t<sp/>Found<sp/>a<sp/>total<sp/>of\t%3.2f%%\tbad<sp/>readings&quot;</highlight><highlight class="normal">,<sp/>percentage_total_failed_channels);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a5c81db0ba59899d43fd348733272a455" kindref="member">PIXIE_DOUTS</ref>;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\r\n\t<sp/>Sector<sp/>[%2ld]:\t\t%3.2f%%\tbad<sp/>readings&quot;</highlight><highlight class="normal">,<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,percentage_partial_failed_channels[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8cpp_1ad64dd442f2c8f664444d215ce90899a7" kindref="member">dummy_buffer_init</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*data_buffer,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*namefile){</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>imagefile;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dummy_buff[<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a69629b77e517daf716c92ad1f8418558" kindref="member">FRAME_LENGTH</ref>/2];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>imagefile=fopen(namefile,</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(imagefile==NULL){</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1acaf400df9a74b3295697ca29cc9261cb" kindref="member">HEADER_LENGTH</ref>;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a69629b77e517daf716c92ad1f8418558" kindref="member">FRAME_LENGTH</ref>/2;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_buffer[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]=0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(dummy_buff,1,<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1aaf18184b256f606c749991ad158e5b43" kindref="member">MATRIX_DIM_WORDS</ref>,imagefile);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(imagefile);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1aaf18184b256f606c749991ad158e5b43" kindref="member">MATRIX_DIM_WORDS</ref>;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_buffer[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>+<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1acaf400df9a74b3295697ca29cc9261cb" kindref="member">HEADER_LENGTH</ref>]=dummy_buff[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1a69629b77e517daf716c92ad1f8418558" kindref="member">FRAME_LENGTH</ref>/2;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_buffer[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>+<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1acaf400df9a74b3295697ca29cc9261cb" kindref="member">HEADER_LENGTH</ref>]=0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_p_i_x_i_e_i_i__data__utilities_8cpp_1ab68a12eba15481f88f5399db1263edd3" kindref="member">copy_databuff_to_netbuff</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>databuff,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>netbuff,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>position){</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1acaf400df9a74b3295697ca29cc9261cb" kindref="member">HEADER_LENGTH</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(position==0)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1acaf400df9a74b3295697ca29cc9261cb" kindref="member">HEADER_LENGTH</ref>+<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1aaf18184b256f606c749991ad158e5b43" kindref="member">MATRIX_DIM_WORDS</ref>;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>netbuff[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]=databuff[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//MATRIX_DIM<sp/>is<sp/>intended<sp/>to<sp/>be<sp/>for<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1aaf18184b256f606c749991ad158e5b43" kindref="member">MATRIX_DIM_WORDS</ref>;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>netbuff[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>+<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1acaf400df9a74b3295697ca29cc9261cb" kindref="member">HEADER_LENGTH</ref>+position*<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1aaf18184b256f606c749991ad158e5b43" kindref="member">MATRIX_DIM_WORDS</ref>]=databuff[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>+<ref refid="_p_i_x_i_e_i_i__data__utilities_8h_1acaf400df9a74b3295697ca29cc9261cb" kindref="member">HEADER_LENGTH</ref>];</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/PIXIEII_data_utilities.cpp"/>
  </compounddef>
</doxygen>
