<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="bin_test_8cpp" kind="file" language="C++">
    <compoundname>binTest.cpp</compoundname>
    <includes local="yes">atcore.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/binTest.cpp</label>
        <link refid="bin_test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>atcore.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="bin_test_8cpp_1a564b62d79a7ae62396a48afda474738b" prot="public" static="no">
        <name>NEO_WIDTH</name>
        <initializer>2560</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/binTest.cpp" line="5" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/binTest.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bin_test_8cpp_1a4bc6403c996eaaff295ceaf78f55a489" prot="public" static="no">
        <name>NEO_HEIGHT</name>
        <initializer>2160</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/binTest.cpp" line="6" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/binTest.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bin_test_8cpp_1a7a81971f964a946b1fb9e89b359c27e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int AT_EXP_CONV</type>
        <definition>static int AT_EXP_CONV AOICallback</definition>
        <argsstring>(AT_H handle, const AT_WC *feature, void *context)</argsstring>
        <name>AOICallback</name>
        <param>
          <type>AT_H</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const AT_WC *</type>
          <declname>feature</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/binTest.cpp" line="8" column="24" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/binTest.cpp" bodystart="8" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="bin_test_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/binTest.cpp" line="34" column="5" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/binTest.cpp" bodystart="34" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;atcore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NEO_WIDTH<sp/>2560</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NEO_HEIGHT<sp/>2160</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AT_EXP_CONV<sp/>AOICallback(AT_H<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AT_WC<sp/>*feature,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status=0;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>AT_64<sp/>width,<sp/>left,<sp/>height,<sp/>top;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binning;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>wcout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;AOICallback,<sp/>entry<sp/>feature<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>feature<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>calling<sp/>AT_GetInt<sp/>for<sp/>AOIWidth&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>status<sp/>|=<sp/>AT_GetInt(handle,<sp/>L</highlight><highlight class="stringliteral">&quot;AOIWidth&quot;</highlight><highlight class="normal">,<sp/><sp/>&amp;width);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>calling<sp/>AT_GetInt<sp/>for<sp/>AOILeft&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>status<sp/>|=<sp/>AT_GetInt(handle,<sp/>L</highlight><highlight class="stringliteral">&quot;AOILeft&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>&amp;left);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>calling<sp/>AT_GetInt<sp/>for<sp/>AOIHeight&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>status<sp/>|=<sp/>AT_GetInt(handle,<sp/>L</highlight><highlight class="stringliteral">&quot;AOIHeight&quot;</highlight><highlight class="normal">,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>calling<sp/>AT_GetInt<sp/>for<sp/>AOITop&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>status<sp/>|=<sp/>AT_GetInt(handle,<sp/>L</highlight><highlight class="stringliteral">&quot;AOITop&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>&amp;top);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>calling<sp/>AT_GetEnumIndex<sp/>for<sp/>AOIBinning&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>status<sp/>|=<sp/>AT_GetEnumIndex(handle,<sp/>L</highlight><highlight class="stringliteral">&quot;AOIBinning&quot;</highlight><highlight class="normal">,<sp/>&amp;binning);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>error<sp/>getting<sp/>values,<sp/>error=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>status<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;width=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>width<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>left=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>left<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>height=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>height<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>top=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>top<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bin_test_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_retCode;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>setWidthFirst=0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>1)<sp/>setWidthFirst=1;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initialising<sp/>...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_InitialiseLibrary();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>initialising<sp/>library&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>AT_64<sp/>iNumberDevices<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>AT_GetInt(AT_HANDLE_SYSTEM,<sp/>L</highlight><highlight class="stringliteral">&quot;Device<sp/>Count&quot;</highlight><highlight class="normal">,<sp/>&amp;iNumberDevices);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iNumberDevices<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>cameras<sp/>detected&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>AT_H<sp/>Hndl;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_Open(0,<sp/>&amp;Hndl);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>condition,<sp/>could<sp/>not<sp/>initialise<sp/>camera&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Successfully<sp/>initialised<sp/>camera&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_RegisterFeatureCallback(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;AOIBinning&quot;</highlight><highlight class="normal">,<sp/>AOICallback,<sp/>0);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_RegisterFeatureCallback(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;AOIWidth&quot;</highlight><highlight class="normal">,<sp/>AOICallback,<sp/>0);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_RegisterFeatureCallback(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;AOILeft&quot;</highlight><highlight class="normal">,<sp/>AOICallback,<sp/>0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_RegisterFeatureCallback(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;AOIHeight&quot;</highlight><highlight class="normal">,<sp/>AOICallback,<sp/>0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_RegisterFeatureCallback(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;AOITop&quot;</highlight><highlight class="normal">,<sp/>AOICallback,<sp/>0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numBin<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binValues[]<sp/>=<sp/>{1,2,3,4,8};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>AT_64<sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;numBin;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setWidthFirst)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>binning<sp/>to<sp/>1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i_retCode<sp/>=<sp/>AT_SetEnumIndex(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;AOIBinning&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>binning<sp/>1<sp/>returned<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i_retCode<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>(<ref refid="bin_test_8cpp_1a564b62d79a7ae62396a48afda474738b" kindref="member">NEO_WIDTH</ref><sp/>/<sp/>binValues[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>])<sp/>*<sp/>binValues[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>(<ref refid="bin_test_8cpp_1a4bc6403c996eaaff295ceaf78f55a489" kindref="member">NEO_HEIGHT</ref><sp/>/<sp/>binValues[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>])<sp/>*<sp/>binValues[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i_retCode=<sp/>AT_SetInt(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;AOIWidth&quot;</highlight><highlight class="normal">,<sp/>width);<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>width<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>width<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>returned<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i_retCode<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i_retCode=<sp/>AT_SetInt(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;AOIHeight&quot;</highlight><highlight class="normal">,<sp/>height);<sp/>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>height<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>height<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>returned<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i_retCode<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>binning<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>binValues[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>i_retCode=<sp/>AT_SetEnumIndex(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;AOIBinning&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>binning<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>binValues[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>returned<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i_retCode<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>AT_Close(Hndl);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>AT_FinaliseLibrary();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/binTest.cpp"/>
  </compounddef>
</doxygen>
