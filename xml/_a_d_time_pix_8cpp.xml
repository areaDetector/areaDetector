<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_a_d_time_pix_8cpp" kind="file" language="C++">
    <compoundname>ADTimePix.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">epicsTime.h</includes>
    <includes local="no">epicsThread.h</includes>
    <includes local="no">epicsExit.h</includes>
    <includes local="no">epicsString.h</includes>
    <includes local="no">epicsStdio.h</includes>
    <includes local="no">iocsh.h</includes>
    <includes local="no">epicsExport.h</includes>
    <includes refid="_a_d_time_pix_8h" local="yes">ADTimePix.h</includes>
    <incdepgraph>
      <node id="6">
        <label>sys/stat.h</label>
      </node>
      <node id="12">
        <label>iocsh.h</label>
      </node>
      <node id="17">
        <label>epicsTypes.h</label>
      </node>
      <node id="23">
        <label>NDArray.h</label>
        <link refid="_n_d_array_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>NDAttributeList.h</label>
        <link refid="_n_d_attribute_list_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="20">
        <label>epicsMutex.h</label>
      </node>
      <node id="9">
        <label>epicsExit.h</label>
      </node>
      <node id="30">
        <label>epicsVersion.h</label>
      </node>
      <node id="27">
        <label>string</label>
      </node>
      <node id="14">
        <label>ADTimePix.h</label>
        <link refid="_a_d_time_pix_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>epicsThread.h</label>
      </node>
      <node id="34">
        <label>cpr/cpr.h</label>
      </node>
      <node id="13">
        <label>epicsExport.h</label>
      </node>
      <node id="16">
        <label>ADDriver.h</label>
        <link refid="_a_d_driver_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ADCoreVersion.h</label>
        <link refid="_a_d_core_version_8h"/>
      </node>
      <node id="29">
        <label>ADCoreAPI.h</label>
        <link refid="_a_d_core_a_p_i_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>asynNDArrayDriver.h</label>
        <link refid="asyn_n_d_array_driver_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>epicsString.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="25">
        <label>ellLib.h</label>
      </node>
      <node id="26">
        <label>NDAttribute.h</label>
        <link refid="_n_d_attribute_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>asynDriver.h</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="32">
        <label>Codec.h</label>
        <link refid="_codec_8h"/>
      </node>
      <node id="7">
        <label>epicsTime.h</label>
      </node>
      <node id="22">
        <label>asynPortDriver.h</label>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp</label>
        <link refid="_a_d_time_pix_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>epicsStdio.h</label>
      </node>
      <node id="24">
        <label>set</label>
      </node>
      <node id="35">
        <label>Magick++.h</label>
      </node>
      <node id="15">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="18">
        <label>epicsMessageQueue.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="21">
        <label>epicsEvent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_a_d_time_pix_8cpp_1a351b8552521f29df22aa336bb28e2180" prot="public" static="no">
        <name>ERR</name>
        <param><defname>msg</defname></param>
        <initializer>    asynPrint(pasynUserSelf, ASYN_TRACE_ERROR, &quot;ERROR | %s::%s: %s\n&quot;, driverName, functionName, \
              msg)</initializer>
        <briefdescription>
<para>This is a driver for the TimePix3 pixel array detector. </para>
        </briefdescription>
        <detaileddescription>
<para>Author: Kazimierz Gofron Created On: June, 2022 Last EDited: July 20, 2022 Copyright (c): 2022 Brookhaven National Laboratory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="33" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_time_pix_8cpp_1a02586085698a967f28309aa3d54b43a3" prot="public" static="no">
        <name>ERR_ARGS</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>    asynPrint(pasynUserSelf, ASYN_TRACE_ERROR, &quot;ERROR | %s::%s: &quot; fmt &quot;\n&quot;, driverName, \
              functionName, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="37" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_time_pix_8cpp_1a108d6c5c51dd46e82a62b262394f0242" prot="public" static="no">
        <name>WARN</name>
        <param><defname>msg</defname></param>
        <initializer>    asynPrint(pasynUserSelf, ASYN_TRACE_ERROR, &quot;WARN | %s::%s: %s\n&quot;, driverName, functionName, msg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="42" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_time_pix_8cpp_1a9087c79d24b3564045df0c29ff79e273" prot="public" static="no">
        <name>WARN_ARGS</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>    asynPrint(pasynUserSelf, ASYN_TRACE_ERROR, &quot;WARN | %s::%s: &quot; fmt &quot;\n&quot;, driverName, \
              functionName, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="45" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_time_pix_8cpp_1a158a8c64f24645c7478298399825737f" prot="public" static="no">
        <name>LOG</name>
        <param><defname>msg</defname></param>
        <initializer>    asynPrint(pasynUserSelf, ASYN_TRACEIO_DRIVER, &quot;%s::%s: %s\n&quot;, driverName, functionName, msg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="50" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_time_pix_8cpp_1a3531a4a81cd1f17fca2141ea677208b1" prot="public" static="no">
        <name>LOG_ARGS</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>    asynPrint(pasynUserSelf, ASYN_TRACEIO_DRIVER, &quot;%s::%s: &quot; fmt &quot;\n&quot;, driverName, functionName, \
              __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="53" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" prot="public" static="no">
        <name>FLOW</name>
        <param><defname>msg</defname></param>
        <initializer>    asynPrint(pasynUserSelf, ASYN_TRACE_FLOW, &quot;%s::%s: %s\n&quot;, driverName, functionName, msg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="58" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_time_pix_8cpp_1a19744a426b0c5243084a2a3c2fe23a63" prot="public" static="no">
        <name>FLOW_ARGS</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>    asynPrint(pasynUserSelf, ASYN_TRACE_FLOW, &quot;%s::%s: &quot; fmt &quot;\n&quot;, driverName, functionName, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="61" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_time_pix_8cpp_1aa56511e3e15a1aaee3ea96ac298c4598" prot="public" static="no">
        <name>delim</name>
        <initializer>&quot;/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="64" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" prot="public" static="no">
        <type>nlohmann::json</type>
        <definition>using json =  nlohmann::json</definition>
        <argsstring></argsstring>
        <name>json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="67" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* driverName</definition>
        <argsstring></argsstring>
        <name>driverName</name>
        <initializer>= &quot;ADTimePix&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="73" column="12" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_d_time_pix_8cpp_1a90f7e5addbdbdbace3cf848a4f7b5b26" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg ADTimePixConfigArg0</definition>
        <argsstring></argsstring>
        <name>ADTimePixConfigArg0</name>
        <initializer>= { &quot;Port name&quot;,        iocshArgString }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="2185" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="2185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_d_time_pix_8cpp_1a31149855f38bfc12a0e7e0bfe4a04c89" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg ADTimePixConfigArg1</definition>
        <argsstring></argsstring>
        <name>ADTimePixConfigArg1</name>
        <initializer>= { &quot;Server <ref refid="_u_r_l_test_8cpp_1a41d49c9bf1512077295129c1406be4cd" kindref="member">URL</ref>&quot;,       iocshArgString }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="2186" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="2186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_d_time_pix_8cpp_1a9fafae4c2fee9f50c9f0f3d068eca454" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg ADTimePixConfigArg2</definition>
        <argsstring></argsstring>
        <name>ADTimePixConfigArg2</name>
        <initializer>= { &quot;maxBuffers&quot;,       iocshArgInt }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="2187" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="2187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_d_time_pix_8cpp_1ae68084589ceb69ce96043d6826141e4c" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg ADTimePixConfigArg3</definition>
        <argsstring></argsstring>
        <name>ADTimePixConfigArg3</name>
        <initializer>= { &quot;maxMemory&quot;,        iocshArgInt }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="2188" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="2188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_d_time_pix_8cpp_1a135ba26b242aa7e76505683e0d0620cd" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg ADTimePixConfigArg4</definition>
        <argsstring></argsstring>
        <name>ADTimePixConfigArg4</name>
        <initializer>= { &quot;priority&quot;,         iocshArgInt }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="2189" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="2189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_d_time_pix_8cpp_1a6efa88396f03f940aee8f92b3c74b066" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg ADTimePixConfigArg5</definition>
        <argsstring></argsstring>
        <name>ADTimePixConfigArg5</name>
        <initializer>= { &quot;stackSize&quot;,        iocshArgInt }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="2190" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="2190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_d_time_pix_8cpp_1ac6e799004465cf4d861c811cff12d7bb" prot="public" static="yes" mutable="no">
        <type>const iocshArg *const</type>
        <definition>const iocshArg* const ADTimePixConfigArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>ADTimePixConfigArgs</name>
        <initializer>=
        { &amp;ADTimePixConfigArg0, &amp;ADTimePixConfigArg1, &amp;ADTimePixConfigArg2,
        &amp;ADTimePixConfigArg3, &amp;ADTimePixConfigArg4, &amp;ADTimePixConfigArg5 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="2194" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="2194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_d_time_pix_8cpp_1ac1f7dcb0775093084a81254d6df813aa" prot="public" static="yes" mutable="no">
        <type>const iocshFuncDef</type>
        <definition>const iocshFuncDef configADTimePix</definition>
        <argsstring></argsstring>
        <name>configADTimePix</name>
        <initializer>= { &quot;ADTimePixConfig&quot;, 6, ADTimePixConfigArgs }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="2206" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="2206" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_a_d_time_pix_8cpp_1adcf5fcb8f05141874876cf10fd199400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ADTimePixConfig</definition>
        <argsstring>(const char *portName, const char *serverURL, int maxBuffers, size_t maxMemory, int priority, int stackSize)</argsstring>
        <name>ADTimePixConfig</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>serverURL</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxBuffers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxMemory</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stackSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="94" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="_a_d_time_pix_8cpp_1a4c5f905a072b4f954415995f2d3643ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void exitCallbackC</definition>
        <argsstring>(void *pPvt)</argsstring>
        <name>exitCallbackC</name>
        <param>
          <type>void *</type>
          <declname>pPvt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="107" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="_a_d_time_pix_8cpp_1a9dcd7c1efefe2ed23e40ea49a4b6ebe2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void timePixCallbackC</definition>
        <argsstring>(void *pPvt)</argsstring>
        <name>timePixCallbackC</name>
        <param>
          <type>void *</type>
          <declname>pPvt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="113" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="_a_d_time_pix_8cpp_1a0b8cbab625c4b9d80d790e39db54aa90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>static string strip_quotes</definition>
        <argsstring>(string str)</argsstring>
        <name>strip_quotes</name>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="136" column="15" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="136" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="_a_d_time_pix_8cpp_1a44ec7f2d7afb31109e89440c46fee479" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void configADTimePixCallFunc</definition>
        <argsstring>(const iocshArgBuf *args)</argsstring>
        <name>configADTimePixCallFunc</name>
        <param>
          <type>const iocshArgBuf *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="2200" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="2200" bodyend="2202"/>
      </memberdef>
      <memberdef kind="function" id="_a_d_time_pix_8cpp_1a304ffcf536d06a4cb4920601b987e29b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ADTimePixRegister</definition>
        <argsstring>(void)</argsstring>
        <name>ADTimePixRegister</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="2210" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" bodystart="2210" bodyend="2212"/>
      </memberdef>
      <memberdef kind="function" id="_a_d_time_pix_8cpp_1a3f90a156556283da6a94785a9447ba66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>epicsExportRegistrar</definition>
        <argsstring>(ADTimePixRegister)</argsstring>
        <name>epicsExportRegistrar</name>
        <param>
          <type>ADTimePixRegister</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" line="2217" column="5" declfile="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp" declline="2217" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EPICS<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsTime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsThread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsExit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsString.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsStdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iocsh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsExport.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Area<sp/>Detector<sp/>include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_d_time_pix_8h" kindref="compound">ADTimePix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Error<sp/>message<sp/>formatters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERR(msg)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/>&quot;ERROR<sp/>|<sp/>%s::%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>driverName,<sp/>functionName,<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERR_ARGS(fmt,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/>&quot;ERROR<sp/>|<sp/>%s::%s:<sp/>&quot;</highlight><highlight class="normal"><sp/>fmt<sp/>&quot;\n&quot;,<sp/>driverName,<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functionName,<sp/>__VA_ARGS__)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Warning<sp/>message<sp/>formatters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WARN(msg)<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/>&quot;WARN<sp/>|<sp/>%s::%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>driverName,<sp/>functionName,<sp/>msg)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WARN_ARGS(fmt,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/>&quot;WARN<sp/>|<sp/>%s::%s:<sp/>&quot;</highlight><highlight class="normal"><sp/>fmt<sp/>&quot;\n&quot;,<sp/>driverName,<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functionName,<sp/>__VA_ARGS__)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Log<sp/>message<sp/>formatters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG(msg)<sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACEIO_DRIVER,<sp/>&quot;%s::%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>driverName,<sp/>functionName,<sp/>msg)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_ARGS(fmt,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACEIO_DRIVER,<sp/>&quot;%s::%s:<sp/>&quot;</highlight><highlight class="normal"><sp/>fmt<sp/>&quot;\n&quot;,<sp/>driverName,<sp/>functionName,<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VA_ARGS__)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Flow<sp/>message<sp/>formatters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLOW(msg)<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_FLOW,<sp/>&quot;%s::%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>driverName,<sp/>functionName,<sp/>msg)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLOW_ARGS(fmt,...)<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_FLOW,<sp/>&quot;%s::%s:<sp/>&quot;</highlight><highlight class="normal"><sp/>fmt<sp/>&quot;\n&quot;,<sp/>driverName,<sp/>functionName,<sp/>__VA_ARGS__)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>delim<sp/>&quot;/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>=<sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">nlohmann::json</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Magick;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>any<sp/>additional<sp/>namespaces<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ADTimePix&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>any<sp/>driver<sp/>constants<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADTimePix<sp/>Utility<sp/>Functions<sp/>(Reporting/Logging/ExternalC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>External<sp/>configuration<sp/>function<sp/>for<sp/>ADTimePix.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>Envokes<sp/>the<sp/>constructor<sp/>to<sp/>create<sp/>a<sp/>new<sp/>ADTimePix<sp/>object</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>the<sp/>function<sp/>that<sp/>initializes<sp/>the<sp/>driver,<sp/>and<sp/>is<sp/>called<sp/>in<sp/>the<sp/>IOC<sp/>startup<sp/>script</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>When<sp/>implementing<sp/>a<sp/>new<sp/>driver<sp/>with<sp/>ADDriverTemplate,<sp/>your<sp/>camera<sp/>may<sp/>use<sp/>a<sp/>different<sp/>connection<sp/>method<sp/>than</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>a<sp/>const<sp/>char*<sp/>serverURL.<sp/>Just<sp/>edit<sp/>the<sp/>param<sp/>to<sp/>fit<sp/>your<sp/>device,<sp/>and<sp/>make<sp/>sure<sp/>to<sp/>make<sp/>the<sp/>same<sp/>edit<sp/>to<sp/>the<sp/>constructor<sp/>below</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>@params[in]:<sp/>all<sp/>passed<sp/>into<sp/>constructor</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>@return:<sp/><sp/><sp/><sp/><sp/>status</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_a_d_time_pix_8cpp_1adcf5fcb8f05141874876cf10fd199400" kindref="member">ADTimePixConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>serverURL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize){</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_a_d_time_pix" kindref="compound">ADTimePix</ref>(portName,<sp/>serverURL,<sp/>maxBuffers,<sp/>maxMemory,<sp/>priority,<sp/>stackSize);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynSuccess);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>Callback<sp/>function<sp/>called<sp/>when<sp/>IOC<sp/>is<sp/>terminated.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>Deletes<sp/>created<sp/>object</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>@params[in]:<sp/>pPvt<sp/>-&gt;<sp/>pointer<sp/>to<sp/>the<sp/>ADDRIVERNAMESTANDATD<sp/>object<sp/>created<sp/>in<sp/>ADTimePixConfig</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>@return:<sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exitCallbackC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pPvt){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_d_time_pix" kindref="compound">ADTimePix</ref>*<sp/>pTimePix<sp/>=<sp/>(<ref refid="class_a_d_time_pix" kindref="compound">ADTimePix</ref>*)<sp/>pPvt;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(pTimePix);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>timePixCallbackC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pPvt){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_d_time_pix" kindref="compound">ADTimePix</ref>*<sp/>pTimePix<sp/>=<sp/>(<ref refid="class_a_d_time_pix" kindref="compound">ADTimePix</ref>*)<sp/>pPvt;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>pTimePix-&gt;<ref refid="class_a_d_time_pix_1a0101ad34e4b12e5b1054c718c6f26dac" kindref="member">timePixCallback</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ADTimePix::printConnectedDeviceInfo(){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;--------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Connected<sp/>to<sp/>ADTimePix<sp/>device\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;--------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>any<sp/>information<sp/>you<sp/>wish<sp/>to<sp/>print<sp/>about<sp/>the<sp/>device<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;--------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>std<sp/>strip<sp/>quotes<sp/>around<sp/>string<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>../ADTimePix.cpp:97:6:<sp/>error:<sp/>specializing<sp/>member<sp/>‘std::__cxx11::basic_string&lt;char&gt;::quotes’<sp/>requires<sp/>‘template&lt;&gt;’<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strip_quotes(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str.length()<sp/>&gt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str.substr(1,<sp/>str.length()<sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classasyn_n_d_array_driver_1aba7309da5e7c5571fc693b1998c9d236" kindref="member">ADTimePix::checkPath</ref>(<ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>&amp;filePath)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lastChar;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>buff;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>istat;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isDir=0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pathExists=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>filePath.size();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>path<sp/>contains<sp/>a<sp/>trailing<sp/>&apos;/&apos;<sp/>or<sp/>&apos;\&apos;<sp/>remove<sp/>it,<sp/>because<sp/>Windows<sp/>won&apos;t<sp/>find</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>directory<sp/>if<sp/>it<sp/>has<sp/>that<sp/>trailing<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>lastChar<sp/>=<sp/>filePath[len-1];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastChar<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filePath.resize(len-1);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>istat<sp/>=<sp/>stat(filePath.c_str(),<sp/>&amp;buff);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!istat)<sp/>isDir<sp/>=<sp/>(S_IFDIR<sp/>&amp;<sp/>buff.st_mode);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!istat<sp/>&amp;&amp;<sp/>isDir)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>a<sp/>terminator<sp/>even<sp/>if<sp/>it<sp/>did<sp/>not<sp/>have<sp/>one<sp/>originally<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>filePath.append(<ref refid="_a_d_time_pix_8cpp_1aa56511e3e15a1aaee3ea96ac298c4598" kindref="member">delim</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pathExists;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">asynStatus<sp/>ADTimePix::checkBPCPath()</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>filePath;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pathExists;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADTimePixBPCFilePath,<sp/>filePath);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>checkPath(filePath);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pathExists<sp/>?<sp/>asynSuccess<sp/>:<sp/>asynError;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixBPCFilePath,<sp/>filePath);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixBPCFilePathExists,<sp/>pathExists);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">asynStatus<sp/>ADTimePix::checkDACSPath()</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>filePath;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pathExists;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADTimePixDACSFilePath,<sp/>filePath);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>checkPath(filePath);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pathExists<sp/>?<sp/>asynSuccess<sp/>:<sp/>asynError;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixDACSFilePath,<sp/>filePath);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixDACSFilePathExists,<sp/>pathExists);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">asynStatus<sp/>ADTimePix::checkRawPath()</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>filePath,<sp/>fileOrStream;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pathExists<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADTimePixRawBase,<sp/>filePath);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>&gt;<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.compare(0,6,</highlight><highlight class="stringliteral">&quot;file:/&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>writing<sp/>raw<sp/>.tpx3<sp/>data<sp/>to<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixRawStream,<sp/>0);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(5);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>checkPath(fileOrStream);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.substr(0,7)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;http://&quot;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming,<sp/>http://localhost:8085</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixRawStream,<sp/>1);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(6);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.substr(0,6)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tcp://&quot;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming,<sp/>tcp://localhost:8085</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixRawStream,<sp/>2);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(5);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Raw<sp/>file<sp/>path<sp/>must<sp/>be<sp/>file://path_to_raw_folder,<sp/>or<sp/>tcp://localhost:8085\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixRawStream,<sp/>3);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pathExists<sp/>?<sp/>asynSuccess<sp/>:<sp/>asynError;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixRawBase,<sp/>filePath);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixRawFilePathExists,<sp/>pathExists);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Serval<sp/>3.3.0<sp/>allows<sp/>writing<sp/>raw<sp/>.tpx3<sp/>file,<sp/>and<sp/>stream<sp/>data.<sp/>This<sp/>is<sp/>the<sp/>2nd<sp/>Base<sp/>channel</highlight></codeline>
<codeline lineno="257"><highlight class="comment">*<sp/>to<sp/>either<sp/>write<sp/>.tpx3<sp/>file,<sp/>or<sp/>stream<sp/>to<sp/>socket.</highlight></codeline>
<codeline lineno="258"><highlight class="comment">*<sp/>Operator<sp/>decides<sp/>which<sp/>Raw<sp/>or<sp/>Raw1<sp/>is<sp/>used<sp/>for<sp/>streaming,<sp/>and<sp/>which<sp/>for<sp/>.tpx3<sp/>file.</highlight></codeline>
<codeline lineno="259"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">asynStatus<sp/>ADTimePix::checkRaw1Path()</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>filePath,<sp/>fileOrStream;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pathExists<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADTimePixRaw1Base,<sp/>filePath);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>&gt;<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.compare(0,6,</highlight><highlight class="stringliteral">&quot;file:/&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>writing<sp/>raw<sp/>.tpx3<sp/>data<sp/>to<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixRaw1Stream,<sp/>0);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(5);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>checkPath(fileOrStream);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.substr(0,7)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;http://&quot;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming,<sp/>http://localhost:8085</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixRaw1Stream,<sp/>1);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(6);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.substr(0,6)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tcp://&quot;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming,<sp/>tcp://localhost:8085</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixRaw1Stream,<sp/>2);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(5);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Raw<sp/>file<sp/>path<sp/>must<sp/>be<sp/>file://path_to_raw_folder,<sp/>or<sp/>tcp://localhost:8085\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixRaw1Stream,<sp/>3);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pathExists<sp/>?<sp/>asynSuccess<sp/>:<sp/>asynError;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixRaw1Base,<sp/>filePath);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixRaw1FilePathExists,<sp/>pathExists);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">asynStatus<sp/>ADTimePix::checkImgPath()</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>filePath,<sp/>fileOrStream;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pathExists<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADTimePixImgBase,<sp/>filePath);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>&gt;<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.compare(0,6,</highlight><highlight class="stringliteral">&quot;file:/&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>writing<sp/>images<sp/>to<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(5);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>checkPath(fileOrStream);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.substr(0,7)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;http://&quot;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming,<sp/>http://localhost:8081</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(6);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.substr(0,6)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tcp://&quot;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming,<sp/>tcp://localhost:8085</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(5);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Img<sp/>file<sp/>path<sp/>must<sp/>be<sp/>file://path_to_img_folder,<sp/>or<sp/>tcp://localhost:8088\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pathExists<sp/>?<sp/>asynSuccess<sp/>:<sp/>asynError;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixImgBase,<sp/>filePath);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixImgFilePathExists,<sp/>pathExists);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">asynStatus<sp/>ADTimePix::checkPrvImgPath()</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>filePath,<sp/>fileOrStream;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pathExists<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADTimePixPrvImgBase,<sp/>filePath);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>&gt;<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.compare(0,6,</highlight><highlight class="stringliteral">&quot;file:/&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>writing<sp/>raw<sp/>.tpx3<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(5);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>checkPath(fileOrStream);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.substr(0,7)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;http://&quot;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming,<sp/>http://localhost:8081</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(6);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.substr(0,6)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tcp://&quot;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming,<sp/>tcp://localhost:8085</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(5);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Prv<sp/>file<sp/>path<sp/>must<sp/>be<sp/>file://path_to_img_folder,<sp/>or<sp/>tcp://localhost:8088\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pathExists<sp/>?<sp/>asynSuccess<sp/>:<sp/>asynError;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixPrvImgBase,<sp/>filePath);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixPrvImgFilePathExists,<sp/>pathExists);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">asynStatus<sp/>ADTimePix::checkPrvImg1Path()</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>filePath,<sp/>fileOrStream;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pathExists<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADTimePixPrvImg1Base,<sp/>filePath);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>&gt;<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.compare(0,6,</highlight><highlight class="stringliteral">&quot;file:/&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>writing<sp/>raw<sp/>.tpx3<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(5);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>checkPath(fileOrStream);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.substr(0,7)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;http://&quot;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming,<sp/>http://localhost:8081</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(6);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.substr(0,6)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tcp://&quot;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming,<sp/>tcp://localhost:8085</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(5);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Prv1<sp/>file<sp/>path<sp/>must<sp/>be<sp/>file://path_to_img_folder,<sp/>or<sp/>tcp://localhost:8088\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pathExists<sp/>?<sp/>asynSuccess<sp/>:<sp/>asynError;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixPrvImg1Base,<sp/>filePath);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixPrvImg1FilePathExists,<sp/>pathExists);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal">asynStatus<sp/>ADTimePix::checkPrvHstPath()</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>filePath,<sp/>fileOrStream;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pathExists<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADTimePixPrvHstBase,<sp/>filePath);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.size()<sp/>&gt;<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.compare(0,6,</highlight><highlight class="stringliteral">&quot;file:/&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>writing<sp/>raw<sp/>.tpx3<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(5);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>checkPath(fileOrStream);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.substr(0,7)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;http://&quot;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming,<sp/>http://localhost:8081</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(6);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath.substr(0,6)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tcp://&quot;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming,<sp/>tcp://localhost:8085</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOrStream<sp/>=<sp/>filePath.substr(5);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Prv<sp/>Hstogram<sp/>file<sp/>path<sp/>must<sp/>be<sp/>file://path_to_img_folder,<sp/>or<sp/>tcp://localhost:8088\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathExists<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pathExists<sp/>?<sp/>asynSuccess<sp/>:<sp/>asynError;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixPrvHstBase,<sp/>filePath);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixPrvHstFilePathExists,<sp/>pathExists);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADTimePix<sp/>Connect/Disconnect<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/>Function<sp/>that<sp/>is<sp/>used<sp/>to<sp/>initialize<sp/>and<sp/>connect<sp/>to<sp/>the<sp/>device.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>Again,<sp/>it<sp/>is<sp/>possible<sp/>that<sp/>for<sp/>your<sp/>camera,<sp/>a<sp/>different<sp/>connection<sp/>type<sp/>is<sp/>used<sp/>(such<sp/>as<sp/>a<sp/>product<sp/>ID<sp/>[int])</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*<sp/>Make<sp/>sure<sp/>you<sp/>use<sp/>the<sp/>same<sp/>connection<sp/>type<sp/>as<sp/>passed<sp/>in<sp/>the<sp/>ADTimePixConfig<sp/>function<sp/>and<sp/>in<sp/>the<sp/>constructor.</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*<sp/>@params[in]:<sp/>serverURL<sp/><sp/><sp/><sp/>-&gt;<sp/>serial<sp/>number<sp/>of<sp/>camera<sp/>to<sp/>connect<sp/>to.<sp/>Passed<sp/>through<sp/>IOC<sp/>shell</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*<sp/>@return:<sp/><sp/><sp/><sp/><sp/>status<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>success<sp/>if<sp/>connected,<sp/>error<sp/>if<sp/>not<sp/>connected</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal">asynStatus<sp/>ADTimePix::initialServerCheckConnection(){</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;initialServerCheckConnection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implement<sp/>connecting<sp/>to<sp/>the<sp/>camera<sp/>here:<sp/>check<sp/>welcome<sp/>URL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Usually<sp/>the<sp/>vendor<sp/>provides<sp/>examples<sp/>of<sp/>how<sp/>to<sp/>do<sp/>this<sp/>with<sp/>the<sp/>library/SDK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>GET<sp/>request<sp/>and<sp/>compare<sp/>if<sp/>URI<sp/>status<sp/>response<sp/>code<sp/>is<sp/>200.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{this-&gt;serverURL},</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC},</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Parameters{{</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">}});</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Status<sp/>code:<sp/>%li\n&quot;,<sp/>r.status_code);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Header:\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(const<sp/>pair&lt;string,<sp/>string&gt;&amp;<sp/>kv<sp/>:<sp/>r.header)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>printf(&quot;\t%s:%s\n&quot;,kv.first.c_str(),kv.second.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Text:<sp/>%s\n&quot;,<sp/>r.text.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.status_code<sp/>==<sp/>200)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n\nCONNECTED<sp/>to<sp/>Welcom<sp/>URI!<sp/>(Serval<sp/>running),<sp/>http_code<sp/>=<sp/>%li\n&quot;</highlight><highlight class="normal">,<sp/>r.status_code);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;asynSuccess!<sp/>%d\n\n&quot;,<sp/>asynSuccess);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixHttpCode,<sp/>r.status_code);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>detector<sp/>is<sp/>connected<sp/>to<sp/>serval<sp/>from<sp/>dashboard<sp/>URL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>serval,<sp/>and<sp/>connection<sp/>to<sp/>Tpx3<sp/>detector<sp/>must<sp/>be<sp/>successful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>dashboard;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>dashboard<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/dashboard&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ServerURL/dashboard<sp/>=%s\n&quot;</highlight><highlight class="normal">,<sp/>dashboard.c_str());</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{dashboard},</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC},</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Parameters{{</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">}});</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Status<sp/>code:<sp/>%li\n&quot;</highlight><highlight class="normal">,<sp/>r.status_code);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Text:\n<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>r.text.c_str());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>dashboard_j<sp/>=<sp/>json::parse(r.text.c_str());</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;Dashboard<sp/>text<sp/>JSON:<sp/>%s\n&quot;,<sp/>dashboard_j.dump(3,&apos;<sp/>&apos;,<sp/>true).c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>strip<sp/>double<sp/>quote<sp/>from<sp/>beginning<sp/>and<sp/>end<sp/>of<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>API_Ver,<sp/>API_TS;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>API_Ver<sp/>=<sp/>strip_quotes(dashboard_j[</highlight><highlight class="stringliteral">&quot;Server&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;SoftwareVersion&quot;</highlight><highlight class="normal">].dump()).c_str();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>API_TS<sp/>=<sp/>strip_quotes(dashboard_j[</highlight><highlight class="stringliteral">&quot;Server&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;SoftwareTimestamp&quot;</highlight><highlight class="normal">].dump()).c_str();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sets<sp/>Serval<sp/>Firmware<sp/>Version,<sp/>manufacturer,<sp/>TimeStamp<sp/>PV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADSDKVersion,<sp/>API_Ver.c_str());</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADManufacturer,<sp/></highlight><highlight class="stringliteral">&quot;ASI&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixFWTimeStamp,<sp/>API_TS.c_str());</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;After<sp/>Serval<sp/>Version!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>Detector<sp/>connected?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>Detector,<sp/>DetType;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>Detector<sp/>=<sp/>dashboard_j[</highlight><highlight class="stringliteral">&quot;Detector&quot;</highlight><highlight class="normal">].dump().c_str();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(Detector.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DetType<sp/>=<sp/>strip_quotes(dashboard_j[</highlight><highlight class="stringliteral">&quot;Detector&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;DetectorType&quot;</highlight><highlight class="normal">].dump()).c_str();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(ADTimePixDetType,<sp/>DetType.c_str());</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(ADModel,<sp/>DetType.c_str());</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Detector<sp/>NOT<sp/>CONNECTED,<sp/>Detector=%s\n&quot;</highlight><highlight class="normal">,<sp/>Detector.c_str());</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(ADTimePixDetType,<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(connected)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Failed<sp/>to<sp/>connect<sp/>to<sp/>server<sp/>%s&quot;</highlight><highlight class="normal">,this-&gt;serverURL.c_str());</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>to<sp/>EPICS,<sp/>at<sp/>end<sp/>of<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">asynStatus<sp/>ADTimePix::getDashboard(){</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;getDashboard&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Collecting<sp/>detector<sp/>information&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>dashboard;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>vendor<sp/>library<sp/>to<sp/>collect<sp/>information<sp/>about<sp/>the<sp/>connected<sp/>camera<sp/>here,<sp/>and<sp/>set<sp/>the<sp/>appropriate<sp/>PVs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>you<sp/>check<sp/>if<sp/>camera<sp/>is<sp/>connected<sp/>before<sp/>calling<sp/>on<sp/>it<sp/>for<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setStringParam(ADManufacturer,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_____________);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setStringParam(ADSerialNumber,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_____________);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setStringParam(ADFirmwareVersion,<sp/><sp/><sp/><sp/><sp/>&quot;Server&quot;-&gt;&quot;SoftwareVersion&quot;<sp/>:<sp/>&quot;2.3.6&quot;,);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setStringParam(ADModel,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_____________);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Server&quot;<sp/>:<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;SoftwareVersion&quot;<sp/>:<sp/>&quot;2.3.6&quot;,</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;DiskSpace&quot;<sp/>:<sp/>[<sp/>],</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;SoftwareTimestamp&quot;<sp/>:<sp/>&quot;2022/01/05<sp/>11:07&quot;,</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Notifications&quot;<sp/>:<sp/>[<sp/>]</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Measurement&quot;<sp/>:<sp/>null,</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Detector&quot;<sp/>:<sp/>null</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>dashboard<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/dashboard&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;ServerURL/dashboard=%s\n&quot;,<sp/>dashboard.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{dashboard},</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC},</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Parameters{{</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">}});</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Status<sp/>code:<sp/>%li\n&quot;,<sp/>r.status_code);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Text:<sp/>%s\n&quot;,<sp/>r.text.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>dashboard_j<sp/>=<sp/>json::parse(r.text.c_str());</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dashboard_j[&quot;Server&quot;][&quot;SoftwareVersion&quot;]<sp/>=<sp/>&quot;2.4.2&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Text<sp/>JSON:<sp/>%s\n&quot;,<sp/>dashboard_j.dump(3,&apos;<sp/>&apos;,<sp/>true).c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DiskSpace<sp/>is<sp/>an<sp/>empty<sp/>array<sp/>until<sp/>raw<sp/>file<sp/>writing<sp/>selected,<sp/>and<sp/>acquisition<sp/>starts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dashboard_j[</highlight><highlight class="stringliteral">&quot;Server&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;DiskSpace&quot;</highlight><highlight class="normal">].empty())<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setInteger64Param(ADTimePixFreeSpace,<sp/><sp/><sp/>dashboard_j[</highlight><highlight class="stringliteral">&quot;Server&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;DiskSpace&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;FreeSpace&quot;</highlight><highlight class="normal">].get&lt;long&gt;());</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixWriteSpeed,<sp/><sp/><sp/><sp/><sp/>dashboard_j[</highlight><highlight class="stringliteral">&quot;Server&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;DiskSpace&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;WriteSpeed&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setInteger64Param(ADTimePixLowerLimit,<sp/><sp/>dashboard_j[</highlight><highlight class="stringliteral">&quot;Server&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;DiskSpace&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;LowerLimit&quot;</highlight><highlight class="normal">].get&lt;long&gt;());</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixLLimReached,<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(dashboard_j[</highlight><highlight class="stringliteral">&quot;Server&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;DiskSpace&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;DiskLimitReached&quot;</highlight><highlight class="normal">]));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool-&gt;int<sp/>true-&gt;1,<sp/>falue-&gt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal">asynStatus<sp/>ADTimePix::getHealth(){</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;getHealth&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Checking<sp/>Health&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>health;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>health<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/detector/health&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Health,<sp/>%s\n&quot;,<sp/>health.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{health},</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC},</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Parameters{{</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">}});<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Status<sp/>code:<sp/>%li\n&quot;,<sp/>r.status_code);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>health_j<sp/>=<sp/>json::parse(r.text.c_str());</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Text<sp/>JSON:<sp/>%s\n&quot;,<sp/>health_j.dump(3,&apos;<sp/>&apos;,<sp/>true).c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;%lf\n&quot;,<sp/>health_j[&quot;ChipTemperatures&quot;].get&lt;double&gt;());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Chip<sp/>Temperatures<sp/>%s,<sp/>%s\n&quot;,<sp/>health_j[&quot;ChipTemperatures&quot;].dump().c_str(),<sp/>health_j[&quot;VDD&quot;][1].dump().c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixLocalTemp,<sp/>health_j[</highlight><highlight class="stringliteral">&quot;LocalTemperature&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixFPGATemp,<sp/>health_j[</highlight><highlight class="stringliteral">&quot;FPGATemperature&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixFan1Speed,<sp/>health_j[</highlight><highlight class="stringliteral">&quot;Fan1Speed&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixFan2Speed,<sp/>health_j[</highlight><highlight class="stringliteral">&quot;Fan2Speed&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixBiasVoltage,<sp/>health_j[</highlight><highlight class="stringliteral">&quot;BiasVoltage&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixChipTemperature,<sp/>health_j[</highlight><highlight class="stringliteral">&quot;ChipTemperatures&quot;</highlight><highlight class="normal">].dump().c_str());</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixVDD,<sp/>health_j[</highlight><highlight class="stringliteral">&quot;VDD&quot;</highlight><highlight class="normal">].dump().c_str());</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixAVDD,<sp/>health_j[</highlight><highlight class="stringliteral">&quot;AVDD&quot;</highlight><highlight class="normal">].dump().c_str());</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal">asynStatus<sp/>ADTimePix::writeLayout()<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intNum;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>layout_url<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/detector/layout/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixDetectorOrientation,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>detectorOrientation;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>detectorOrientation[0]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>detectorOrientation[1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RIGHT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>detectorOrientation[2]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DOWN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>detectorOrientation[3]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;LEFT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>detectorOrientation[4]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UP_MIRRORED&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>detectorOrientation[5]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RIGHT_MIRRORED&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>detectorOrientation[6]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DOWN_MIRRORED&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>detectorOrientation[7]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;LEFT_MIRRORED&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>json_data<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;DetectorOrientation\&quot;:\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(detectorOrientation[intNum])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Layout,layout_url=%s\n&quot;,<sp/>layout_url.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Layout,json<sp/>data=%s\n&quot;,<sp/>json_data.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Put(</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Url{layout_url},</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Body{json_data},</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Header{{</highlight><highlight class="stringliteral">&quot;Content-Type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;application/json&quot;</highlight><highlight class="normal">}}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.status_code<sp/>!=<sp/>200)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>failed<sp/>with<sp/>status<sp/>code:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.status_code<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal">asynStatus<sp/>ADTimePix::writeDac(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chip,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>dac,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>dac_url<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/detector/chips/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>std::to_string(chip)<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/dacs/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>json_data<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>dac<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Put(</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Url{dac_url},</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Body{json_data},</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Header{{</highlight><highlight class="stringliteral">&quot;Content-Type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;application/json&quot;</highlight><highlight class="normal">}}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.status_code<sp/>!=<sp/>200)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>failed<sp/>with<sp/>status<sp/>code:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.status_code<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal">asynStatus<sp/>ADTimePix::fetchDacs(<ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref>&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chip)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixCP_PLL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Ibias_CP_PLL&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixDiscS1OFF,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Ibias_DiscS1_OFF&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixDiscS1ON,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Ibias_DiscS1_ON&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixDiscS2OFF,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Ibias_DiscS2_OFF&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixDiscS2ON,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Ibias_DiscS2_ON&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixIkrum,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Ibias_Ikrum&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixPixelDAC,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Ibias_PixelDAC&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixPreampOFF,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Ibias_Preamp_OFF&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixPreampON,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Ibias_Preamp_ON&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixTPbufferIn,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Ibias_TPbufferIn&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixTPbufferOut,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Ibias_TPbufferOut&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixPLL_Vcntrl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;PLL_Vcntrl&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixVPreampNCAS,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;VPreamp_NCAS&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixVTPcoarse,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;VTP_coarse&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixVTPfine,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;VTP_fine&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixVfbk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Vfbk&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixVthresholdCoarse,<sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Vthreshold_coarse&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixVthresholdFine,<sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;DACs&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Vthreshold_fine&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;Adjust&quot;</highlight><highlight class="normal">].is_null())<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixAdjust,<sp/>-1);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;Adjust&quot;</highlight><highlight class="normal">].is_number_integer())<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixAdjust,<sp/>data[</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip][</highlight><highlight class="stringliteral">&quot;Adjust&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(chip,<sp/>ADTimePixAdjust,<sp/>-2);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">asynStatus<sp/>ADTimePix::getDetector(){</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;getDetector&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>Detector<sp/>Health,<sp/>inof,<sp/>config,<sp/>chipcs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/><ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8a9b2ce7fbca521a5b3b440b7d598b72df" kindref="member">detector</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8a9b2ce7fbca521a5b3b440b7d598b72df" kindref="member">detector</ref><sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/detector&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{<ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8a9b2ce7fbca521a5b3b440b7d598b72df" kindref="member">detector</ref>},</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC},</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Parameters{{</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">}});<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>detector_j<sp/>=<sp/>json::parse(r.text.c_str());</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Number<sp/>of<sp/>chips=%d\n&quot;,<sp/>detector_j[&quot;Info&quot;][&quot;NumberOfChips&quot;].get&lt;int&gt;());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detector<sp/>health<sp/>PVs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixLocalTemp,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Health&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;LocalTemperature&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixFPGATemp,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Health&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;FPGATemperature&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixFan1Speed,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Health&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Fan1Speed&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixFan2Speed,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Health&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Fan2Speed&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixBiasVoltage,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Health&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;BiasVoltage&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixHumidity,<sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Health&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Humidity&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixChipTemperature,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Health&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ChipTemperatures&quot;</highlight><highlight class="normal">].dump().c_str());</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixVDD,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Health&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;VDD&quot;</highlight><highlight class="normal">].dump().c_str());</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixAVDD,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Health&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;AVDD&quot;</highlight><highlight class="normal">].dump().c_str());</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detector<sp/>Info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixIfaceName,<sp/><sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;IfaceName&quot;</highlight><highlight class="normal">].dump().c_str()));</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setStringParam(ADTimePixChipboardID,<sp/>strip_quotes(detector_j[&quot;Info&quot;][&quot;ChipboardID&quot;].dump().c_str()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixSW_version,<sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;SW_version&quot;</highlight><highlight class="normal">].dump().c_str()));</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixFW_version,<sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;FW_version&quot;</highlight><highlight class="normal">].dump().c_str()));</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>setStringParam(ADSerialNumber,<sp/><sp/><sp/><sp/><sp/><sp/>strip_quotes(detector_j[&quot;Info&quot;][&quot;ChipboardID&quot;].dump().c_str()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADSerialNumber,<sp/><sp/><sp/><sp/><sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;SW_version&quot;</highlight><highlight class="normal">].dump().c_str()));</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADFirmwareVersion,<sp/><sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;FW_version&quot;</highlight><highlight class="normal">].dump().c_str()));</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixPixCount,<sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;PixCount&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixRowLen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;RowLen&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixNumberOfChips,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;NumberOfChips&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixNumberOfRows,<sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;NumberOfRows&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADMaxSizeY,<sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;NumberOfRows&quot;</highlight><highlight class="normal">].get&lt;int&gt;());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sensor<sp/>Size<sp/>Y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADMaxSizeX,<sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;PixCount&quot;</highlight><highlight class="normal">].get&lt;int&gt;()<sp/>/<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;NumberOfRows&quot;</highlight><highlight class="normal">].get&lt;int&gt;());<sp/><sp/></highlight><highlight class="comment">//<sp/>Sensor<sp/>Size<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixMpxType,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;MpxType&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixBoardsID,<sp/><sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Boards&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;ChipboardId&quot;</highlight><highlight class="normal">].dump().c_str()));</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixBoardsIP,<sp/><sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Boards&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;IpAddress&quot;</highlight><highlight class="normal">].dump().c_str()));</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixBoardsCh1,<sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Boards&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][0].dump().c_str()));</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixBoardsCh2,<sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Boards&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][1].dump().c_str()));</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixBoardsCh3,<sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Boards&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][2].dump().c_str()));</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixBoardsCh4,<sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Boards&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][3].dump().c_str()));</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixSuppAcqModes,<sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;SuppAcqModes&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixClockReadout,<sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ClockReadout&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixMaxPulseCount,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;MaxPulseCount&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixMaxPulseHeight,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;MaxPulseHeight&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixMaxPulsePeriod,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;MaxPulsePeriod&quot;</highlight><highlight class="normal">].get&lt;double&gt;());<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixTimerMaxVal,<sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TimerMaxVal&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixTimerMinVal,<sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TimerMinVal&quot;</highlight><highlight class="normal">].get&lt;double&gt;());<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixTimerStep,<sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TimerStep&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixClockTimepix,<sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ClockTimepix&quot;</highlight><highlight class="normal">].get&lt;double&gt;());<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detector<sp/>Config<sp/>Readback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixFan1PWM,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Fan1PWM&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixFan2PWM,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Fan2PWM&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixBiasVolt,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;BiasVoltage&quot;</highlight><highlight class="normal">].get&lt;int&gt;());<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixBiasEnable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;BiasEnabled&quot;</highlight><highlight class="normal">]));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool-&gt;int<sp/>true-&gt;1,<sp/>falue-&gt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>setStringParam(ADTimePixChainMode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strip_quotes(detector_j[&quot;Config&quot;][&quot;ChainMode&quot;].dump().c_str()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixTriggerIn,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TriggerIn&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixTriggerOut,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TriggerOut&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>setStringParam(ADTimePixPolarity,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strip_quotes(detector_j[&quot;Config&quot;][&quot;Polarity&quot;].dump().c_str()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixTriggerMode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TriggerMode&quot;</highlight><highlight class="normal">].dump().c_str()));</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setStringParam(ADTriggerMode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strip_quotes(detector_j[&quot;Config&quot;][&quot;TriggerMode&quot;].dump().c_str()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixExposureTime,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ExposureTime&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADAcquireTime,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ExposureTime&quot;</highlight><highlight class="normal">].get&lt;double&gt;());<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exposure<sp/>Time<sp/>RBV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixTriggerPeriod,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TriggerPeriod&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADAcquirePeriod,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TriggerPeriod&quot;</highlight><highlight class="normal">].get&lt;double&gt;());<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exposure<sp/>Period<sp/>RBV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixnTriggers,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;nTriggers&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixPeriphClk80,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;PeriphClk80&quot;</highlight><highlight class="normal">]));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool-&gt;int<sp/>true-&gt;1,<sp/>falue-&gt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixTriggerDelay,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TriggerDelay&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixTdc,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strip_quotes(detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Tdc&quot;</highlight><highlight class="normal">].dump().c_str()));<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixGlobalTimestampInterval,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;GlobalTimestampInterval&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixExternalReferenceClock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ExternalReferenceClock&quot;</highlight><highlight class="normal">]));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool-&gt;int<sp/>true-&gt;1,<sp/>falue-&gt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixLogLevel,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;LogLevel&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detector<sp/>Chips:<sp/>Chip0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>fetchDacs(detector_j,<sp/>0);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serval3<sp/>-<sp/>Detector<sp/>Chip<sp/>Layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixDetectorOrientation,<sp/>mDetOrientationMap[detector_j[</highlight><highlight class="stringliteral">&quot;Layout&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;DetectorOrientation&quot;</highlight><highlight class="normal">].dump().c_str()]);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(0,<sp/>ADTimePixLayout,<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Layout&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Original&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][0].dump().c_str());</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_chips<sp/>=<sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;NumberOfChips&quot;</highlight><highlight class="normal">].get&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chip<sp/>=<sp/>1;<sp/>chip<sp/>&lt;<sp/>number_chips;<sp/>chip++)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fetchDacs(detector_j,<sp/>chip);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chip,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADTimePixLayout,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector_j[</highlight><highlight class="stringliteral">&quot;Layout&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Original&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Chips&quot;</highlight><highlight class="normal">][chip].dump().c_str()</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks(chip);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal">asynStatus<sp/>ADTimePix::getServer(){</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;getServer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Collecting<sp/>detector<sp/>information&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>server;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>vendor<sp/>library<sp/>to<sp/>collect<sp/>information<sp/>about<sp/>the<sp/>camera<sp/>format<sp/>here,<sp/>and<sp/>set<sp/>the<sp/>appropriate<sp/>PVs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Destination&quot;<sp/>:<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Raw&quot;<sp/>:<sp/>[<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Base&quot;<sp/>:<sp/>&quot;file:///home/kgofron/Downloads&quot;,</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;FilePattern&quot;<sp/>:<sp/>&quot;raw%Hms_&quot;,</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;SplitStrategy&quot;<sp/>:<sp/>&quot;SINGLE_FILE&quot;,</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;QueueSize&quot;<sp/>:<sp/>16384</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>],</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Image&quot;<sp/>:<sp/>[<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Base&quot;<sp/>:<sp/>&quot;file:///home/kgofron/Downloads/TimePix/20220105-asi-server-236-tpx3/examples/tpx3/data&quot;,</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;FilePattern&quot;<sp/>:<sp/>&quot;f%Hms_&quot;,</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Format&quot;<sp/>:<sp/>&quot;tiff&quot;,</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Mode&quot;<sp/>:<sp/>&quot;tot&quot;,</highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Thresholds&quot;<sp/>:<sp/>[<sp/>0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7<sp/>],</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;IntegrationSize&quot;<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;StopMeasurementOnDiskLimit&quot;<sp/>:<sp/>true,</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;QueueSize&quot;<sp/>:<sp/>1024</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>]</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>server<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{server},</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC},</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Parameters{{</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">}});<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Status<sp/>code<sp/>server:<sp/>%li\n&quot;</highlight><highlight class="normal">,<sp/>r.status_code);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Text<sp/>server:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>r.text.c_str());<sp/></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>server_j<sp/>=<sp/>json::parse(r.text.c_str());</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Destination&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Raw&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Base&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;file:///home/kgofron/Downloads&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Text<sp/>JSON<sp/>server:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>server_j.dump(3,</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">).c_str());<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r3<sp/>=<sp/>cpr::Put(cpr::Url{server},</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Body{server_j.dump().c_str()},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Header{{</highlight><highlight class="stringliteral">&quot;Content-Type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">}});</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Status<sp/>code:<sp/>%li\n&quot;</highlight><highlight class="normal">,<sp/>r3.status_code);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Text:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>r3.text.c_str());</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal">asynStatus<sp/>ADTimePix::uploadBPC(){</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;uploadBPC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>BPC<sp/>detector<sp/>information&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>bpc_file,<sp/>filePath,<sp/>fileName;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>bpc_file<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/>std::string(&quot;/config/load?format=pixelconfig&amp;file=&quot;)<sp/>+<sp/>std::string(&quot;/epics/src/RHEL8/support/areaDetector/ADTimePix/vendor/tpx3-demo.bpc&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADTimePixBPCFilePath,<sp/>filePath);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADTimePixBPCFileName,<sp/>fileName);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>bpc_file<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/config/load?format=pixelconfig&amp;file=&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(filePath)<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(fileName);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{bpc_file},</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC});</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Status<sp/>code<sp/>bpc_file:<sp/>%li\n&quot;</highlight><highlight class="normal">,<sp/>r.status_code);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Text<sp/>bpc_file:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>r.text.c_str());</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixHttpCode,<sp/>r.status_code);<sp/></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixWriteMsg,<sp/>r.text.c_str());</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal">asynStatus<sp/>ADTimePix::uploadDACS(){</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;uploadDACS&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>Chips/DACS<sp/>detector<sp/>information&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>dacs_file,<sp/>filePath,<sp/>fileName;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>dacs_file<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/>std::string(&quot;/config/load?format=dacs&amp;file=&quot;)<sp/>+<sp/>std::string(&quot;/epics/src/RHEL8/support/areaDetector/ADTimePix/vendor/tpx3-demo.dacs&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADTimePixDACSFilePath,<sp/>filePath);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADTimePixDACSFileName,<sp/>fileName);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>dacs_file<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/config/load?format=dacs&amp;file=&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(filePath)<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(fileName);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{dacs_file},</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC});</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Status<sp/>code<sp/>dacs_file:<sp/>%li\n&quot;</highlight><highlight class="normal">,<sp/>r.status_code);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Text<sp/>dacs_file:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>r.text.c_str());<sp/></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixHttpCode,<sp/>r.status_code);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixWriteMsg,<sp/>r.text.c_str());<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal">asynStatus<sp/>ADTimePix::fileWriter(){</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fileWriter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>detector<sp/>information&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>fileStr;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intNum,<sp/>writeChannel,<sp/>rawStream;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>doubleNum;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>server;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>server<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/server/destination&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{server},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{&quot;user&quot;,<sp/>&quot;pass&quot;,<sp/>cpr::AuthMode::BASIC},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Parameters{{&quot;anon&quot;,<sp/>&quot;true&quot;},<sp/>{&quot;key&quot;,<sp/>&quot;value&quot;}});<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Status<sp/>code<sp/>server:<sp/>%li\n&quot;,<sp/>r.status_code);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//printf(&quot;Text<sp/>server:<sp/>%s\n&quot;,<sp/>r.text.c_str());<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>json<sp/>server_j<sp/>=<sp/>json::parse(r.text.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//printf(&quot;server=%s\n&quot;,server_j.dump(3,&apos;<sp/>&apos;,<sp/>true).c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>server_j;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>imgFormat<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;tiff&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;pgm&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;png&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;jsonimage&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;jsonhisto&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>imgMode<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tot&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;toa&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tof&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;count_fb&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>samplingMode<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;skipOnFrame&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;skipOnPeriod&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixWriteRaw,<sp/>&amp;writeChannel);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixRawStream,<sp/>&amp;rawStream);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writeChannel<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Raw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(ADTimePixRawBase,<sp/>fileStr);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Raw&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Base&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fileStr;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(ADTimePixRawFilePat,<sp/>fileStr);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Raw&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;FilePattern&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fileStr;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rawStream<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file:/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixRawSplitStrategy,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>splitStrategy<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;single_file&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Raw&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;SplitStrategy&quot;</highlight><highlight class="normal">]<sp/>=<sp/>splitStrategy[intNum];</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Serval<sp/>3.3.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixWriteRaw1,<sp/>&amp;writeChannel);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixRaw1Stream,<sp/>&amp;rawStream);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writeChannel<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Raw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(ADTimePixRaw1Base,<sp/>fileStr);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Raw&quot;</highlight><highlight class="normal">][1][</highlight><highlight class="stringliteral">&quot;Base&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fileStr;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(ADTimePixRaw1FilePat,<sp/>fileStr);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Raw&quot;</highlight><highlight class="normal">][1][</highlight><highlight class="stringliteral">&quot;FilePattern&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fileStr;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rawStream<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file:/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixRaw1SplitStrategy,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>splitStrategy<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;single_file&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Raw&quot;</highlight><highlight class="normal">][1][</highlight><highlight class="stringliteral">&quot;SplitStrategy&quot;</highlight><highlight class="normal">]<sp/>=<sp/>splitStrategy[intNum];</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixWriteImg,<sp/>&amp;writeChannel);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writeChannel<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(ADTimePixImgBase,<sp/>fileStr);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Image&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Base&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fileStr;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(ADTimePixImgFilePat,<sp/>fileStr);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Image&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;FilePattern&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fileStr;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixImgFormat,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Image&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Format&quot;</highlight><highlight class="normal">]<sp/>=<sp/>imgFormat[intNum];</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixImgMode,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Image&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Mode&quot;</highlight><highlight class="normal">]<sp/>=<sp/>imgMode[intNum];</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preview</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>getDoubleParam(ADTimePixPrvPeriod,<sp/>&amp;doubleNum);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>server_j[&quot;Preview&quot;][&quot;Period&quot;]<sp/>=<sp/>doubleNum;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixPrvSamplingMode,<sp/>&amp;intNum);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>server_j[&quot;Preview&quot;][&quot;SamplingMode&quot;]<sp/>=<sp/>samplingMode[intNum];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixWritePrvImg,<sp/>&amp;writeChannel);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writeChannel<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preview,<sp/>ImageChannels[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(ADTimePixPrvPeriod,<sp/>&amp;doubleNum);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Period&quot;</highlight><highlight class="normal">]<sp/>=<sp/>doubleNum;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixPrvSamplingMode,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;SamplingMode&quot;</highlight><highlight class="normal">]<sp/>=<sp/>samplingMode[intNum];<sp/></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(ADTimePixPrvImgBase,<sp/>fileStr);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ImageChannels&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Base&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fileStr;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(ADTimePixPrvImgFilePat,<sp/>fileStr);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ImageChannels&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;FilePattern&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fileStr;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixPrvImgFormat,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ImageChannels&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Format&quot;</highlight><highlight class="normal">]<sp/>=<sp/>imgFormat[intNum];</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixPrvImgMode,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ImageChannels&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Mode&quot;</highlight><highlight class="normal">]<sp/>=<sp/>imgMode[intNum];</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixWritePrvImg1,<sp/>&amp;writeChannel);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writeChannel<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preview,<sp/>ImageChannels[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(ADTimePixPrvImg1Base,<sp/>fileStr);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ImageChannels&quot;</highlight><highlight class="normal">][1][</highlight><highlight class="stringliteral">&quot;Base&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fileStr;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(ADTimePixPrvImg1FilePat,<sp/>fileStr);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ImageChannels&quot;</highlight><highlight class="normal">][1][</highlight><highlight class="stringliteral">&quot;FilePattern&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fileStr;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixPrvImg1Format,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ImageChannels&quot;</highlight><highlight class="normal">][1][</highlight><highlight class="stringliteral">&quot;Format&quot;</highlight><highlight class="normal">]<sp/>=<sp/>imgFormat[intNum];</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixPrvImg1Mode,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ImageChannels&quot;</highlight><highlight class="normal">][1][</highlight><highlight class="stringliteral">&quot;Mode&quot;</highlight><highlight class="normal">]<sp/>=<sp/>imgMode[intNum];</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixWritePrvHst,<sp/>&amp;writeChannel);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writeChannel<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preview,<sp/>HistogramChannels[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(ADTimePixPrvHstBase,<sp/>fileStr);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;HistogramChannels&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Base&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fileStr;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(ADTimePixPrvHstFilePat,<sp/>fileStr);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;HistogramChannels&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;FilePattern&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fileStr;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixPrvHstFormat,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;HistogramChannels&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Format&quot;</highlight><highlight class="normal">]<sp/>=<sp/>imgFormat[intNum];</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixPrvHstMode,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_j[</highlight><highlight class="stringliteral">&quot;Preview&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;HistogramChannels&quot;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&quot;Mode&quot;</highlight><highlight class="normal">]<sp/>=<sp/>imgMode[intNum];</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;server=%s\n&quot;</highlight><highlight class="normal">,server_j.dump(3,</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Put(cpr::Url{server},</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Body{server_j.dump().c_str()},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Header{{</highlight><highlight class="stringliteral">&quot;Content-Type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">}});</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;Status<sp/>code:<sp/>%li\n&quot;,<sp/>r.status_code);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;Text:<sp/>%s\n&quot;,<sp/>r.text.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixHttpCode,<sp/>r.status_code);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixWriteMsg,<sp/>r.text.c_str());<sp/></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal">asynStatus<sp/>ADTimePix::initCamera(){</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;initCamera&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>detector&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>,<sp/>bpc_file,<sp/>dacs_file;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref><sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/detector/config&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>bpc_file<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/config/load?format=pixelconfig&amp;file=&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/epics/src/RHEL8/support/areaDetector/ADTimePix/vendor/tpx3-demo.bpc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>dacs_file<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/config/load?format=dacs&amp;file=&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/epics/src/RHEL8/support/areaDetector/ADTimePix/vendor/tpx3-demo.dacs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{bpc_file},</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC});</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Status<sp/>code<sp/>bpc_file:<sp/>%li\n&quot;</highlight><highlight class="normal">,<sp/>r.status_code);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Text<sp/>bpc_file:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>r.text.c_str());</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixHttpCode,<sp/>r.status_code);<sp/></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixWriteMsg,<sp/>r.text.c_str());</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{dacs_file},</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC});</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Status<sp/>code<sp/>dacs_file:<sp/>%li\n&quot;</highlight><highlight class="normal">,<sp/>r.status_code);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Text<sp/>dacs_file:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>r.text.c_str());<sp/></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixHttpCode,<sp/>r.status_code);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixWriteMsg,<sp/>r.text.c_str());<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detector<sp/>configuration<sp/>file<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>},</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC},</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Parameters{{</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">}});<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>config_j<sp/>=<sp/>json::parse(r.text.c_str());</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;BiasVoltage&quot;</highlight><highlight class="normal">]<sp/>=<sp/>103;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;BiasEnabled&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//config_j[&quot;Destination&quot;][&quot;Raw&quot;][0][&quot;Base&quot;]<sp/>=<sp/>&quot;file:///home/kgofron/Downloads&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Text<sp/>JSON<sp/>server:<sp/>%s\n&quot;,<sp/>config_j.dump(3,&apos;<sp/>&apos;,<sp/>true).c_str());<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>cpr::Put(cpr::Url{<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>},</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Body{config_j.dump().c_str()},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Header{{</highlight><highlight class="stringliteral">&quot;Content-Type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">}});</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Status<sp/>code:<sp/>%li\n&quot;</highlight><highlight class="normal">,<sp/>r.status_code);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Text:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>r.text.c_str());</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal">asynStatus<sp/>ADTimePix::initAcquisition(){</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;initAcquisition&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>Acquisition&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>det_config;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intNum;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>doubleNum,<sp/>doubleTmp;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>det_config<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/detector/config&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{det_config},</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC},</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Parameters{{</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">}});<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Status<sp/>code<sp/>server:<sp/>%li\n&quot;,<sp/>r.status_code);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Text<sp/>server:<sp/>%s\n&quot;,<sp/>r.text.c_str());<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>config_j<sp/>=<sp/>json::parse(r.text.c_str());</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;det_config=%s\n&quot;,config_j.dump(3,&apos;<sp/>&apos;,<sp/>true).c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTriggerMode,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>triggerMode;<sp/></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerMode[0]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PEXSTART_NEXSTOP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerMode[1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NEXSTART_PEXSTOP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerMode[2]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PEXSTART_TIMERSTOP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerMode[3]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NEXSTART_TIMERSTOP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerMode[4]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AUTOTRIGSTART_TIMERSTOP&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerMode[5]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CONTINUOUS&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerMode[6]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SOFTWARESTART_TIMERSTOP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerMode[7]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SOFTWARESTART_SOFTWARESTOP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;TriggerMode&quot;</highlight><highlight class="normal">]<sp/>=<sp/>triggerMode[intNum];</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;triggerMode=%s\n&quot;,triggerMode.dump().c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;triggerMode[intNum]=%s,<sp/>triggMode_num=%d\n&quot;,triggerMode[intNum].dump().c_str(),<sp/>intNum);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//config_j[&quot;TriggerMode&quot;]=&quot;AUTOTRIGSTART_TIMERSTOP&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intNum<sp/>==<sp/>5)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Continuous<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(ADAcquireTime,<sp/>&amp;doubleNum);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;ExposureTime&quot;</highlight><highlight class="normal">]<sp/>=<sp/>doubleNum;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;TriggerPeriod&quot;</highlight><highlight class="normal">]<sp/>=<sp/>doubleNum;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(ADAcquireTime,<sp/>&amp;doubleNum);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;ExposureTime&quot;</highlight><highlight class="normal">]<sp/>=<sp/>doubleNum;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doubleTmp<sp/>=<sp/>doubleNum;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(ADAcquirePeriod,<sp/>&amp;doubleNum);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doubleNum<sp/>&lt;=<sp/>doubleTmp<sp/>+<sp/>0.003)<sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doubleNum<sp/>=<sp/>doubleTmp<sp/>+<sp/>0.003;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;TriggerPeriod&quot;</highlight><highlight class="normal">]<sp/>=<sp/>doubleNum;<sp/><sp/></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;TriggerPeriod&quot;</highlight><highlight class="normal">]<sp/>=<sp/>doubleNum;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADNumImages,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;nTriggers&quot;</highlight><highlight class="normal">]<sp/>=<sp/>intNum;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixBiasVolt,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;BiasVoltage&quot;</highlight><highlight class="normal">]<sp/>=<sp/>intNum;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixBiasVolt,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;BiasVoltage&quot;</highlight><highlight class="normal">]<sp/>=<sp/>intNum;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixBiasEnable,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>biasEnabled;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>biasEnabled[0]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>biasEnabled[1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;BiasEnabled&quot;</highlight><highlight class="normal">]<sp/>=<sp/>biasEnabled[intNum];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixChainMode,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>chainMode;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>chainMode[0]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NONE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>chainMode[1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;LEADER&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>chainMode[2]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FOLLOWER&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;ChainMode&quot;</highlight><highlight class="normal">]<sp/>=<sp/>chainMode[intNum];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixPolarity,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>polarity;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>polarity[0]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Positive&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>polarity[1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Negative&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;Polarity&quot;</highlight><highlight class="normal">]<sp/>=<sp/>polarity[intNum];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixTriggerIn,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;TriggerIn&quot;</highlight><highlight class="normal">]<sp/>=<sp/>intNum;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixTriggerOut,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;TriggerOut&quot;</highlight><highlight class="normal">]<sp/>=<sp/>intNum;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(ADTimePixTriggerDelay,<sp/>&amp;doubleNum);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;TriggerDelay&quot;</highlight><highlight class="normal">]<sp/>=<sp/>doubleNum;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(ADTimePixGlobalTimestampInterval,<sp/>&amp;doubleNum);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;GlobalTimestampInterval&quot;</highlight><highlight class="normal">]<sp/>=<sp/>doubleNum;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixTdc0,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>tdc;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>tdc[0]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;P0123&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>tdc[1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;N0123&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>tdc[2]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PN0123&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>tdc[3]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;P0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>tdc[4]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;N0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>tdc[5]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PN0&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;Tdc&quot;</highlight><highlight class="normal">][0]<sp/>=<sp/>tdc[intNum];<sp/></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixTdc1,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>tdc[0]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;P0123&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>tdc[1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;N0123&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>tdc[2]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PN0123&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>tdc[3]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;P0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>tdc[4]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;N0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>tdc[5]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PN0&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;Tdc&quot;</highlight><highlight class="normal">][1]<sp/>=<sp/>tdc[intNum];<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixExternalReferenceClock,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>externalClock;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>externalClock[0]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>externalClock[1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;ExternalReferenceClock&quot;</highlight><highlight class="normal">]<sp/>=<sp/>externalClock[intNum];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixPeriphClk80,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>peripheralClock80;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>peripheralClock80[0]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>peripheralClock80[1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;PeriphClk80&quot;</highlight><highlight class="normal">]<sp/>=<sp/>peripheralClock80[intNum];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixLogLevel,<sp/>&amp;intNum);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>config_j[</highlight><highlight class="stringliteral">&quot;LogLevel&quot;</highlight><highlight class="normal">]<sp/>=<sp/>intNum;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>cpr::Put(cpr::Url{det_config},</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Body{config_j.dump().c_str()},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Header{{</highlight><highlight class="stringliteral">&quot;Content-Type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">}});</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Status<sp/>code:<sp/>%li\n&quot;,<sp/>r.status_code);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Text:<sp/>%s\n&quot;,<sp/>r.text.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixWriteMsg,<sp/>r.text.c_str());<sp/></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADTimePix<sp/>Acquisition<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1320"><highlight class="comment">#####################################################################################################################</highlight></codeline>
<codeline lineno="1321"><highlight class="comment">#</highlight></codeline>
<codeline lineno="1322"><highlight class="comment">#<sp/>The<sp/>next<sp/>two<sp/>functions<sp/>can<sp/>be<sp/>used<sp/>when<sp/>a<sp/>seperate<sp/>image<sp/>acquisition<sp/>thread<sp/>is<sp/>required<sp/>by<sp/>the<sp/>driver.<sp/></highlight></codeline>
<codeline lineno="1323"><highlight class="comment">#<sp/>Some<sp/>vendor<sp/>software<sp/>already<sp/>creates<sp/>its<sp/>own<sp/>acquisition<sp/>thread<sp/>for<sp/>asynchronous<sp/>use,<sp/>but<sp/>if<sp/>not<sp/>this</highlight></codeline>
<codeline lineno="1324"><highlight class="comment">#<sp/>must<sp/>be<sp/>used.<sp/>By<sp/>default,<sp/>the<sp/>acquireStart()<sp/>function<sp/>is<sp/>written<sp/>to<sp/>not<sp/>use<sp/>these.<sp/>If<sp/>they<sp/>are<sp/>needed,<sp/></highlight></codeline>
<codeline lineno="1325"><highlight class="comment">#<sp/>find<sp/>the<sp/>call<sp/>to<sp/>tpx3Callback<sp/>in<sp/>acquireStart(),<sp/>and<sp/>change<sp/>it<sp/>to<sp/>startImageAcquisitionThread</highlight></codeline>
<codeline lineno="1326"><highlight class="comment">#</highlight></codeline>
<codeline lineno="1327"><highlight class="comment">#####################################################################################################################</highlight></codeline>
<codeline lineno="1328"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal">asynStatus<sp/>ADTimePix::acquireStart(){</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;acquireStart&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADStatus,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea197b4bb1a794d6799db204a5dec4fbd2" kindref="member">ADStatusAcquire</ref>);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsThreadOpts<sp/>opts<sp/>=<sp/>EPICS_THREAD_OPTS_INIT;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>opts.joinable<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>startMeasurementURL<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/measurement/start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{startMeasurementURL},</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC},</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Parameters{{</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">}});</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.status_code<sp/>!=<sp/>200){</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a351b8552521f29df22aa336bb28e2180" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>start<sp/>measurement!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;callbackThreadId<sp/>=<sp/>epicsThreadCreateOpt(</highlight><highlight class="stringliteral">&quot;timePixCallback&quot;</highlight><highlight class="normal">,<sp/>timePixCallbackC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;opts);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;acquiring<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_d_time_pix_1a0101ad34e4b12e5b1054c718c6f26dac" kindref="member">ADTimePix::timePixCallback</ref>(){</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;timePixCallback&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numImages;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageCounter;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imagesAcquired;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_frame_num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isIdle<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>writeChannel;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref>*<sp/>pImage;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arrayCallbacks;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeStamp<sp/>startTime,<sp/>endTime;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>elapsedTime;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>API_Ver;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADImageMode,<sp/>&amp;mode);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(NDArrayCallbacks,<sp/>&amp;arrayCallbacks);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>measurement<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/measurement&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Url<sp/>url<sp/>=<sp/>cpr::Url{measurement};</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Session<sp/>session;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Stateful<sp/>piece<sp/>of<sp/>the<sp/>library<sp/>is<sp/>needed<sp/>for<sp/>while<sp/>loop.<sp/>This<sp/>avoids<sp/>open<sp/>connections<sp/>otherwise<sp/>generated<sp/>in<sp/>while<sp/>loop<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/>session.SetOption(url);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::ReserveSize<sp/>reserveSize<sp/>=<sp/>cpr::ReserveSize{1024<sp/>*<sp/>1024<sp/>*<sp/>4};<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reserve<sp/>space<sp/>for<sp/>at<sp/>least<sp/>1<sp/>million<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>session.SetOption(reserveSize);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//session.SetReserveSize(reserveSize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Authentication<sp/>authentication<sp/>=<sp/>cpr::Authentication(</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>session.SetOption(authentication);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Parameters<sp/>parameters<sp/>=<sp/>cpr::Parameters{{</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>session.SetOption(parameters);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>session.Get();</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>measurement_j<sp/>=<sp/>json::parse(r.text.c_str());</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixPelRate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;PixelEventRate&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADSDKVersion,<sp/>API_Ver);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((API_Ver<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.2.0&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(API_Ver<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.3.0&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixTdc1Rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Tdc1EventRate&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixTdc2Rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Tdc2EventRate&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((API_Ver<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.1.1&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(API_Ver<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.0.0&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixTdc1Rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TdcEventRate&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Serval<sp/>Version<sp/>not<sp/>compared,<sp/>event<sp/>rate<sp/>not<sp/>read\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>setInteger64Param(ADTimePixStartTime,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;StartDateTime&quot;</highlight><highlight class="normal">].get&lt;long&gt;());</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixElapsedTime,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ElapsedTime&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixTimeLeft,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TimeLeft&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixFrameCount,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;FrameCount&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixDroppedFrames,<sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;DroppedFrames&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixStatus,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Status&quot;</highlight><highlight class="normal">].dump().c_str());<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(this-&gt;acquiring){</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADNumImages,<sp/>&amp;numImages);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADNumImagesCounter,<sp/>&amp;imageCounter);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(NDArrayCounter,<sp/>&amp;imagesAcquired);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;startTime);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(frameCounter<sp/>==<sp/>new_frame_num){</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>session.Get();<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>stateful<sp/>read<sp/>to<sp/>avoid<sp/>TIME_WAIT<sp/>&quot;multiplicaiton&quot;<sp/>of<sp/>sessions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j<sp/>=<sp/>json::parse(r.text.c_str());</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixPelRate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;PixelEventRate&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((API_Ver<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.2.0&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(API_Ver<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.3.0&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixTdc1Rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Tdc1EventRate&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixTdc2Rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Tdc2EventRate&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((API_Ver<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.1.0&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(API_Ver<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.0.0&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixTdc1Rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TdcEventRate&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Serval<sp/>Version<sp/>event<sp/>rate<sp/>not<sp/>specified<sp/>in<sp/>while<sp/>loop.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setInteger64Param(ADTimePixStartTime,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;StartDateTime&quot;</highlight><highlight class="normal">].get&lt;long&gt;());</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixElapsedTime,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ElapsedTime&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixTimeLeft,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TimeLeft&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixFrameCount,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;FrameCount&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixDroppedFrames,<sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;DroppedFrames&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(ADTimePixStatus,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Status&quot;</highlight><highlight class="normal">].dump().c_str());</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_frame_num<sp/>=<sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;FrameCount&quot;</highlight><highlight class="normal">].get&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Status&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DA_IDLE&quot;</highlight><highlight class="normal"><sp/>||<sp/>this-&gt;acquiring<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isIdle<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;endTime);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elapsedTime<sp/>=<sp/>epicsTimeDiffInSeconds(&amp;endTime,<sp/>&amp;startTime);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0.0006-&gt;0.97<sp/>s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elapsedTime<sp/>=<sp/>r.elapsed;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>0.00035<sp/>s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Elapsed<sp/>Time<sp/>=<sp/>%f\n&quot;,<sp/>elapsedTime);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadSleep(0.1);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>epicsThreadSleep(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCounter<sp/>=<sp/>new_frame_num;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADTimePixWritePrvImg,<sp/>&amp;writeChannel);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writeChannel<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preview,<sp/>ImageChannels[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;acquiring){</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynStatus<sp/>imageStatus<sp/>=<sp/>readImage();</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imageStatus<sp/>==<sp/>asynSuccess)<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageCounter++;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imagesAcquired++;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage<sp/>=<sp/>this-&gt;pArrays[0];</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>frame<sp/>number<sp/>and<sp/>time<sp/>stamp<sp/>into<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1a62f165653bd0099f31b3d276bdb81d3c" kindref="member">uniqueId</ref><sp/>=<sp/>imageCounter;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1ac449943846ba4c5c18aa1ca5559470c2" kindref="member">timeStamp</ref><sp/>=<sp/>startTime.secPastEpoch<sp/>+<sp/>startTime.nsec<sp/>/<sp/>1.e9;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateTimeStamp(&amp;pImage-&gt;<ref refid="class_n_d_array_1a107537f0e084674fbec9225cf63c3979" kindref="member">epicsTS</ref>);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>any<sp/>attributes<sp/>that<sp/>have<sp/>been<sp/>defined<sp/>for<sp/>this<sp/>driver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getAttributes(pImage-&gt;<ref refid="class_n_d_array_1af5aad7b41118f465621cf045ed957469" kindref="member">pAttributeList</ref>);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arrayCallbacks)<sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>NDArray<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;calling<sp/>imageData<sp/>callback&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doCallbacksGenericPointer(pImage,<sp/>NDArrayData,<sp/>0);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mode<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquireStop();</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mode<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numImages<sp/>==<sp/>imageCounter){</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquireStop();</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADNumImagesCounter,<sp/>frameCounter);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(NDArrayCounter,<sp/>imagesAcquired);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isIdle)<sp/><sp/>acquireStop();</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal">asynStatus<sp/>ADTimePix::acquireStop(){</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;acquireStop&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>API_Ver;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;acquiring=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;callbackThreadId<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadMustJoin(this-&gt;callbackThreadId);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;callbackThreadId<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>stopMeasurementURL<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/measurement/stop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>cpr::Response<sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{stopMeasurementURL},</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC},</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Parameters{{</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">}});</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.status_code<sp/>!=<sp/>200){</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a351b8552521f29df22aa336bb28e2180" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>stop<sp/>measurement!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADStatus,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5aabf2281b95d16f607f1a7b1c5a8bd" kindref="member">ADStatusIdle</ref>);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADAcquire,<sp/>0);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Stopping<sp/>Image<sp/>Acquisition&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>end<sp/>measurement<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>measurementURL<sp/>=<sp/>this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/measurement&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>cpr::Get(cpr::Url{measurementURL},</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Authentication{</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass&quot;</highlight><highlight class="normal">,<sp/>cpr::AuthMode::BASIC},</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpr::Parameters{{</highlight><highlight class="stringliteral">&quot;anon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">}});</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.status_code<sp/>!=<sp/>200){</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a351b8552521f29df22aa336bb28e2180" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>stop<sp/>measurement!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>measurement_j<sp/>=<sp/>json::parse(r.text.c_str());</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixPelRate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;PixelEventRate&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>getStringParam(ADSDKVersion,<sp/>API_Ver);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((API_Ver<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.2.0&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(API_Ver<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.3.0&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixTdc1Rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Tdc1EventRate&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixTdc2Rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Tdc2EventRate&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((API_Ver<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.1.1&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(API_Ver<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.0.0&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixTdc1Rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TdcEventRate&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Serval<sp/>Version<sp/>not<sp/>compared,<sp/>event<sp/>rate<sp/>not<sp/>read<sp/>in<sp/>acquireStop\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>setInteger64Param(ADTimePixStartTime,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;StartDateTime&quot;</highlight><highlight class="normal">].get&lt;long&gt;());</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixElapsedTime,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;ElapsedTime&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(ADTimePixTimeLeft,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;TimeLeft&quot;</highlight><highlight class="normal">].get&lt;double&gt;());</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixFrameCount,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;FrameCount&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADTimePixDroppedFrames,<sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;DroppedFrames&quot;</highlight><highlight class="normal">].get&lt;int&gt;());</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixStatus,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement_j[</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;Status&quot;</highlight><highlight class="normal">].dump().c_str());</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADD<sp/>ANY<sp/>OTHER<sp/>SETTER<sp/>CAMERA<sp/>FUNCTIONS<sp/>HERE,<sp/>ADD<sp/>CALL<sp/>THEM<sp/>IN<sp/>WRITE<sp/>INT32/FLOAT64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADDriver<sp/>function<sp/>overwrites</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal">asynStatus<sp/><ref refid="class_a_d_time_pix_1a2cf1821c26ed9febbe71faf9a5757fbd" kindref="member">ADTimePix::writeOctet</ref>(asynUser<sp/>*pasynUser,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nChars,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*nActual)</highlight></codeline>
<codeline lineno="1604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addr;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*paramName;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;writeOctet&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>parseAsynUser(pasynUser,<sp/>&amp;</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>&amp;addr,<sp/>&amp;paramName);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>parameter<sp/>in<sp/>the<sp/>parameter<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>(asynStatus)setStringParam(addr,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixBPCFilePath)<sp/><sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>this-&gt;checkBPCPath();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixDACSFilePath)<sp/>{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>this-&gt;checkDACSPath();</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixRawBase)<sp/>{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>this-&gt;checkRawPath();</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixRaw1Base)<sp/>{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>this-&gt;checkRaw1Path();</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixImgBase)<sp/>{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>this-&gt;checkImgPath();<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixPrvImgBase)<sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>this-&gt;checkPrvImgPath();</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixPrvImg1Base)<sp/>{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>this-&gt;checkPrvImg1Path();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixPrvHstBase)<sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>this-&gt;checkPrvHstPath();</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>callbacks<sp/>so<sp/>higher<sp/>layers<sp/>see<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>(asynStatus)callParamCallbacks(addr,<sp/>addr);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(pasynUser-&gt;errorMessage,<sp/>pasynUser-&gt;errorMessageSize,</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>status=%d,<sp/>function=%d,<sp/>paramName=%s,<sp/>value=%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>status,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>paramName,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a3531a4a81cd1f17fca2141ea677208b1" kindref="member">LOG_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;function=%d,<sp/>paramName=%s,<sp/>value=%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>paramName,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>*nActual<sp/>=<sp/>nChars;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1648"><highlight class="comment"><sp/>*<sp/>Function<sp/>overwriting<sp/>ADDriver<sp/>base<sp/>function.</highlight></codeline>
<codeline lineno="1649"><highlight class="comment"><sp/>*<sp/>Takes<sp/>in<sp/>a<sp/>function<sp/>(PV)<sp/>changes,<sp/>and<sp/>a<sp/>value<sp/>it<sp/>is<sp/>changing<sp/>to,<sp/>and<sp/>processes<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="1650"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1651"><highlight class="comment"><sp/>*<sp/>@params[in]:<sp/>pasynUser<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>asyn<sp/>client<sp/>who<sp/>requests<sp/>a<sp/>write</highlight></codeline>
<codeline lineno="1652"><highlight class="comment"><sp/>*<sp/>@params[in]:<sp/>value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>int32<sp/>value<sp/>to<sp/>write</highlight></codeline>
<codeline lineno="1653"><highlight class="comment"><sp/>*<sp/>@return:<sp/>asynStatus<sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>success<sp/>if<sp/>write<sp/>was<sp/>successful,<sp/>else<sp/>failure</highlight></codeline>
<codeline lineno="1654"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal">asynStatus<sp/><ref refid="class_a_d_time_pix_1a7754482c2c46b9f1ff429f78774c0188" kindref="member">ADTimePix::writeInt32</ref>(asynUser*<sp/>pasynUser,<sp/>epicsInt32<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>){</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>acquiring;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;writeInt32&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;getAddress(pasynUser,<sp/>&amp;addr);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADAcquire,<sp/>&amp;acquiring);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setIntegerParam(addr,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start/stop<sp/>acquisition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADAcquire){</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;SAW<sp/>ACQUIRE<sp/>CHANGE!,<sp/>status=%d\n&quot;</highlight><highlight class="normal">,<sp/>status);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&amp;&amp;<sp/>!acquiring){</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Entering<sp/>aquire\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>acquireStart();</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&amp;&amp;<sp/>acquiring){</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Entering<sp/>acquire<sp/>stop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquireStop();</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADImageMode){</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(acquiring<sp/>==<sp/>1)<sp/>acquireStop();</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADNumImages,1);<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>number<sp/>of<sp/>images<sp/>to<sp/>1<sp/>for<sp/>single<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>initAcquisition();</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixVthresholdFine)<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeDac(addr,<sp/></highlight><highlight class="stringliteral">&quot;Vthreshold_fine&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixVthresholdCoarse)<sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeDac(addr,<sp/></highlight><highlight class="stringliteral">&quot;Vthreshold_coarse&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixHealth)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>status<sp/>=<sp/>getHealth();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>getDashboard();</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>getDetector();</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixWriteBPCFile)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>uploadBPC();</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixWriteDACSFile)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>uploadDACS();</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixWriteData)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>fileWriter();</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixBiasVolt<sp/>||<sp/>ADTimePixBiasEnable<sp/>||<sp/>ADTimePixTriggerIn<sp/>||<sp/>ADTimePixTriggerOut<sp/>||<sp/>ADTimePixLogLevel<sp/>\</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>ADTimePixExternalReferenceClock<sp/>||<sp/>ADTimePixChainMode)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>and<sp/>enable<sp/>bias,<sp/>log<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>initAcquisition();</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTimePixDetectorOrientation)<sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeLayout();</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADNumImages<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADTriggerMode)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADNumImages)<sp/>{</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageMode;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADImageMode,&amp;imageMode);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imageMode<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>!=<sp/>1)<sp/>{status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a351b8552521f29df22aa336bb28e2180" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>set<sp/>numImages<sp/>in<sp/>single<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess)<sp/>status<sp/>=<sp/>initAcquisition();</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>&lt;<sp/><ref refid="_a_d_time_pix_8h_1a26931b23194e644ec0b53a52e3ab37c7" kindref="member">ADTIMEPIX_FIRST_PARAM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_a_d_driver_1abef6916bb90d032a1aeb6894adef12a6" kindref="member">ADDriver::writeInt32</ref>(pasynUser,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>callbacks<sp/>so<sp/>higher<sp/>layers<sp/>see<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks(addr);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log<sp/>status<sp/>updates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status){</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>status=%d<sp/>function=%d,<sp/>value=%d&quot;</highlight><highlight class="normal">,<sp/>status,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="_a_d_time_pix_8cpp_1a3531a4a81cd1f17fca2141ea677208b1" kindref="member">LOG_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;function=%d<sp/>value=%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1755"><highlight class="comment"><sp/>*<sp/>Function<sp/>overwriting<sp/>ADDriver<sp/>base<sp/>function.</highlight></codeline>
<codeline lineno="1756"><highlight class="comment"><sp/>*<sp/>Takes<sp/>in<sp/>a<sp/>function<sp/>(PV)<sp/>changes,<sp/>and<sp/>a<sp/>value<sp/>it<sp/>is<sp/>changing<sp/>to,<sp/>and<sp/>processes<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="1757"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>the<sp/>same<sp/>functionality<sp/>as<sp/>writeInt32,<sp/>but<sp/>for<sp/>processing<sp/>doubles.</highlight></codeline>
<codeline lineno="1758"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1759"><highlight class="comment"><sp/>*<sp/>@params[in]:<sp/>pasynUser<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>asyn<sp/>client<sp/>who<sp/>requests<sp/>a<sp/>write</highlight></codeline>
<codeline lineno="1760"><highlight class="comment"><sp/>*<sp/>@params[in]:<sp/>value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>int32<sp/>value<sp/>to<sp/>write</highlight></codeline>
<codeline lineno="1761"><highlight class="comment"><sp/>*<sp/>@return:<sp/>asynStatus<sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>success<sp/>if<sp/>write<sp/>was<sp/>successful,<sp/>else<sp/>failure</highlight></codeline>
<codeline lineno="1762"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal">asynStatus<sp/><ref refid="class_a_d_time_pix_1a88586d27d3f327a5c4a32996b3febc48" kindref="member">ADTimePix::writeFloat64</ref>(asynUser*<sp/>pasynUser,<sp/>epicsFloat64<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>){</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>acquiring;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;writeFloat64&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(ADAcquire,<sp/>&amp;acquiring);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setDoubleParam(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADAcquireTime<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>ADAcquirePeriod<sp/>||<sp/>ADTimePixTriggerDelay<sp/>||<sp/>ADTimePixGlobalTimestampInterval){</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(acquiring)<sp/>acquireStop();</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>initAcquisition();</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>&lt;<sp/><ref refid="_a_d_time_pix_8h_1a26931b23194e644ec0b53a52e3ab37c7" kindref="member">ADTIMEPIX_FIRST_PARAM</ref>){</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>ADDriver::writeFloat64(pasynUser,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status){</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>status<sp/>=<sp/>%d,<sp/>function<sp/>=%d,<sp/>value<sp/>=<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>status,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="_a_d_time_pix_8cpp_1a3531a4a81cd1f17fca2141ea677208b1" kindref="member">LOG_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;function=%d<sp/>value=%f&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1794"><highlight class="comment"><sp/>*<sp/>Function<sp/>used<sp/>for<sp/>reporting<sp/>ADUVC<sp/>device<sp/>and<sp/>library<sp/>information<sp/>to<sp/>a<sp/>external</highlight></codeline>
<codeline lineno="1795"><highlight class="comment"><sp/>*<sp/>log<sp/>file.<sp/>The<sp/>function<sp/>first<sp/>prints<sp/>all<sp/>libuvc<sp/>specific<sp/>information<sp/>to<sp/>the<sp/>file,</highlight></codeline>
<codeline lineno="1796"><highlight class="comment"><sp/>*<sp/>then<sp/>continues<sp/>on<sp/>to<sp/>the<sp/>base<sp/>ADDriver<sp/>&apos;report&apos;<sp/>function</highlight></codeline>
<codeline lineno="1797"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1798"><highlight class="comment"><sp/>*<sp/>@params[in]:<sp/>fp<sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>pointer<sp/>to<sp/>log<sp/>file</highlight></codeline>
<codeline lineno="1799"><highlight class="comment"><sp/>*<sp/>@params[in]:<sp/>details<sp/>-&gt;<sp/>number<sp/>of<sp/>details<sp/>to<sp/>write<sp/>to<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="1800"><highlight class="comment"><sp/>*<sp/>@return:<sp/>void</highlight></codeline>
<codeline lineno="1801"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ADTimePix::report(FILE*<sp/>fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>details){</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;report&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a351b8552521f29df22aa336bb28e2180" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;reporting<sp/>to<sp/>external<sp/>log<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(details<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-------------------------------------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Connected<sp/>Device<sp/>Information\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GET<sp/>CAMERA<sp/>INFORMATION<sp/>HERE<sp/>AND<sp/>PRINT<sp/>IT<sp/>TO<sp/>fp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADSizeX,<sp/>&amp;width);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(ADSizeY,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Image<sp/>Width<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/><sp/><sp/><sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>width);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Image<sp/>Height<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/><sp/><sp/><sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>height);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-------------------------------------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1ac3f2d73a05eb54357ec3f052e1b000f2" kindref="member">ADDriver::report</ref>(fp,<sp/>details);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal">asynStatus<sp/>ADTimePix::readImage()</highlight></codeline>
<codeline lineno="1824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>char<sp/>URLString[MAX_FILENAME_LEN];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>URLString=this-&gt;serverURL<sp/>+<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;/measurement/image&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dims[3];</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndims;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows,<sp/>ncols;</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pxrd2__interface__misc_8h_1a3154c405c975616503bac23f51b78fc0" kindref="member">ImageType</ref><sp/>imageType;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>StorageType<sp/>storageType;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16" kindref="member">NDDataType_t</ref><sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812" kindref="member">NDColorMode_t</ref><sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref>;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_n_d_array_info" kindref="compound">NDArrayInfo_t</ref><sp/>arrayInfo;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage<sp/>=<sp/>this-&gt;pArrays[0];</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*map;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;readImage&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.read(URLString);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageType<sp/>=<sp/>image.type();</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth<sp/>=<sp/>image.depth();</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows<sp/>=<sp/>image.rows();</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncols<sp/>=<sp/>image.columns();</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(imageType)<sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GrayscaleType:</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ndims<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[0]<sp/>=<sp/>ncols;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[1]<sp/>=<sp/>nrows;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>=<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812a7ce7370097e884f4954fc8b3d069a620" kindref="member">NDColorModeMono</ref>;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrueColorType:</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ndims<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[0]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[1]<sp/>=<sp/>ncols;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[2]<sp/>=<sp/>nrows;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>=<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812ab189c5eca6618929ea57f516e3dd5e5d" kindref="member">NDColorModeRGB1</ref>;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>ImageType=%d&quot;</highlight><highlight class="normal">,imageType);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(depth)<sp/>{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref><sp/>=<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16aa5f7c86d8f7853be5eb27c00481f93de" kindref="member">NDUInt8</ref>;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storageType<sp/>=<sp/>CharPixel;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref><sp/>=<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a174cfb9ba69c78761d4d9d25ec1bd8df" kindref="member">NDUInt16</ref>;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storageType<sp/>=<sp/>ShortPixel;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>32:</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref><sp/>=<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a0492c093c2dcd6eebcaf15f57a2f359a" kindref="member">NDUInt32</ref>;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storageType<sp/>=<sp/>IntegerPixel;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;unsupported<sp/>depth=%d&quot;</highlight><highlight class="normal">,depth);</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pImage)<sp/>pImage-&gt;<ref refid="class_n_d_array_1a0c4c61ea4d44ce97db979d24305c996e" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pArrays[0]<sp/>=<sp/>this-&gt;pNDArrayPool-&gt;alloc(ndims,<sp/>dims,<sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage<sp/>=<sp/>this-&gt;pArrays[0];<sp/><sp/></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a3531a4a81cd1f17fca2141ea677208b1" kindref="member">LOG_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;reading<sp/>URL=%s,<sp/>dimensions=[%lu,%lu,%lu],<sp/>ImageType=%d,<sp/>depth=%d&quot;</highlight><highlight class="normal">,<sp/>URLString.c_str(),<sp/></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)dims[0],<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)dims[1],<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)dims[2],<sp/>imageType,<sp/>depth);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.write(0,<sp/>0,<sp/>ncols,<sp/>nrows,<sp/>map,<sp/>storageType,<sp/>pImage-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1af5aad7b41118f465621cf045ed957469" kindref="member">pAttributeList</ref>-&gt;<ref refid="class_n_d_attribute_list_1aa86fbdd59e20b734b86b2464f470d752" kindref="member">add</ref>(</highlight><highlight class="stringliteral">&quot;ColorMode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Color<sp/>mode&quot;</highlight><highlight class="normal">,<sp/><ref refid="_n_d_attribute_8h_1a8a795995acde8458f43ac9b01376ef07a52a96048ab842e5ee55012e5abd38088" kindref="member">NDAttrInt32</ref>,<sp/>&amp;<ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref>);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADSizeX,<sp/>ncols);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(NDArraySizeX,<sp/>ncols);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(ADSizeY,<sp/>nrows);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(NDArraySizeY,<sp/>nrows);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1a47af97c0e2b8255d756207908f6b470d" kindref="member">getInfo</ref>(&amp;arrayInfo);</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(NDArraySize,<sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)arrayInfo.<ref refid="struct_n_d_array_info_1af8f050c2c099f07311a39cc544693d00" kindref="member">totalBytes</ref>);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(NDDataType,<sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setIntegerParam(NDColorMode,<sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref>);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::exception<sp/>&amp;error)</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>reading<sp/>URL=%s&quot;</highlight><highlight class="normal">,error.what());</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynSuccess);</highlight></codeline>
<codeline lineno="1910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADTimePix<sp/>Constructor/Destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><ref refid="class_a_d_time_pix_1ac02d016d0488b90240f49c8ccd26fc4d" kindref="member">ADTimePix::ADTimePix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>serverURL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_a_d_driver" kindref="compound">ADDriver</ref>(portName,<sp/>4,<sp/>(int)<ref refid="_a_d_time_pix_8h_1af39582c3f39779f31f2e1614f4f23be9" kindref="member">NUM_TIMEPIX_PARAMS</ref>,<sp/>maxBuffers,<sp/>maxMemory,</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynInt64Mask<sp/>|<sp/>asynEnumMask,</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynInt64Mask<sp/>|<sp/>asynEnumMask,</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASYN_MULTIDEVICE<sp/>|<sp/>ASYN_CANBLOCK,</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority,</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stackSize)</highlight></codeline>
<codeline lineno="1927"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ADTimePix&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/>mDetOrientationMap[</highlight><highlight class="stringliteral">&quot;UP&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/>mDetOrientationMap[</highlight><highlight class="stringliteral">&quot;RIGHT&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/><sp/>1;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/>mDetOrientationMap[</highlight><highlight class="stringliteral">&quot;DOWN&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/><sp/><sp/>2;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>mDetOrientationMap[</highlight><highlight class="stringliteral">&quot;LEFT&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/><sp/><sp/>3;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/>mDetOrientationMap[</highlight><highlight class="stringliteral">&quot;UP_MIRRORED&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/><sp/><sp/><sp/>4;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/>mDetOrientationMap[</highlight><highlight class="stringliteral">&quot;RIGHT_MIRRORED&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/>5;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>mDetOrientationMap[</highlight><highlight class="stringliteral">&quot;DOWN_MIRRORED&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/><sp/>6;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>mDetOrientationMap[</highlight><highlight class="stringliteral">&quot;LEFT_MIRRORED&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/><sp/>7;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>GraphicsMagick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/>InitializeMagick(NULL);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;serverURL<sp/>=<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">string</ref>(serverURL);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>createParam<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FW<sp/>timestamp,<sp/>Detector<sp/>Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a3ed0e0492ea333901656dbfd24053115" kindref="member">ADTimePixFWTimeStampString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamOctet,&amp;ADTimePixFWTimeStamp);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ad32b2640f305ad3153cfba6932d3a56e" kindref="member">ADTimePixDetTypeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,&amp;ADTimePixDetType);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sets<sp/>URI<sp/>http<sp/>code<sp/>PV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af9dcef0a7b4f8ec1033906b456c670a1" kindref="member">ADTimePixHttpCodeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixHttpCode);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>API<sp/>serval<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a588203dbec23f653b47b9f0111ead4e6" kindref="member">ADTimePixServerNameString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixServer);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dashboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ae96cbc194e7e6c238b764264d710382b" kindref="member">ADTimePixFreeSpaceString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt64,<sp/><sp/><sp/>&amp;ADTimePixFreeSpace);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ae717b27008254728b9f1da9ee6f7cca7" kindref="member">ADTimePixWriteSpeedString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;ADTimePixWriteSpeed);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a612a82669d5530e5fa46866ca27ccf67" kindref="member">ADTimePixLowerLimitString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt64,<sp/><sp/><sp/>&amp;ADTimePixLowerLimit);<sp/></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a5a54c8a008dbfa5f8c38651f9ef35965" kindref="member">ADTimePixLLimReachedString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;ADTimePixLLimReached);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detector<sp/>Health<sp/>(detector/health,<sp/>detector)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a9bd67accd14c3b333be20501613f6ea4" kindref="member">ADTimePixLocalTempString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;ADTimePixLocalTemp);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a7b18a69c0e245415d99172693e8fdf8f" kindref="member">ADTimePixFPGATempString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;ADTimePixFPGATemp);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a5106b7874929211564183b883af1a871" kindref="member">ADTimePixFan1SpeedString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;ADTimePixFan1Speed);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a73234e3f5a0cb871e5d65fcd9e492227" kindref="member">ADTimePixFan2SpeedString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;ADTimePixFan2Speed);</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a0a110f173e5cf1afec4a5cf8b8eb9e5a" kindref="member">ADTimePixBiasVoltageString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;ADTimePixBiasVoltage);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a49de91481c17d7be98268d525ccf75f9" kindref="member">ADTimePixHumidityString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixHumidity);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af8ef534a3e43090cb8afc62a42a7eada" kindref="member">ADTimePixChipTemperatureString</ref>,<sp/>asynParamOctet,<sp/>&amp;ADTimePixChipTemperature);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1abfd0b9e9f5cade728b2fcfc455bd9ca2" kindref="member">ADTimePixVDDString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixVDD);</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a45821891ea307f24a0a9b9608233ea33" kindref="member">ADTimePixAVDDString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixAVDD);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a0d35012c11c4ebaf26fc6fadafeb30c1" kindref="member">ADTimePixHealthString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixHealth);</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detector<sp/>Info<sp/>(detector)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a61a80b5031e4cb60ac562b578b6d0e98" kindref="member">ADTimePixIfaceNameString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixIfaceName);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1adf762af97a5206f5539b4d277b7c37c1" kindref="member">ADTimePixSW_versionString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixSW_version);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a06e773d90473dd77b8a9d70f96c56644" kindref="member">ADTimePixFW_versionString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixFW_version);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a908543119132df216b636d262ead0829" kindref="member">ADTimePixPixCountString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPixCount);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a159b3b4885d9246b96faf6b890d13958" kindref="member">ADTimePixRowLenString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixRowLen);</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af9257d7c0ed70b502bd831fa7b12649a" kindref="member">ADTimePixNumberOfChipsString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixNumberOfChips);</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a096badbbfcac0393d9e66f5e8871d85f" kindref="member">ADTimePixNumberOfRowsString</ref>,<sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixNumberOfRows);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a39083f7f8d96027e0e3e4da7514e6f82" kindref="member">ADTimePixMpxTypeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixMpxType);</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a66b46bd075cdfbdc6f01aebc0d4d5f3d" kindref="member">ADTimePixBoardsIDString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixBoardsID);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a7f11953b930e34c452de14c39bac031c" kindref="member">ADTimePixBoardsIPString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixBoardsIP);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a178ea381c2b369cc24617581e71d0b86" kindref="member">ADTimePixBoardsCh1String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixBoardsCh1);</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a83c6ef93452a3316562ab8020d4f8df5" kindref="member">ADTimePixBoardsCh2String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixBoardsCh2);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af5b1b0c3857ef737212e73dcdae4252c" kindref="member">ADTimePixBoardsCh3String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixBoardsCh3);</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1aa10c8159dc443c8c5d1eb8fa9d0242d8" kindref="member">ADTimePixBoardsCh4String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixBoardsCh4);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a5e44716b007a6d25cc0814d992524481" kindref="member">ADTimePixSuppAcqModesString</ref>,<sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixSuppAcqModes);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a4c28b4ef2819befecde2b71beec9a457" kindref="member">ADTimePixClockReadoutString</ref>,<sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixClockReadout);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a0a68a2085d12c25fc0257207c2eb4ddf" kindref="member">ADTimePixMaxPulseCountString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixMaxPulseCount);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ae7228964bccd6841a799f2218ce492f6" kindref="member">ADTimePixMaxPulseHeightString</ref>,<sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixMaxPulseHeight);</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ac8cf7c73060a0a60870d0c421b1bfb9e" kindref="member">ADTimePixMaxPulsePeriodString</ref>,<sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixMaxPulsePeriod);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a3d7e9f62647822fea8a7614179068b17" kindref="member">ADTimePixTimerMaxValString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixTimerMaxVal);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a729a889ebb5e036e718f0a6de4bc5959" kindref="member">ADTimePixTimerMinValString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixTimerMinVal);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ad571309cb0e052c1979b53881eba94d7" kindref="member">ADTimePixTimerStepString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixTimerStep);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a5cd71137ac1c684ce5b5915767b82068" kindref="member">ADTimePixClockTimepixString</ref>,<sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixClockTimepix);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detector<sp/>Config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a97ce97f9d3fdc10da689911b3c823a5a" kindref="member">ADTimePixFan1PWMString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixFan1PWM);</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1afb48305c214ebdfd91b30ae98b5d70b3" kindref="member">ADTimePixFan2PWMString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixFan2PWM);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a386d95b44a38dc7a3443b34471b5a03a" kindref="member">ADTimePixBiasVoltString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixBiasVolt);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ae21fe9af5f8d1640df8c1140861b095b" kindref="member">ADTimePixBiasEnableString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixBiasEnable);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a38f179d7f602f366b0a73a6bd9c02d7f" kindref="member">ADTimePixChainModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixChainMode);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a485aafa8461f6c17cdce4faa4f360f2e" kindref="member">ADTimePixTriggerInString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixTriggerIn);</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a264c78e808d56aedb26f3a022e1a294e" kindref="member">ADTimePixTriggerOutString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixTriggerOut);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a8b722f706c570217c712235b9180e063" kindref="member">ADTimePixPolarityString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixPolarity);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af16776716ef68d65e48c164448859227" kindref="member">ADTimePixTriggerModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixTriggerMode);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ac64052224a1329da18c5df50badb60cf" kindref="member">ADTimePixExposureTimeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixExposureTime);<sp/><sp/></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a63098c79e4f6335984ab2e2663cbb276" kindref="member">ADTimePixTriggerPeriodString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixTriggerPeriod);<sp/><sp/></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ad78c81b781f2ad77def57e7dd0dcadeb" kindref="member">ADTimePixnTriggersString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixnTriggers);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af6173c65207dfdf6ee186f97485b881e" kindref="member">ADTimePixDetectorOrientationString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixDetectorOrientation);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a934ef8796084b73913a987db8b00e896" kindref="member">ADTimePixPeriphClk80String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixPeriphClk80);</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ab2eb1318aac4e5a999aebc8ce3221ed9" kindref="member">ADTimePixTriggerDelayString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixTriggerDelay);<sp/><sp/></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a2edfd231648389c98d18664e560a4399" kindref="member">ADTimePixTdcString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixTdc);</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a6fd22a5b44ab6f205a362e5d7b5c1bad" kindref="member">ADTimePixTdc0String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixTdc0);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ab7fb0be8fae615f25b7d78d2d0dbe339" kindref="member">ADTimePixTdc1String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixTdc1);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af61dae8aee6a48aa43f2b51c2e86ac2c" kindref="member">ADTimePixGlobalTimestampIntervalString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixGlobalTimestampInterval);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a1e8c000268ce6aadff52985b6f2278ae" kindref="member">ADTimePixExternalReferenceClockString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixExternalReferenceClock);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a38554f00aa3ea2b4fc5924e1a31003ad" kindref="member">ADTimePixLogLevelString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixLogLevel);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detector<sp/>Chips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af8b9c99c4562b591b6f541b40c1a2726" kindref="member">ADTimePixCP_PLLString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixCP_PLL);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a62d7825c82c8bb47edd004d56053c683" kindref="member">ADTimePixDiscS1OFFString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixDiscS1OFF);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1abe51e6526d360725d25e6d284107b1f6" kindref="member">ADTimePixDiscS1ONString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixDiscS1ON);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a1b3d5562641d8470cfc338e3aaad6e6d" kindref="member">ADTimePixDiscS2OFFString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixDiscS2OFF);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ab20b501237e55a1f4ee0c68727138404" kindref="member">ADTimePixDiscS2ONString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixDiscS2ON);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1adc8d50efaee45983c113c3fec1e7d5ca" kindref="member">ADTimePixIkrumString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixIkrum);</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ab1c3d3aecf0ce97028ff3200fdbec246" kindref="member">ADTimePixPixelDACString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPixelDAC);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a33ae4dcdb1f06caca81a346787f79837" kindref="member">ADTimePixPreampOFFString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPreampOFF);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a58b385d607400dd60cba5b97b19a20dc" kindref="member">ADTimePixPreampONString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPreampON);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ab61414e9c7900f18cc0b22c37b80cb77" kindref="member">ADTimePixTPbufferInString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixTPbufferIn);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a6bdb802d8d737ad8d0fea5da6e22bf88" kindref="member">ADTimePixTPbufferOutString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixTPbufferOut);</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a2f1c2bf56e097d64751e9bddae443389" kindref="member">ADTimePixPLL_VcntrlString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPLL_Vcntrl);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a65298a7921b8142593b441114caf34ca" kindref="member">ADTimePixVPreampNCASString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixVPreampNCAS);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a12d7a600d9faa7a6e93d003b08bdc3a5" kindref="member">ADTimePixVTPcoarseString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixVTPcoarse);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ad40974ec58bccc66e3c2bf3d2e6b73f7" kindref="member">ADTimePixVTPfineString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixVTPfine);</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a02d0ffa7879277781620d28b27c97c0e" kindref="member">ADTimePixVfbkString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixVfbk);</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ad9254e5141a6c5d74866ead49f30c9df" kindref="member">ADTimePixVthresholdCoarseString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixVthresholdCoarse);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a4a0d6f24b59e1d548fa4cff7c7d67d48" kindref="member">ADTimePixVthresholdFineString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixVthresholdFine);</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a8bdd8e9ead20080004c337546291fb49" kindref="member">ADTimePixAdjustString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixAdjust);</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detector<sp/>Chip<sp/>Layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1afb31958415928e6198457536568b07de" kindref="member">ADTimePixLayoutString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixLayout);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Files<sp/>BPC,<sp/>Chip/DACS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a52ae25eabc91c65e491dad289965ae61" kindref="member">ADTimePixBPCFilePathString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/>&amp;ADTimePixBPCFilePath);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ac34a173dd7567cdbb84d0c3f1e1b4a5c" kindref="member">ADTimePixBPCFilePathExistsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixBPCFilePathExists);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a31c59ac93a3dc510bec237c4d87a480d" kindref="member">ADTimePixBPCFileNameString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/>&amp;ADTimePixBPCFileName);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1aeb83943e8122586249007aef078095e8" kindref="member">ADTimePixDACSFilePathString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/>&amp;ADTimePixDACSFilePath);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a2af273bb363111d8f7ef41528ca3cd11" kindref="member">ADTimePixDACSFilePathExistsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixDACSFilePathExists);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1aa064361ee383e7b76c2bfd7c91a8910c" kindref="member">ADTimePixDACSFileNameString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/>&amp;ADTimePixDACSFileName);<sp/></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a6b0861c35b1b966f201f7ddf64546c22" kindref="member">ADTimePixWriteMsgString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/>&amp;ADTimePixWriteMsg);<sp/></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af89c251587ef5c4b7a8902dae8758e1e" kindref="member">ADTimePixWriteBPCFileString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixWriteBPCFile);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ac03134e9da1cbb41141ca69d66c190cf" kindref="member">ADTimePixWriteDACSFileString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixWriteDACSFile);<sp/></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Server,<sp/>File<sp/>Writer<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a802ac28ed6f15eb6c74b1394ba11f3f6" kindref="member">ADTimePixWriteDataString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixWriteData);</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a78695efeff400df588a39cad1935ffeb" kindref="member">ADTimePixWriteRawString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixWriteRaw);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a03c32f1f991db5d1628f4dea32e2300b" kindref="member">ADTimePixWriteRaw1String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixWriteRaw1);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serval<sp/>3.3.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1adbcc161bb4860e4b1b3400cf2c2fe037" kindref="member">ADTimePixWriteImgString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixWriteImg);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a016827d92fbd9c0b18cad66d379e884a" kindref="member">ADTimePixWritePrvImgString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixWritePrvImg);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ae182b2d3a9a273747916d2407af588a2" kindref="member">ADTimePixWritePrvImg1String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixWritePrvImg1);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ab6e1895a287ea2838d0a73aeff0ae923" kindref="member">ADTimePixWritePrvHstString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixWritePrvHst);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Server,<sp/>Raw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1aae6653a8ebc0e95334e8f03a9dde7156" kindref="member">ADTimePixRawBaseString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/>&amp;ADTimePixRawBase);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1afd9bd3b7142d6808e6330e1ae43b2551" kindref="member">ADTimePixRawFilePatString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/>&amp;ADTimePixRawFilePat);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a70fcf6e7498e622126755729ca965e19" kindref="member">ADTimePixRawSplitStrategyString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixRawSplitStrategy);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a067593f890bf0176c0c40c7a942d2f83" kindref="member">ADTimePixRawQueueSizeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixRawQueueSize);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ad23abbcea8eba69a175d712868e46d87" kindref="member">ADTimePixRawFilePathExistsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixRawFilePathExists);<sp/></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Server,<sp/>Raw;<sp/>Serval<sp/>3.3.0<sp/>allows<sp/>writing<sp/>raw<sp/>file<sp/>and<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a6f72c19307ecf6a66c01e0ce096fd1fc" kindref="member">ADTimePixRaw1BaseString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/>&amp;ADTimePixRaw1Base);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1aef02e23389cbe9b0f24c80e1ae50d013" kindref="member">ADTimePixRaw1FilePatString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/>&amp;ADTimePixRaw1FilePat);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ab08295f84a932199359b479f97f5fe24" kindref="member">ADTimePixRaw1SplitStrategyString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixRaw1SplitStrategy);</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a2a69e143e1dbf3c5c2ac7b8fad2840da" kindref="member">ADTimePixRaw1QueueSizeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixRaw1QueueSize);</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a8fecd9d49d73c7b5254cc18ae8d1ef8a" kindref="member">ADTimePixRaw1FilePathExistsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/>&amp;ADTimePixRaw1FilePathExists);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Server,<sp/>Image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a23c986ce3cd2ad528bcf3a11c2829418" kindref="member">ADTimePixImgBaseString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/><sp/>&amp;ADTimePixImgBase);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a24cb1ef71d57112e60d841500e892b4e" kindref="member">ADTimePixImgFilePatString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/><sp/>&amp;ADTimePixImgFilePat);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a91813ecc1b240f673ee921b575186b5f" kindref="member">ADTimePixImgFormatString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;ADTimePixImgFormat);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ad3d33f73c70ac5cd221dbeea5cdfbf1c" kindref="member">ADTimePixImgModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;ADTimePixImgMode);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a6caaca40af8b174552e79757450bb4f3" kindref="member">ADTimePixImgThsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/><sp/>&amp;ADTimePixImgThs);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a897ebb28125742c9a83af0270da54b2c" kindref="member">ADTimePixImgIntSizeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;ADTimePixImgIntSize);<sp/></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1acaae4f161187eac44ab695874b9d2c2e" kindref="member">ADTimePixImgIntModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;ADTimePixImgIntMode);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1aae54d2cfe466a1f0326a1df1db4e7ded" kindref="member">ADTimePixImgStpOnDskLimString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;ADTimePixImgStpOnDskLim);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a94d421f1064e01da591172bf9582dfab" kindref="member">ADTimePixImgQueueSizeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;ADTimePixImgQueueSize);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a9a691d0310d734fac46e0fe3ea7bb7f1" kindref="member">ADTimePixImgFilePathExistsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;ADTimePixImgFilePathExists);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Server,<sp/>Preview<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1abef6c1b910ace503ad58f17f8c728c53" kindref="member">ADTimePixPrvPeriodString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/>&amp;ADTimePixPrvPeriod);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ae59f2d316f684c1941ea5c591f72f31d" kindref="member">ADTimePixPrvSamplingModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;ADTimePixPrvSamplingMode);<sp/><sp/></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Server,<sp/>Preview,<sp/>ImageChannels[0]<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1aa9f40e7689330d3e605858cb3802a2ef" kindref="member">ADTimePixPrvImgBaseString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixPrvImgBase);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a1415e332662e2816f7fb85822d0f7c10" kindref="member">ADTimePixPrvImgFilePatString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixPrvImgFilePat);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af25d5a719336a8074fd0852af3901655" kindref="member">ADTimePixPrvImgFormatString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImgFormat);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1aecedea48b7ce0b3c2d127a7d49eb6129" kindref="member">ADTimePixPrvImgModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImgMode);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a7f758921d258275d2a078b724a9f5ab6" kindref="member">ADTimePixPrvImgThsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixPrvImgThs);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a3b51f09f9bad07b10f9ad7ea791dd67b" kindref="member">ADTimePixPrvImgIntSizeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImgIntSize);</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a716c772c3ed59083be60634f5adc53f0" kindref="member">ADTimePixPrvImgIntModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImgIntMode);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1aa941230fa1718ffa3042bc10bbca200c" kindref="member">ADTimePixPrvImgStpOnDskLimString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImgStpOnDskLim);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a69eca37540bf16cb643d5468c8f787f3" kindref="member">ADTimePixPrvImgQueueSizeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImgQueueSize);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a94fb32bfa1e28e9f591d88c3ff19bd02" kindref="member">ADTimePixPrvImgFilePathExistsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImgFilePathExists);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Server,<sp/>Preview,<sp/>ImageChannels[1]<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ace89c27f745c7192ae7ad5163e248350" kindref="member">ADTimePixPrvImg1BaseString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixPrvImg1Base);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1acd9895a598d2740b378c5ee3387c48c5" kindref="member">ADTimePixPrvImg1FilePatString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixPrvImg1FilePat);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a9255bcbe9b9573f56d0bc9045d0fe00d" kindref="member">ADTimePixPrvImg1FormatString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImg1Format);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a9f5c89d768a1abbb675b40aa1c8dfce4" kindref="member">ADTimePixPrvImg1ModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImg1Mode);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ab73981b90fe7e776bf0ec5280e672bd5" kindref="member">ADTimePixPrvImg1ThsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixPrvImg1Ths);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a2db12fbd72787a6841190b56d2d1c66c" kindref="member">ADTimePixPrvImg1IntSizeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImg1IntSize);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a697afb015940a641ec85836dfc9fa114" kindref="member">ADTimePixPrvImg1IntModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImg1IntMode);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a22e4074d9fc1aac7137b920c51a4fdcc" kindref="member">ADTimePixPrvImg1StpOnDskLimString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImg1StpOnDskLim);<sp/></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a5bc63ba38b0c7910b17e0d5279154d17" kindref="member">ADTimePixPrvImg1QueueSizeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImg1QueueSize);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1aa03bbd294e252cadf9c578bff4b6ec1c" kindref="member">ADTimePixPrvImg1FilePathExistsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvImg1FilePathExists);<sp/></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Server,<sp/>Preview,<sp/>HistogramChannels[0]<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ac7d6f75d69551753b14d46955abc3b81" kindref="member">ADTimePixPrvHstBaseString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixPrvHstBase);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a93c270e0e88e6172bff28a088028dd27" kindref="member">ADTimePixPrvHstFilePatString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixPrvHstFilePat);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a41853970cc1ba722f2752b1c9a3096c9" kindref="member">ADTimePixPrvHstFormatString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvHstFormat);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1acccd9561ee7b3fabb7de7a532641109a" kindref="member">ADTimePixPrvHstModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvHstMode);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a46bdfd1b2def10c01c1fe17806ff6411" kindref="member">ADTimePixPrvHstThsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ADTimePixPrvHstThs);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a2d0a0460734ff7eeba11bbdec8aab078" kindref="member">ADTimePixPrvHstIntSizeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvHstIntSize);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af4729f03f7c966345c144f8c59cdb2d2" kindref="member">ADTimePixPrvHstIntModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvHstIntMode);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1afadf1a99bed0b93b3d0fe8d502cb1d63" kindref="member">ADTimePixPrvHstStpOnDskLimString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvHstStpOnDskLim);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af4f38f0980438b3a8336db472a18cf5b" kindref="member">ADTimePixPrvHstQueueSizeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvHstQueueSize);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1acd6c0590be0b089d7c23aad30f89d0e2" kindref="member">ADTimePixPrvHstFilePathExistsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ADTimePixPrvHstFilePathExists);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a2c9699e0e108f011b6a220bbd31b57df" kindref="member">ADTimePixPelRateString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixPelRate);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a082cd8c7ea0a22d6ea0a3245cca2bbab" kindref="member">ADTimePixTdc1RateString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixTdc1Rate);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a1ea56a705090c7a5475ecd2afc80797b" kindref="member">ADTimePixTdc2RateString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixTdc2Rate);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a69fdb837ff1f53010f625462c227a9c8" kindref="member">ADTimePixStartTimeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt64,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixStartTime);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a9bf30ec5c8ef7fbabdb5f9eeff564ae0" kindref="member">ADTimePixElapsedTimeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixElapsedTime);<sp/><sp/></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ab654333226ffa74e77c9249bd48dfc5e" kindref="member">ADTimePixTimeLeftString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/>&amp;ADTimePixTimeLeft);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a162a2310cef5f67fd11b0cab36416871" kindref="member">ADTimePixFrameCountString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixFrameCount);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1ab656a50aad728990dd2277dda08b14b1" kindref="member">ADTimePixDroppedFramesString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixDroppedFrames);</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1aef32c047f0a9e221d5a39a8052e5d859" kindref="member">ADTimePixStatusString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixStatus);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1af24763a093090051ea235a0d90618671" kindref="member">ADTimePixRawStreamString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixRawStream);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_d_time_pix_8h_1a6e5126a3c8fc7ebb9a1073d2fbf3e404" kindref="member">ADTimePixRaw1StreamString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixRaw1Stream);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sets<sp/>driver<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>versionString[25];</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(versionString,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(versionString),<sp/></highlight><highlight class="stringliteral">&quot;%d.%d.%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="_a_d_time_pix_8h_1a46fc748742fe7dded3d9622b4704fe17" kindref="member">ADTIMEPIX_VERSION</ref>,<sp/><ref refid="_a_d_time_pix_8h_1ad1fcf5caa52fb75e090ee045e9c82614" kindref="member">ADTIMEPIX_REVISION</ref>,<sp/><ref refid="_a_d_time_pix_8h_1a75dc1d87fa1906e1b7dcd031905e5a07" kindref="member">ADTIMEPIX_MODIFICATION</ref>);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(NDDriverVersion,<sp/>versionString);</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADTimePixServer,<sp/>serverURL);</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>callParamCallbacks();<sp/><sp/><sp/>//<sp/>Apply<sp/>to<sp/>EPICS,<sp/>at<sp/>end<sp/>of<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(serverURL)<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a351b8552521f29df22aa336bb28e2180" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;Connection<sp/>failed,<sp/>abort&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>asynSuccess<sp/>=<sp/>0,<sp/>so<sp/>use<sp/>!0<sp/>for<sp/>true/connected<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynStatus<sp/>connected<sp/>=<sp/>initialServerCheckConnection();</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!connected){<sp/><sp/><sp/>//<sp/>readability:<sp/>in<sp/>UNIX<sp/>0<sp/>is<sp/>success<sp/>for<sp/>a<sp/>command,<sp/>but<sp/>in<sp/>C++<sp/>0<sp/>is<sp/>&quot;false&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(connected<sp/>==<sp/>asynSuccess)<sp/>{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;Acquiring<sp/>device<sp/>information&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>getDashboard(serverURL);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Dashboard<sp/>done<sp/>HERE!\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>getServer();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Server<sp/>done<sp/>HERE!\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>initCamera();<sp/>/*<sp/>Used<sp/>for<sp/>testing<sp/>and<sp/>emulator,<sp/>replaced<sp/>with<sp/>loadFile<sp/>for<sp/>BPC<sp/>and<sp/>Chip/DACS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;initCamera<sp/>done<sp/>HERE!\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>epics<sp/>is<sp/>exited,<sp/>delete<sp/>the<sp/>instance<sp/>of<sp/>this<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsAtExit(exitCallbackC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><ref refid="class_a_d_time_pix_1aeb570795c90a7cea611d26c688043cf6" kindref="member">ADTimePix::~ADTimePix</ref>(){</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;~ADTimePix&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1afd7ebad8eabc252a3a46fe063f49068c" kindref="member">FLOW</ref>(</highlight><highlight class="stringliteral">&quot;ADTimePix<sp/>driver<sp/>exiting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/>disconnect(this-&gt;pasynUserSelf);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADTimePix<sp/>ioc<sp/>shell<sp/>registration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADTimePixConfig<sp/>-&gt;<sp/>These<sp/>are<sp/>the<sp/>args<sp/>passed<sp/>to<sp/>the<sp/>constructor<sp/>in<sp/>the<sp/>epics<sp/>config<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>ADTimePixConfigArg0<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Port<sp/>name&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iocshArgString<sp/>};</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>ADTimePixConfigArg1<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Server<sp/>URL&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>iocshArgString<sp/>};</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>ADTimePixConfigArg2<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;maxBuffers&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>iocshArgInt<sp/>};</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>ADTimePixConfigArg3<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;maxMemory&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iocshArgInt<sp/>};</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>ADTimePixConfigArg4<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;priority&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iocshArgInt<sp/>};</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>ADTimePixConfigArg5<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;stackSize&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iocshArgInt<sp/>};</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Array<sp/>of<sp/>config<sp/>args<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ADTimePixConfigArgs[]<sp/>=</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&amp;ADTimePixConfigArg0,<sp/>&amp;ADTimePixConfigArg1,<sp/>&amp;ADTimePixConfigArg2,</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ADTimePixConfigArg3,<sp/>&amp;ADTimePixConfigArg4,<sp/>&amp;ADTimePixConfigArg5<sp/>};</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>what<sp/>function<sp/>to<sp/>call<sp/>at<sp/>config<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>configADTimePixCallFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArgBuf<sp/>*<ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>){</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1adcf5fcb8f05141874876cf10fd199400" kindref="member">ADTimePixConfig</ref>(<ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[0].sval,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[1].sval,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[2].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[3].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[4].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[5].ival);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>information<sp/>about<sp/>the<sp/>configuration<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshFuncDef<sp/>configADTimePix<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;ADTimePixConfig&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>ADTimePixConfigArgs<sp/>};</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IOC<sp/>register<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ADTimePixRegister(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/>iocshRegister(&amp;configADTimePix,<sp/>configADTimePixCallFunc);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>external<sp/>function<sp/>for<sp/>IOC<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1a3f90a156556283da6a94785a9447ba66" kindref="member">epicsExportRegistrar</ref>(ADTimePixRegister);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADTimePix3/tpx3App/src/ADTimePix.cpp"/>
  </compounddef>
</doxygen>
