<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespace_a_v_t_1_1_vmb_a_p_i_1_1_examples" kind="namespace" language="C++">
    <compoundname>AVT::VmbAPI::Examples</compoundname>
    <innerclass refid="class_a_v_t_1_1_vmb_a_p_i_1_1_examples_1_1_list_cameras" prot="public">AVT::VmbAPI::Examples::ListCameras</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_a_v_t_1_1_vmb_a_p_i_1_1_examples_1a856928f3059662eafee6a2f70a1c5544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AVT::VmbAPI::Examples::PrintCameraInfo</definition>
        <argsstring>(const CameraPtr &amp;camera)</argsstring>
        <name>PrintCameraInfo</name>
        <qualifiedname>AVT::VmbAPI::Examples::PrintCameraInfo</qualifiedname>
        <param>
          <type>const CameraPtr &amp;</type>
          <declname>camera</declname>
        </param>
        <briefdescription>
<para>printing camera info for a camera. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this function is used with for_each and is called for each camera in range cameras.begin(), cameraas.end() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADVimba/vimbaApp/src/ListCameras.cpp" line="47" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/ADVimba/vimbaApp/src/ListCameras.cpp" bodystart="47" bodyend="97"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/areaDetector/areaDetector/ADVimba/vimbaApp/src/ListCameras.cpp" line="42" column="1"/>
  </compounddef>
</doxygen>
