<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classshamrock" kind="class" language="C++" prot="public">
    <compoundname>shamrock</compoundname>
    <basecompoundref prot="public" virt="non-virtual">asynPortDriver</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classshamrock_1a98dd585ec089862159ad3401c39817d1" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::SRWavelength_</definition>
        <argsstring></argsstring>
        <name>SRWavelength_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="76" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1a7e766a4f3a7607d618d237a43f9d7c13" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::SRMinWavelength_</definition>
        <argsstring></argsstring>
        <name>SRMinWavelength_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="78" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1a460ec0b9a37da9d10b1ce5d0d0dde74a" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::SRMaxWavelength_</definition>
        <argsstring></argsstring>
        <name>SRMaxWavelength_</name>
        <briefdescription>
<para>Min wavelength (float64 read/write) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="79" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1ad16406a5e3706612668939390c9b8ade" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::SRCalibration_</definition>
        <argsstring></argsstring>
        <name>SRCalibration_</name>
        <briefdescription>
<para>Min wavelength (float64 read/write) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="80" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1a7722fea3dc162ddcce59a996bb6db9c3" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::SRGrating_</definition>
        <argsstring></argsstring>
        <name>SRGrating_</name>
        <briefdescription>
<para>Calibration (float32 array read) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="81" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1aafedc76a289ce84cdbb8616ab7613007" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::SRNumGratings_</definition>
        <argsstring></argsstring>
        <name>SRNumGratings_</name>
        <briefdescription>
<para>Grating (int32 read/write) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="82" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1a3724ed3d87588933e11f1b4aed293f7f" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::SRGratingExists_</definition>
        <argsstring></argsstring>
        <name>SRGratingExists_</name>
        <briefdescription>
<para>Number of gratings (int32 read) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="83" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1a7453f0cea1a99659bc6df7a6d8fd5e4e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::SRFlipperMirrorExists_</definition>
        <argsstring></argsstring>
        <name>SRFlipperMirrorExists_</name>
        <briefdescription>
<para>Grating exists (int32 read) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="84" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1a9beedfa3d271a4457753efbf05409f22" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::SRFlipperMirrorPort_</definition>
        <argsstring></argsstring>
        <name>SRFlipperMirrorPort_</name>
        <briefdescription>
<para>Flipper Mirror exists (int32 read) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="85" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1aa506c31c365860a5fab0a50e0bd857ea" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::SRSlitExists_</definition>
        <argsstring></argsstring>
        <name>SRSlitExists_</name>
        <briefdescription>
<para>Flipper Mirror Port (int32 read/write) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="86" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1a9bb4ebf8ca31c8d97f4afd80ee98cdec" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::SRSlitSize_</definition>
        <argsstring></argsstring>
        <name>SRSlitSize_</name>
        <briefdescription>
<para>Slit exists (int32 read) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="87" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classshamrock_1a2d02ac228d2ea443737b127070bc97ee" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::shamrockId_</definition>
        <argsstring></argsstring>
        <name>shamrockId_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="97" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1aac90aee14a3eb8a825f7bd09fa0b74cd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool shamrock::slitIsPresent_[MAX_SLITS]</definition>
        <argsstring>[MAX_SLITS]</argsstring>
        <name>slitIsPresent_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="98" column="10" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1a0e43767d71f5aa647078abeba6176f39" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int shamrock::numPixels_</definition>
        <argsstring></argsstring>
        <name>numPixels_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="99" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1ab84230993a6b5cd74ae41c8c10d6f0f6" prot="private" static="no" mutable="no">
        <type>float *</type>
        <definition>float* shamrock::calibration_</definition>
        <argsstring></argsstring>
        <name>calibration_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="100" column="11" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1a6a883090819ffdefb9ba856ddca3b6b0" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char shamrock::lastError_[MAX_ERROR_MESSAGE_SIZE]</definition>
        <argsstring>[MAX_ERROR_MESSAGE_SIZE]</argsstring>
        <name>lastError_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="101" column="10" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshamrock_1af928936a460d3bf85b09f2199024e9fb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool shamrock::flipperMirrorIsPresent_[MAX_FLIPPER_MIRRORS]</definition>
        <argsstring>[MAX_FLIPPER_MIRRORS]</argsstring>
        <name>flipperMirrorIsPresent_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="102" column="10" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshamrock_1a3a0562c7fb28d6faf71c6012efc9a549" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shamrock::shamrock</definition>
        <argsstring>(const char *portName, int shamrockID, const char *iniPath, int priority, int stacksize)</argsstring>
        <name>shamrock</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shamrockID</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>iniPath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stacksize</declname>
          <defname>stackSize</defname>
        </param>
        <briefdescription>
<para>Constructor for the shamrock class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">portName</parametername>
</parameternamelist>
<parameterdescription>
<para>asyn port name to assign to the camera. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shamrockID</parametername>
</parameternamelist>
<parameterdescription>
<para>The spectrograph index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">iniPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the camera ini file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">priority</parametername>
</parameternamelist>
<parameterdescription>
<para>The EPICS thread priority for this driver. 0=use asyn default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stackSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the stack for the EPICS port thread. 0=use asyn default. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="67" column="5" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="129" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classshamrock_1aa9ecca3ae465bf476700fbc30c9c8457" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>asynStatus</type>
        <definition>asynStatus shamrock::writeInt32</definition>
        <argsstring>(asynUser *pasynUser, epicsInt32 value)</argsstring>
        <name>writeInt32</name>
        <param>
          <type>asynUser *</type>
          <declname>pasynUser</declname>
        </param>
        <param>
          <type>epicsInt32</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets an int32 parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pasynUser</parametername>
</parameternamelist>
<parameterdescription>
<para>asynUser structure that contains the function code in pasynUser-&gt;reason. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value for this parameter</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Takes action if the function code requires it. ADAcquire, ADSizeX, and many other function codes make calls to the Firewire library from this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="70" column="24" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="327" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classshamrock_1a0c2780548961c4560fab6b0defda78ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>asynStatus</type>
        <definition>asynStatus shamrock::writeFloat64</definition>
        <argsstring>(asynUser *pasynUser, epicsFloat64 value)</argsstring>
        <name>writeFloat64</name>
        <param>
          <type>asynUser *</type>
          <declname>pasynUser</declname>
        </param>
        <param>
          <type>epicsFloat64</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets an float64 parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pasynUser</parametername>
</parameternamelist>
<parameterdescription>
<para>asynUser structure that contains the function code in pasynUser-&gt;reason. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value for this parameter</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Takes action if the function code requires it. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="71" column="24" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="370" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classshamrock_1a8d4e828ac3a0d978ff0a796b70a6ccf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>asynStatus</type>
        <definition>asynStatus shamrock::readFloat32Array</definition>
        <argsstring>(asynUser *pasynUser, epicsFloat32 *pValue, size_t nElements, size_t *nIn)</argsstring>
        <name>readFloat32Array</name>
        <param>
          <type>asynUser *</type>
          <declname>pasynUser</declname>
        </param>
        <param>
          <type>epicsFloat32 *</type>
          <declname>pValue</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nElements</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>nIn</declname>
        </param>
        <briefdescription>
<para>Reads float32 array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pasynUser</parametername>
</parameternamelist>
<parameterdescription>
<para>asynUser structure that contains the function code in pasynUser-&gt;reason. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nElements</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nIn</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements copied to the array Takes action if the function code requires it. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="72" column="24" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="411" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classshamrock_1a5a67f4c911c2f50f1c02ecf88caffcbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shamrock::report</definition>
        <argsstring>(FILE *fp, int details)</argsstring>
        <name>report</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>details</declname>
        </param>
        <briefdescription>
<para>Print out a report; calls asynPortDriver::report to get base class report as well. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>File pointer to write output to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">details</parametername>
</parameternamelist>
<parameterdescription>
<para>Level of detail desired. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="73" column="10" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="429" bodyend="435"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classshamrock_1a1dea4aeacd290985ffc4c14e24fcfa87" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>asynStatus</type>
        <definition>asynStatus shamrock::checkError</definition>
        <argsstring>(int status, const char *functionName, const char *shamrockFunction)</argsstring>
        <name>checkError</name>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>functionName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>shamrockFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="93" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="250" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classshamrock_1abde8589a7326d17f1183bb2a895222ba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asynStatus</type>
        <definition>asynStatus shamrock::getStatus</definition>
        <argsstring>()</argsstring>
        <name>getStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="94" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="262" bodyend="318"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Driver for Andor Shamrock spectrographs. </para>
    </briefdescription>
    <detaileddescription>
<para>One instance of this class will control one spectrograph. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>asynPortDriver</label>
      </node>
      <node id="1">
        <label>shamrock</label>
        <link refid="classshamrock"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>asynPortDriver</label>
      </node>
      <node id="1">
        <label>shamrock</label>
        <link refid="classshamrock"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" line="64" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor/andorApp/src/shamrock.cpp" bodystart="65" bodyend="103"/>
    <listofallmembers>
      <member refid="classshamrock_1ab84230993a6b5cd74ae41c8c10d6f0f6" prot="private" virt="non-virtual"><scope>shamrock</scope><name>calibration_</name></member>
      <member refid="classshamrock_1a1dea4aeacd290985ffc4c14e24fcfa87" prot="private" virt="non-virtual"><scope>shamrock</scope><name>checkError</name></member>
      <member refid="classshamrock_1af928936a460d3bf85b09f2199024e9fb" prot="private" virt="non-virtual"><scope>shamrock</scope><name>flipperMirrorIsPresent_</name></member>
      <member refid="classshamrock_1abde8589a7326d17f1183bb2a895222ba" prot="private" virt="non-virtual"><scope>shamrock</scope><name>getStatus</name></member>
      <member refid="classshamrock_1a6a883090819ffdefb9ba856ddca3b6b0" prot="private" virt="non-virtual"><scope>shamrock</scope><name>lastError_</name></member>
      <member refid="classshamrock_1a0e43767d71f5aa647078abeba6176f39" prot="private" virt="non-virtual"><scope>shamrock</scope><name>numPixels_</name></member>
      <member refid="classshamrock_1a8d4e828ac3a0d978ff0a796b70a6ccf4" prot="public" virt="virtual"><scope>shamrock</scope><name>readFloat32Array</name></member>
      <member refid="classshamrock_1a5a67f4c911c2f50f1c02ecf88caffcbf" prot="public" virt="non-virtual"><scope>shamrock</scope><name>report</name></member>
      <member refid="classshamrock_1a3a0562c7fb28d6faf71c6012efc9a549" prot="public" virt="non-virtual"><scope>shamrock</scope><name>shamrock</name></member>
      <member refid="classshamrock_1a2d02ac228d2ea443737b127070bc97ee" prot="private" virt="non-virtual"><scope>shamrock</scope><name>shamrockId_</name></member>
      <member refid="classshamrock_1aac90aee14a3eb8a825f7bd09fa0b74cd" prot="private" virt="non-virtual"><scope>shamrock</scope><name>slitIsPresent_</name></member>
      <member refid="classshamrock_1ad16406a5e3706612668939390c9b8ade" prot="protected" virt="non-virtual"><scope>shamrock</scope><name>SRCalibration_</name></member>
      <member refid="classshamrock_1a7453f0cea1a99659bc6df7a6d8fd5e4e" prot="protected" virt="non-virtual"><scope>shamrock</scope><name>SRFlipperMirrorExists_</name></member>
      <member refid="classshamrock_1a9beedfa3d271a4457753efbf05409f22" prot="protected" virt="non-virtual"><scope>shamrock</scope><name>SRFlipperMirrorPort_</name></member>
      <member refid="classshamrock_1a7722fea3dc162ddcce59a996bb6db9c3" prot="protected" virt="non-virtual"><scope>shamrock</scope><name>SRGrating_</name></member>
      <member refid="classshamrock_1a3724ed3d87588933e11f1b4aed293f7f" prot="protected" virt="non-virtual"><scope>shamrock</scope><name>SRGratingExists_</name></member>
      <member refid="classshamrock_1a460ec0b9a37da9d10b1ce5d0d0dde74a" prot="protected" virt="non-virtual"><scope>shamrock</scope><name>SRMaxWavelength_</name></member>
      <member refid="classshamrock_1a7e766a4f3a7607d618d237a43f9d7c13" prot="protected" virt="non-virtual"><scope>shamrock</scope><name>SRMinWavelength_</name></member>
      <member refid="classshamrock_1aafedc76a289ce84cdbb8616ab7613007" prot="protected" virt="non-virtual"><scope>shamrock</scope><name>SRNumGratings_</name></member>
      <member refid="classshamrock_1aa506c31c365860a5fab0a50e0bd857ea" prot="protected" virt="non-virtual"><scope>shamrock</scope><name>SRSlitExists_</name></member>
      <member refid="classshamrock_1a9bb4ebf8ca31c8d97f4afd80ee98cdec" prot="protected" virt="non-virtual"><scope>shamrock</scope><name>SRSlitSize_</name></member>
      <member refid="classshamrock_1a98dd585ec089862159ad3401c39817d1" prot="protected" virt="non-virtual"><scope>shamrock</scope><name>SRWavelength_</name></member>
      <member refid="classshamrock_1a0c2780548961c4560fab6b0defda78ff" prot="public" virt="virtual"><scope>shamrock</scope><name>writeFloat64</name></member>
      <member refid="classshamrock_1aa9ecca3ae465bf476700fbc30c9c8457" prot="public" virt="virtual"><scope>shamrock</scope><name>writeInt32</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
