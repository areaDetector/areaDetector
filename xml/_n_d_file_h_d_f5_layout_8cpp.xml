<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_n_d_file_h_d_f5_layout_8cpp" kind="file" language="C++">
    <compoundname>NDFileHDF5Layout.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cstring</includes>
    <includes refid="_n_d_file_h_d_f5_layout_8h" local="yes">NDFileHDF5Layout.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDFileHDF5Layout.cpp</label>
        <link refid="_n_d_file_h_d_f5_layout_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>NDFileHDF5Layout.h</label>
        <link refid="_n_d_file_h_d_f5_layout_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="6">
        <label>cstring</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>map</label>
      </node>
      <node id="8">
        <label>ostream</label>
      </node>
      <node id="11">
        <label>set</label>
      </node>
      <node id="4">
        <label>sstream</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacehdf5">hdf5</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>layout.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>23<sp/>Jan<sp/>2012</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>up45</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_n_d_file_h_d_f5_layout_8h" kindref="compound">NDFileHDF5Layout.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespacehdf5" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehdf5" kindref="compound">hdf5</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>==================<sp/>Attribute<sp/>Class<sp/>public<sp/>methods<sp/>====================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_attribute_1aaed46129e409433bb16e842dab8b6a61" kindref="member">Attribute::Attribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_attribute" kindref="compound">Attribute</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_copy(src);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_attribute_1aaed46129e409433bb16e842dab8b6a61" kindref="member">Attribute::Attribute</ref>(std::string&amp;<sp/>name)<sp/>:<sp/>name(name),<sp/>onFileOpen(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_attribute_1aaed46129e409433bb16e842dab8b6a61" kindref="member">Attribute::Attribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)<sp/>:<sp/>name(name),<sp/>onFileOpen(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_attribute_1aaed46129e409433bb16e842dab8b6a61" kindref="member">Attribute::Attribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/><ref refid="classhdf5_1_1_data_source" kindref="compound">DataSource</ref>&amp;<sp/>src)<sp/>:<sp/>source(src),<sp/>name(name),<sp/>onFileOpen(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_attribute" kindref="compound">Attribute</ref>&amp;<sp/><ref refid="classhdf5_1_1_attribute_1ade1805e0b5604d80b72e26fac5776db8" kindref="member">Attribute::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_attribute" kindref="compound">Attribute</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_copy(src);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classhdf5_1_1_attribute_1ad8adbd67ea0c74b03b14ba3a68c3f076" kindref="member">Attribute::get_name</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;name;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_attribute_1a947360e2482e1c518124ef437d266c7e" kindref="member">Attribute::setOnFileOpen</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onOpen)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;onFileOpen<sp/>=<sp/>onOpen;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_attribute_1a27efc309cb2ee9c9c15a3f7a14734252" kindref="member">Attribute::is_onFileOpen</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1ab51726310ac9f6d97ac953d29c93ade5" kindref="member">When_t</ref><sp/>when<sp/>=<sp/><ref refid="classhdf5_1_1_attribute_1a23a0b4059675bef010210f2f7a6989cf" kindref="member">source</ref>.<ref refid="classhdf5_1_1_data_source_1aa404d337b619d5f808017be9065f4697" kindref="member">get_when_to_save</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(when<sp/>==<sp/><ref refid="namespacehdf5_1ab51726310ac9f6d97ac953d29c93ade5afef06eecd68bd53ef5cc8e2b3652e692" kindref="member">OnFileOpen</ref>)<sp/>||<sp/>(when<sp/>==<sp/><ref refid="namespacehdf5_1ab51726310ac9f6d97ac953d29c93ade5abbcc7b3a4277b23e4a3571b995013f99" kindref="member">OnFrame</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_attribute_1a889db3ef305757baaae0cb7d1bce2d9a" kindref="member">Attribute::is_onFileClose</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1ab51726310ac9f6d97ac953d29c93ade5" kindref="member">When_t</ref><sp/>when<sp/>=<sp/><ref refid="classhdf5_1_1_attribute_1a23a0b4059675bef010210f2f7a6989cf" kindref="member">source</ref>.<ref refid="classhdf5_1_1_data_source_1aa404d337b619d5f808017be9065f4697" kindref="member">get_when_to_save</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(when<sp/>==<sp/><ref refid="namespacehdf5_1ab51726310ac9f6d97ac953d29c93ade5af9790a54f051496aa46daf2ac3cd4a17" kindref="member">OnFileClose</ref>)<sp/>||<sp/>(when<sp/>==<sp/><ref refid="namespacehdf5_1ab51726310ac9f6d97ac953d29c93ade5abbcc7b3a4277b23e4a3571b995013f99" kindref="member">OnFrame</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Attribute::_copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_attribute" kindref="compound">Attribute</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;name<sp/>=<sp/>src.name;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classhdf5_1_1_attribute_1a23a0b4059675bef010210f2f7a6989cf" kindref="member">source</ref><sp/>=<sp/>src.<ref refid="classhdf5_1_1_attribute_1a23a0b4059675bef010210f2f7a6989cf" kindref="member">source</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;onFileOpen<sp/>=<sp/>src.onFileOpen;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_data_source_1adea6bb6f8c4b8ec2c90bc20fcab55a11" kindref="member">DataSource::DataSource</ref>()<sp/>:<sp/>data_src(<ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8a54b4d1f8b1be7882f5b93d535024f296" kindref="member">notset</ref>),<sp/>val(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>datatype(<ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1a100be3cb84dad1cc0a2466373878f11d" kindref="member">int8</ref>),<sp/>when_to_save(<ref refid="namespacehdf5_1ab51726310ac9f6d97ac953d29c93ade5abbcc7b3a4277b23e4a3571b995013f99" kindref="member">OnFrame</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_data_source_1adea6bb6f8c4b8ec2c90bc20fcab55a11" kindref="member">DataSource::DataSource</ref>(<ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8" kindref="member">DataSrc_t</ref><sp/>srctype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val)<sp/>:<sp/>data_src(srctype),<sp/>val(val),<sp/>datatype(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">),<sp/>when_to_save(<ref refid="namespacehdf5_1ab51726310ac9f6d97ac953d29c93ade5abbcc7b3a4277b23e4a3571b995013f99" kindref="member">OnFrame</ref>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_data_source_1adea6bb6f8c4b8ec2c90bc20fcab55a11" kindref="member">DataSource::DataSource</ref>(<ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8" kindref="member">DataSrc_t</ref><sp/>src,<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1" kindref="member">DataType_t</ref><sp/>type)<sp/>:<sp/>data_src(src),<sp/>val(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>datatype(type),<sp/>when_to_save(<ref refid="namespacehdf5_1ab51726310ac9f6d97ac953d29c93ade5abbcc7b3a4277b23e4a3571b995013f99" kindref="member">OnFrame</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_data_source_1adea6bb6f8c4b8ec2c90bc20fcab55a11" kindref="member">DataSource::DataSource</ref>(<ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8" kindref="member">DataSrc_t</ref><sp/>src)<sp/>:<sp/>data_src(src),<sp/>val(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>datatype(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">),<sp/>when_to_save(<ref refid="namespacehdf5_1ab51726310ac9f6d97ac953d29c93ade5abbcc7b3a4277b23e4a3571b995013f99" kindref="member">OnFrame</ref>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_data_source_1adea6bb6f8c4b8ec2c90bc20fcab55a11" kindref="member">DataSource::DataSource</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_data_source" kindref="compound">DataSource</ref>&amp;<sp/>src)<sp/>:<sp/>data_src(src.data_src),<sp/>val(src.val),<sp/>datatype(src.datatype),<sp/>when_to_save(src.when_to_save)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_data_source" kindref="compound">DataSource</ref>&amp;<sp/><ref refid="classhdf5_1_1_data_source_1acb7e8881127e64fa4b403dc1aa5c3b08" kindref="member">DataSource::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_data_source" kindref="compound">DataSource</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_src<sp/>=<sp/>src.data_src;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;val<sp/>=<sp/>src.val;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;datatype<sp/>=<sp/>src.datatype;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;when_to_save<sp/>=<sp/>src.when_to_save;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_data_source_1a4a211c1742c74b8554f558f4532cd12b" kindref="member">DataSource::set_datatype</ref>(<ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1" kindref="member">DataType_t</ref><sp/>type)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;datatype<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_data_source_1abe042c31fbd8e0da4087c3d0fe3b90f5" kindref="member">DataSource::is_src_constant</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;data_src<sp/>==<sp/><ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8a3b1821cc8d882b111c088bf5e44c38fa" kindref="member">constant</ref><sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_data_source_1adbc3026f29fb63b64111aff1f5e40d84" kindref="member">DataSource::is_src_detector</ref>()</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;data_src<sp/>==<sp/><ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8a9b2ce7fbca521a5b3b440b7d598b72df" kindref="member">detector</ref><sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_data_source_1a2b272c69d4ef77e188279eefb7ce8e03" kindref="member">DataSource::is_src_ndattribute</ref>()</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;data_src<sp/>==<sp/><ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8a9666c3192f02a51b1d2fa1907c2c7cc6" kindref="member">ndattribute</ref><sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_data_source_1ae56e55d4c5aed5751c6fcca5415d418a" kindref="member">DataSource::is_src</ref>(<ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8" kindref="member">DataSrc_t</ref><sp/>src)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;data_src<sp/>==<sp/>src<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classhdf5_1_1_data_source_1a2ca7e3229044080797a803652ae794f3" kindref="member">DataSource::get_src_def</ref>()</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;val;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1" kindref="member">DataType_t</ref><sp/><ref refid="classhdf5_1_1_data_source_1aa1a15b00cd2808aa1c21a6c8e4a774c4" kindref="member">DataSource::get_datatype</ref>()</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;datatype;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_data_source_1a363c8b6944e8e6cb48823848c65dbfdd" kindref="member">DataSource::datatype_size</ref>()</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(this-&gt;datatype)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1a2960b4a30298559c3e0f1f448201d9dc" kindref="member">uint8</ref>:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1a100be3cb84dad1cc0a2466373878f11d" kindref="member">int8</ref>:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1abd1d73084b7a746ddf0956620c59c1c5" kindref="member">uint16</ref>:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1a280d85dc4e09e5ab478883241958dd5e" kindref="member">int16</ref>:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1a757b528ff42a524a52ab439e7bb781ea" kindref="member">uint32</ref>:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1af7b01b3012e6f0f2613f4b22e8c256f8" kindref="member">int32</ref>:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1a698a9adae1d0f272ae8b52ca350e7b7b" kindref="member">float32</ref>:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1af1190e935887f522b0307cce2e801ada" kindref="member">float64</ref>:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">string</ref>:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_data_source_1a41b328a16e2e795d821e707a21493d09" kindref="member">DataSource::set_const_datatype_value</ref>(<ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1" kindref="member">DataType_t</ref><sp/>dtype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str_val)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;data_src<sp/>!=<sp/><ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8a3b1821cc8d882b111c088bf5e44c38fa" kindref="member">constant</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classhdf5_1_1_data_source_1a4a211c1742c74b8554f558f4532cd12b" kindref="member">set_datatype</ref>(dtype);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;val<sp/>=<sp/>str_val;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_data_source_1a9dc1aacfc45cb6c949e00c1c8045f2a1" kindref="member">DataSource::set_when_to_save</ref>(<ref refid="namespacehdf5_1ab51726310ac9f6d97ac953d29c93ade5" kindref="member">When_t</ref><sp/>when)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>when_to_save<sp/>=<sp/>when;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1ab51726310ac9f6d97ac953d29c93ade5" kindref="member">When_t</ref><sp/><ref refid="classhdf5_1_1_data_source_1aa404d337b619d5f808017be9065f4697" kindref="member">DataSource::get_when_to_save</ref>()</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>when_to_save;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>==================<sp/>Element<sp/>Class<sp/>public<sp/>methods<sp/>====================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_element_1a5cf95902d23f5f7b57adc596049d5531" kindref="member">Element::Element</ref>()</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;parent<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_element_1a5cf95902d23f5f7b57adc596049d5531" kindref="member">Element::Element</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_element" kindref="compound">Element</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classhdf5_1_1_element_1a024ef00b4b3b4915962f218b0c4d3b5b" kindref="member">_copy</ref>(src);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_element_1a5cf95902d23f5f7b57adc596049d5531" kindref="member">Element::Element</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;name<sp/>=<sp/><ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;parent<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classhdf5_1_1_element_1ac45685511f3cace4cf60133f8db454a2" kindref="member">Element::get_full_name</ref>()</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>fname<sp/>=<sp/>this-&gt;<ref refid="classhdf5_1_1_element_1ab74ad0d6d01efa22e1b4e834fd723fdd" kindref="member">get_path</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>fname<sp/>+=<sp/>this-&gt;<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fname;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classhdf5_1_1_element_1ab74ad0d6d01efa22e1b4e834fd723fdd" kindref="member">Element::get_path</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trailing_slash)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>path;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>path.append(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;parent<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path.insert(0,<sp/>this-&gt;parent-&gt;<ref refid="classhdf5_1_1_element_1a269b134cd72d02d76375996ee72d0b71" kindref="member">get_name</ref>());</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path.insert(0,<sp/>this-&gt;parent-&gt;<ref refid="classhdf5_1_1_element_1ab74ad0d6d01efa22e1b4e834fd723fdd" kindref="member">get_path</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>trailing_slash)<sp/>path.erase(path.end()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_element" kindref="compound">Element</ref>&amp;<sp/><ref refid="classhdf5_1_1_element_1af9364109e40ee88f8e67512c3c620c1a" kindref="member">Element::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_element" kindref="compound">Element</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>self-assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;src){</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classhdf5_1_1_element_1a024ef00b4b3b4915962f218b0c4d3b5b" kindref="member">_copy</ref>(src);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classhdf5_1_1_element_1a269b134cd72d02d76375996ee72d0b71" kindref="member">Element::get_name</ref>()</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_element" kindref="compound">Element</ref><sp/>*<sp/><ref refid="classhdf5_1_1_element_1a862ab67194ac1a671c7fc43a08bcbfad" kindref="member">Element::get_parent</ref>()</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;parent;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_element_1a769fbfa1faf557af59d99990cbeefbef" kindref="member">Element::MapAttributes_t</ref>&amp;<sp/><ref refid="classhdf5_1_1_element_1af11d29a4e5859db789307a22d41ac801" kindref="member">Element::get_attributes</ref>()</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classhdf5_1_1_element_1ac73ced6e2dc88aa18c01ec86bff4a205" kindref="member">attributes</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_element_1a989491f297fa26331c4939729b3bb1d6" kindref="member">Element::add_attribute</ref>(<ref refid="classhdf5_1_1_attribute" kindref="compound">Attribute</ref>&amp;<sp/>attr)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classhdf5_1_1_element_1ac73ced6e2dc88aa18c01ec86bff4a205" kindref="member">attributes</ref>.count(attr.<ref refid="classhdf5_1_1_attribute_1ad8adbd67ea0c74b03b14ba3a68c3f076" kindref="member">get_name</ref>())<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;std::map&lt;std::string,<sp/>Attribute&gt;::iterator,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>this-&gt;<ref refid="classhdf5_1_1_element_1ac73ced6e2dc88aa18c01ec86bff4a205" kindref="member">attributes</ref>.insert(std::pair&lt;std::string,<sp/>Attribute&gt;(attr.<ref refid="classhdf5_1_1_attribute_1ad8adbd67ea0c74b03b14ba3a68c3f076" kindref="member">get_name</ref>(),<sp/>attr));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>successful<sp/>insertion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret.second<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_element_1a4af1130493d3e6d9b79544cd37711f08" kindref="member">Element::has_attribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>attr_name)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classhdf5_1_1_element_1ac73ced6e2dc88aa18c01ec86bff4a205" kindref="member">attributes</ref>.count(attr_name)&gt;0<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_element_1ae692d15daf93c4d87a43d8b319271835" kindref="member">Element::tree_level</ref>()</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>pos<sp/>!=<sp/>std::string::npos<sp/>){</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>this-&gt;<ref refid="classhdf5_1_1_element_1ac45685511f3cace4cf60133f8db454a2" kindref="member">get_full_name</ref>().find(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">,<sp/>pos+1);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level++;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>level;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>==================<sp/>Element<sp/>Class<sp/>protected<sp/>methods<sp/>====================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_element_1a024ef00b4b3b4915962f218b0c4d3b5b" kindref="member">Element::_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_element" kindref="compound">Element</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;name<sp/>=<sp/>src.<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classhdf5_1_1_element_1ac73ced6e2dc88aa18c01ec86bff4a205" kindref="member">attributes</ref><sp/>=<sp/>src.<ref refid="classhdf5_1_1_element_1ac73ced6e2dc88aa18c01ec86bff4a205" kindref="member">attributes</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;parent<sp/>=<sp/>src.parent;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>==================<sp/>Group<sp/>Class<sp/>public<sp/>methods<sp/>====================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_group_1a82bd71c12fbaa6dd01b956649b52881b" kindref="member">Group::Group</ref>()<sp/>:<sp/><ref refid="classhdf5_1_1_element" kindref="compound">Element</ref>(),<sp/>ndattr_default_container(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_group_1a82bd71c12fbaa6dd01b956649b52881b" kindref="member">Group::Group</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>:<sp/><ref refid="classhdf5_1_1_element" kindref="compound">Element</ref>(name),<sp/>ndattr_default_container(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_group_1a82bd71c12fbaa6dd01b956649b52881b" kindref="member">Group::Group</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name)<sp/>:<sp/><ref refid="classhdf5_1_1_element" kindref="compound">Element</ref>(std::string(name)),<sp/>ndattr_default_container(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_group_1a82bd71c12fbaa6dd01b956649b52881b" kindref="member">Group::Group</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref>&amp;<sp/>src)<sp/>:<sp/>ndattr_default_container(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_copy(src);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1ae9ff48c9c91c08ff2629c96f8818a9e0" kindref="member">_delete_obj</ref>(std::pair&lt;std::string,<sp/>T*&gt;<sp/>pair<sp/>)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pair.second;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_group_1a70fe131618f25cea88e09249851c0aff" kindref="member">Group::~Group</ref>()</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>for_each(this-&gt;datasets.begin(),<sp/>this-&gt;datasets.end(),<sp/>_delete_obj&lt;Dataset&gt;);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>for_each(this-&gt;groups.begin(),<sp/>this-&gt;groups.end(),<sp/>_delete_obj&lt;Group&gt;);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HK<sp/>verify<sp/>should<sp/>this<sp/>be<sp/>done?<sp/>Causes<sp/>segfault..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for_each(this-&gt;hardlinks.begin(),<sp/>this-&gt;hardlinks.end(),<sp/>_delete_obj&lt;HardLink&gt;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HK<sp/>verify<sp/>should<sp/>this<sp/>be<sp/>done?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref>&amp;<sp/><ref refid="classhdf5_1_1_group_1a39899097b4e28bb34b02a0917ee29f79" kindref="member">Group::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>self-assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;src){</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_copy(src);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>*<sp/><ref refid="classhdf5_1_1_group_1a4e6ad1a1cd86c35708c7090a7a2c05c5" kindref="member">Group::new_dset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>*<sp/>ds<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>that<sp/>a<sp/>dataset<sp/>or<sp/>a<sp/>group<sp/>with<sp/>this<sp/>name<sp/>doesn&apos;t<sp/>already<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;name_exist(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>ds<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>ds-&gt;parent<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>the<sp/>string,<sp/>Dataset<sp/>pointer<sp/>pair<sp/>in<sp/>the<sp/>datasets<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;std::map&lt;std::string,<sp/>Dataset*&gt;::iterator,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>this-&gt;datasets.insert(std::pair&lt;std::string,<sp/>Dataset*&gt;(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>,<sp/>ds));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>successful<sp/>insertion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret.second<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ds;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>*<sp/><ref refid="classhdf5_1_1_group_1a4e6ad1a1cd86c35708c7090a7a2c05c5" kindref="member">Group::new_dset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str_name(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classhdf5_1_1_group_1a4e6ad1a1cd86c35708c7090a7a2c05c5" kindref="member">new_dset</ref>(str_name);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref>*<sp/><ref refid="classhdf5_1_1_group_1aef257191133112673676d9c406693ad3" kindref="member">Group::new_group</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref>*<sp/>grp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>that<sp/>a<sp/>dataset<sp/>or<sp/>a<sp/>group<sp/>with<sp/>this<sp/>name<sp/>doesn&apos;t<sp/>already<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;name_exist(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>new<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>grp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group_1a82bd71c12fbaa6dd01b956649b52881b" kindref="member">Group</ref>(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>grp-&gt;parent<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>the<sp/>string,<sp/>Dataset<sp/>pointer<sp/>pair<sp/>in<sp/>the<sp/>datasets<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;std::map&lt;std::string,<sp/>Group*&gt;::iterator,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>this-&gt;groups.insert(std::pair&lt;std::string,<sp/>Group*&gt;(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>,<sp/>grp));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>successful<sp/>insertion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret.second<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>grp;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>grp;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref>*<sp/><ref refid="classhdf5_1_1_group_1aef257191133112673676d9c406693ad3" kindref="member">Group::new_group</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str_name(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classhdf5_1_1_group_1aef257191133112673676d9c406693ad3" kindref="member">new_group</ref>(str_name);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_hard_link" kindref="compound">HardLink</ref>*<sp/><ref refid="classhdf5_1_1_group_1ad88b388c62e3bba8b59c03ad7268c82b" kindref="member">Group::new_hardlink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_hard_link" kindref="compound">HardLink</ref>*<sp/>hardlink<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>that<sp/>a<sp/>dataset,<sp/>group<sp/>or<sp/>hardlink<sp/>with<sp/>this<sp/>name<sp/>doesn&apos;t<sp/>already<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;name_exist(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>new<sp/>hardlink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>hardlink<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_hard_link" kindref="compound">HardLink</ref>(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>hardlink-&gt;parent<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>the<sp/>string,<sp/>Dataset<sp/>pointer<sp/>pair<sp/>in<sp/>the<sp/>datasets<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;std::map&lt;std::string,<sp/>HardLink*&gt;::iterator,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>this-&gt;hardlinks.insert(std::pair&lt;std::string,<sp/>HardLink*&gt;(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>,<sp/>hardlink));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>successful<sp/>insertion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret.second<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>hardlink;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hardlink;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_hard_link" kindref="compound">HardLink</ref>*<sp/><ref refid="classhdf5_1_1_group_1ad88b388c62e3bba8b59c03ad7268c82b" kindref="member">Group::new_hardlink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str_name(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classhdf5_1_1_group_1ad88b388c62e3bba8b59c03ad7268c82b" kindref="member">new_hardlink</ref>(str_name);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group_1acc49787246f8efd57dd466773392d592" kindref="member">Group::find_dset_ndattr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>ndattr_name,<sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>**<sp/>dset)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str_name(ndattr_name);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classhdf5_1_1_group_1acc49787246f8efd57dd466773392d592" kindref="member">find_dset_ndattr</ref>(str_name,<sp/>dset);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group_1acc49787246f8efd57dd466773392d592" kindref="member">Group::find_dset_ndattr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>ndattr_name,<sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>**<sp/>dset)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>first<sp/>whether<sp/>this<sp/>group<sp/>has<sp/>a<sp/>dataset<sp/>with<sp/>this<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>Dataset*&gt;::iterator<sp/>it_dsets;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it_dsets<sp/>=<sp/>this-&gt;datasets.begin();<sp/>it_dsets<sp/>!=<sp/>this-&gt;datasets.end();<sp/>++it_dsets){</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>this<sp/>attribute<sp/>name,<sp/>not<sp/>if<sp/>it<sp/>contains<sp/>an<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_dsets-&gt;second-&gt;has_ndattr_name(ndattr_name)){</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dset<sp/>=<sp/>it_dsets-&gt;second;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>check<sp/>if<sp/>any<sp/>children<sp/>has<sp/>a<sp/>dataset<sp/>with<sp/>this<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>Group*&gt;::iterator<sp/>it_groups;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it_groups<sp/>=<sp/>this-&gt;groups.begin();<sp/>it_groups<sp/>!=<sp/>this-&gt;groups.end();<sp/>++it_groups){</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_groups-&gt;second-&gt;find_dset_ndattr(ndattr_name,<sp/>dset)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group_1ac6b2339c131be375da6b6a578658f006" kindref="member">Group::find_detector_default_dset</ref>(<ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>**<sp/>dset)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>first<sp/>whether<sp/>this<sp/>group<sp/>has<sp/>a<sp/>default<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>Dataset*&gt;::iterator<sp/>it_dsets;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it_dsets<sp/>=<sp/>this-&gt;datasets.begin();<sp/>it_dsets<sp/>!=<sp/>this-&gt;datasets.end();<sp/>++it_dsets){</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_dsets-&gt;second-&gt;is_src_default()){</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dset<sp/>=<sp/>it_dsets-&gt;second;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>check<sp/>if<sp/>any<sp/>children<sp/>has<sp/>a<sp/>default<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>Group*&gt;::iterator<sp/>it_groups;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it_groups<sp/>=<sp/>this-&gt;groups.begin();<sp/>it_groups<sp/>!=<sp/>this-&gt;groups.end();<sp/>++it_groups){</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_groups-&gt;second-&gt;find_detector_default_dset(dset)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group_1af330554e8496a6f8214a230952cb3a55" kindref="member">Group::find_dset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dsetname,<sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>**<sp/>dest)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str_dsetname<sp/>=<sp/>dsetname;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classhdf5_1_1_group_1af330554e8496a6f8214a230952cb3a55" kindref="member">find_dset</ref>(str_dsetname,<sp/>dest);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group_1af330554e8496a6f8214a230952cb3a55" kindref="member">Group::find_dset</ref>(std::string&amp;<sp/>dsetname,<sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>**<sp/>dest)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>Dataset*&gt;::const_iterator<sp/>it_dsets;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>it_dsets<sp/>=<sp/>this-&gt;datasets.find(dsetname);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_dsets<sp/>!=<sp/>this-&gt;datasets.end()){</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/>it_dsets-&gt;second;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>Group*&gt;::iterator<sp/>it_groups;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retcode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it_groups<sp/>=<sp/>this-&gt;groups.begin();<sp/>it_groups<sp/>!=<sp/>this-&gt;groups.end();<sp/>++it_groups){</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retcode<sp/>=<sp/>it_groups-&gt;second-&gt;find_dset(dsetname,<sp/>dest);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retcode<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group_1a49b46793ce93931e5bdffb7eff9e8d7f" kindref="member">Group::set_default_ndattr_group</ref>()</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ndattr_default_container<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref>*<sp/><ref refid="classhdf5_1_1_group_1add7d6979cf93ec82768a27d2edab4b94" kindref="member">Group::find_ndattr_default_group</ref>()</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref><sp/>*<sp/>result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>MapGroups_t::iterator<sp/>it;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>this-&gt;groups.begin();<sp/>it<sp/>!=<sp/>this-&gt;groups.end();<sp/>++it){</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;ndattr_default_container){</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>it-&gt;second-&gt;<ref refid="classhdf5_1_1_group_1add7d6979cf93ec82768a27d2edab4b94" kindref="member">find_ndattr_default_group</ref>();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group_1a36bbca99ae5b8bed8d32c3a5b4db09b5" kindref="member">Group::num_datasets</ref>()</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)this-&gt;datasets.size();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group_1ad44a1c2497a79c468e49f6117eeca5b0" kindref="member">Group::num_groups</ref>()</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)this-&gt;groups.size();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classhdf5_1_1_group_1a19972da87c515ea2dba8c04d782c460e" kindref="member">Group::_str_</ref>()</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out(std::stringstream::out);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;<sp/>Group:<sp/>\&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classhdf5_1_1_element_1ac45685511f3cace4cf60133f8db454a2" kindref="member">get_full_name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>groups=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classhdf5_1_1_group_1ad44a1c2497a79c468e49f6117eeca5b0" kindref="member">num_groups</ref>();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>dsets=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classhdf5_1_1_group_1a36bbca99ae5b8bed8d32c3a5b4db09b5" kindref="member">num_datasets</ref>();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>attr=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classhdf5_1_1_element_1ac73ced6e2dc88aa18c01ec86bff4a205" kindref="member">attributes</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>Group*&gt;::iterator<sp/>it_groups;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it_groups<sp/>=<sp/>this-&gt;groups.begin();<sp/>it_groups<sp/>!=<sp/>this-&gt;groups.end();<sp/>++it_groups){</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\t\t\t\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;this-&gt;<ref refid="classhdf5_1_1_element_1ae692d15daf93c4d87a43d8b319271835" kindref="member">tree_level</ref>();<sp/>i++){</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>it_groups-&gt;second-&gt;_str_();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_group_1a8920f920aadc199e16bf3584df1071c3" kindref="member">Group::MapDatasets_t</ref>&amp;<sp/><ref refid="classhdf5_1_1_group_1acab43985c80bf58bd5b78aa3db76436b" kindref="member">Group::get_datasets</ref>()</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;datasets;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_group_1adb3e2d18f001900a0efaaf14f7d8ea95" kindref="member">Group::MapGroups_t</ref>&amp;<sp/><ref refid="classhdf5_1_1_group_1a592983822af3139f50334202cb106b11" kindref="member">Group::get_groups</ref>()</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;groups;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_group_1aec9e1d36317084c5051e231594a94dab" kindref="member">Group::MapHardLinks_t</ref>&amp;<sp/><ref refid="classhdf5_1_1_group_1aa1e43385ca9a6614d0842b6d2bf4d91e" kindref="member">Group::get_hardlinks</ref>()</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;hardlinks;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group_1ab47f404c5196c753918281a031a0e122" kindref="member">Group::find_dsets</ref>(<ref refid="namespacehdf5_1a35f510139e8a82f80a2e0487f82078a8" kindref="member">DataSrc_t</ref><sp/>source,<sp/>MapDatasets_t&amp;<sp/>results)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>MapDatasets_t::iterator<sp/>it<sp/>=<sp/>this-&gt;datasets.begin();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>through<sp/>the<sp/>dataset<sp/>map<sp/>to<sp/>find<sp/>any<sp/>dataset<sp/>with<sp/>comes<sp/>from<sp/>&lt;source&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>result<sp/>is<sp/>inserted<sp/>into<sp/>the<sp/>&lt;dsets&gt;<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/><sp/>this-&gt;datasets.begin();<sp/>it<sp/>!=<sp/>this-&gt;datasets.end();<sp/>++it){</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;data_source().is_src(source)){</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results.insert(std::pair&lt;std::string,<sp/>Dataset*&gt;(it-&gt;second-&gt;get_full_name(),<sp/>it-&gt;second));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally<sp/>run<sp/>the<sp/>same<sp/>search<sp/>through<sp/>all<sp/>subgroups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>MapGroups_t::iterator<sp/>it_groups;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it_groups<sp/>=<sp/>this-&gt;groups.begin();<sp/>it_groups<sp/>!=<sp/>this-&gt;groups.end();<sp/>++it_groups){</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it_groups-&gt;second-&gt;find_dsets(source,<sp/>results);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group_1aea2c91ebac065791fac6420bd9acca99" kindref="member">Group::merge_ndattributes</ref>(MapNDAttrSrc_t::const_iterator<sp/>it_begin,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapNDAttrSrc_t::const_iterator<sp/>it_end,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;std::string&gt;&amp;<sp/>used_ndattribute_srcs)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>MapNDAttrSrc_t::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>MapDatasets_t::iterator<sp/>it_dset;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>it_begin;<sp/>it<sp/>!=<sp/>it_end;<sp/>++it){</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it_dset<sp/>=<sp/>this-&gt;datasets.find(it-&gt;first);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_dset<sp/>!=<sp/>this-&gt;datasets.end()){</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_data_source" kindref="compound">DataSource</ref><sp/>data_src(*it-&gt;second);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_dset-&gt;second-&gt;set_data_source(data_src);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used_ndattribute_srcs.insert(it-&gt;first);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recursively<sp/>call<sp/>the<sp/>children<sp/>(groups)<sp/>of<sp/>this<sp/>group<sp/>to<sp/>do<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>operation<sp/>on<sp/>their<sp/>datasets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>MapGroups_t::iterator<sp/>it_groups;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it_groups<sp/>=<sp/>this-&gt;groups.begin();<sp/>it_groups<sp/>!=<sp/>this-&gt;groups.end();<sp/>++it_groups){</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it_groups-&gt;second-&gt;merge_ndattributes(it_begin,<sp/>it_end,<sp/>used_ndattribute_srcs);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>==================<sp/>Group<sp/>Class<sp/>private<sp/>methods<sp/>====================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Group::_copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_element_1a024ef00b4b3b4915962f218b0c4d3b5b" kindref="member">Element::_copy</ref>(src);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;datasets<sp/>=<sp/>src.datasets;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;groups<sp/>=<sp/>src.groups;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ndattr_default_container<sp/>=<sp/>src.ndattr_default_container;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Group::name_exist(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>that<sp/>a<sp/>dataset<sp/>or<sp/>a<sp/>group<sp/>with<sp/>this<sp/>name<sp/>doesn&apos;t<sp/>already<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;datasets.count(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>)<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;groups.count(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>)<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_root_1a854daba0ea6d627420acb9702a93781d" kindref="member">Root::Root</ref>()<sp/>:<sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref>()</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_root_1a854daba0ea6d627420acb9702a93781d" kindref="member">Root::Root</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>:<sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref>(name)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_root_1a854daba0ea6d627420acb9702a93781d" kindref="member">Root::Root</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>:<sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref>(name)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_root_1a0809f1de51652bd184a73a3ff2b4ca41" kindref="member">Root::merge_ndattributes</ref>(MapNDAttrSrc_t::const_iterator<sp/>it_begin,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapNDAttrSrc_t::const_iterator<sp/>it_end,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;std::string&gt;&amp;<sp/>used_ndattribute_srcs)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>call<sp/>the<sp/>base<sp/>class<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_group_1aea2c91ebac065791fac6420bd9acca99" kindref="member">Group::merge_ndattributes</ref>(it_begin,<sp/>it_end,<sp/>used_ndattribute_srcs);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>used_ndattribute_srcs<sp/>set<sp/>to<sp/>work<sp/>out<sp/>which<sp/>NDAttributes<sp/>were<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>already<sp/>found<sp/>in<sp/>the<sp/>defined<sp/>tree.<sp/>The<sp/>ones<sp/>that<sp/>were<sp/>not<sp/>already<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>tree<sp/>will<sp/>be<sp/>added<sp/>as<sp/>new<sp/>datasets<sp/>in<sp/>the<sp/>default<sp/>NDAttribute<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>default<sp/>group<sp/>for<sp/>NDAttribute<sp/>datasets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_group" kindref="compound">Group</ref>*<sp/>def_grp<sp/>=<sp/>this-&gt;<ref refid="classhdf5_1_1_group_1add7d6979cf93ec82768a27d2edab4b94" kindref="member">find_ndattr_default_group</ref>();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(def_grp<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>no<sp/>default<sp/>group:<sp/>then<sp/>nothing<sp/>left<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>MapNDAttrSrc_t::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>it_begin;<sp/>it<sp/>!=<sp/>it_end;<sp/>++it){</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>an<sp/>attribute<sp/>is<sp/>not<sp/>in<sp/>the<sp/>&apos;used&apos;<sp/>list<sp/>-<sp/>i.e.<sp/>it<sp/>has<sp/>not<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>create<sp/>a<sp/>dataset<sp/>elsewhere<sp/>already...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref><sp/>=<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(used_ndattribute_srcs.count(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>new<sp/>dataset<sp/>from<sp/>the<sp/>NDAttribute<sp/>in<sp/>the<sp/>default<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>*<sp/><ref refid="classhdf5_1_1_group_1a4e6ad1a1cd86c35708c7090a7a2c05c5" kindref="member">new_dset</ref><sp/>=<sp/>def_grp-&gt;<ref refid="classhdf5_1_1_group_1a4e6ad1a1cd86c35708c7090a7a2c05c5" kindref="member">new_dset</ref>(<ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhdf5_1_1_group_1a4e6ad1a1cd86c35708c7090a7a2c05c5" kindref="member">new_dset</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>one<sp/>already<sp/>existed<sp/>so<sp/>just<sp/>skip<sp/>to<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_group_1a4e6ad1a1cd86c35708c7090a7a2c05c5" kindref="member">new_dset</ref>-&gt;<ref refid="classhdf5_1_1_dataset_1a2a45de08f918e75889adb08cc7805e3e" kindref="member">set_data_source</ref>(*it-&gt;second);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>==================<sp/>Dataset<sp/>Class<sp/>public<sp/>methods<sp/>====================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_dataset_1a8f3665cf6a2dc25472ee43e0a278fe48" kindref="member">Dataset::Dataset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>&amp;<sp/>src)<sp/>:<sp/>data_ptr(NULL),<sp/>data_nelements(0),</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_current_element(0),<sp/>data_max_bytes(0),</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_nelements_stored(0),<sp/>data_default(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ndattr_name(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_copy(src);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_dataset_1a8f3665cf6a2dc25472ee43e0a278fe48" kindref="member">Dataset::Dataset</ref>()<sp/>:<sp/><ref refid="classhdf5_1_1_element" kindref="compound">Element</ref>(),<sp/>data_ptr(NULL),<sp/>data_nelements(0),</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_current_element(0),data_max_bytes(0),</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_nelements_stored(0),<sp/>data_default(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ndattr_name(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_dataset_1a8f3665cf6a2dc25472ee43e0a278fe48" kindref="member">Dataset::Dataset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>:<sp/><ref refid="classhdf5_1_1_element" kindref="compound">Element</ref>(name),<sp/>data_ptr(NULL),<sp/>data_nelements(0),</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_current_element(0),data_max_bytes(0),</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_nelements_stored(0),<sp/>data_default(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ndattr_name(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_dataset_1ad40394c58e84e504df3c1a29e0702637" kindref="member">Dataset::~Dataset</ref>()</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;data_ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(this-&gt;data_ptr);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;data_ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>&amp;<sp/><ref refid="classhdf5_1_1_dataset_1a23f2ac0183df490e9659a76cc0bd179a" kindref="member">Dataset::operator =</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>self-assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;src){</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_copy(src);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classhdf5_1_1_dataset_1a35bf08905a60298572236e8ebfdc3bdd" kindref="member">Dataset::_str_</ref>()</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1" kindref="member">DataType_t</ref><sp/>dtype;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out(std::stringstream::out);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;<sp/>Dataset:<sp/>\&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classhdf5_1_1_element_1ac45685511f3cace4cf60133f8db454a2" kindref="member">get_full_name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>datatype:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;datasource.<ref refid="classhdf5_1_1_data_source_1aa1a15b00cd2808aa1c21a6c8e4a774c4" kindref="member">get_datatype</ref>();</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;datasource.<ref refid="classhdf5_1_1_data_source_1a2b272c69d4ef77e188279eefb7ce8e03" kindref="member">is_src_ndattribute</ref>()){</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>NDAttribute:<sp/>\&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;ndattr_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;datasource.<ref refid="classhdf5_1_1_data_source_1a2ca7e3229044080797a803652ae794f3" kindref="member">get_src_def</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>num/max<sp/>elements:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;data_current_element<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;data_nelements<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ptr:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;data_ptr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dtype<sp/>=<sp/>this-&gt;<ref refid="classhdf5_1_1_dataset_1ab717c8d3751644415d8c5f59ace674cf" kindref="member">data_source</ref>().<ref refid="classhdf5_1_1_data_source_1aa1a15b00cd2808aa1c21a6c8e4a774c4" kindref="member">get_datatype</ref>();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dtype<sp/>==<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1af1190e935887f522b0307cce2e801ada" kindref="member">float64</ref>){</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;this-&gt;data_current_element;<sp/>i++){</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>*(((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)this-&gt;data_ptr)+i)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dtype<sp/>==<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1a757b528ff42a524a52ab439e7bb781ea" kindref="member">uint32</ref><sp/>||<sp/>dtype<sp/>==<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1af7b01b3012e6f0f2613f4b22e8c256f8" kindref="member">int32</ref>){</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;this-&gt;data_current_element;<sp/>i++){</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>*(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)this-&gt;data_ptr)+i)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;datasource.<ref refid="classhdf5_1_1_data_source_1adbc3026f29fb63b64111aff1f5e40d84" kindref="member">is_src_detector</ref>()){</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>detector<sp/>data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset_1a2a45de08f918e75889adb08cc7805e3e" kindref="member">Dataset::set_data_source</ref>(<ref refid="classhdf5_1_1_data_source" kindref="compound">DataSource</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;datasource<sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_clear();</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset_1a2a45de08f918e75889adb08cc7805e3e" kindref="member">Dataset::set_data_source</ref>(<ref refid="classhdf5_1_1_data_source" kindref="compound">DataSource</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_elements)</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classhdf5_1_1_dataset_1a2a45de08f918e75889adb08cc7805e3e" kindref="member">set_data_source</ref>(src);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classhdf5_1_1_dataset_1a0c45b763f7f7e8a7eae31e7089f4ca45" kindref="member">data_alloc_max_elements</ref>(max_elements);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_data_source" kindref="compound">DataSource</ref>&amp;<sp/><ref refid="classhdf5_1_1_dataset_1ab717c8d3751644415d8c5f59ace674cf" kindref="member">Dataset::data_source</ref>()</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;datasource;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset_1a0c45b763f7f7e8a7eae31e7089f4ca45" kindref="member">Dataset::data_alloc_max_elements</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_elements)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_clear();<sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we&apos;re<sp/>freeing<sp/>memory<sp/>before<sp/>allocating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_max_bytes<sp/>=<sp/>this-&gt;datasource.<ref refid="classhdf5_1_1_data_source_1a363c8b6944e8e6cb48823848c65dbfdd" kindref="member">datatype_size</ref>()<sp/>*<sp/>max_elements;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_ptr<sp/>=<sp/>calloc(max_elements,<sp/>this-&gt;datasource.<ref refid="classhdf5_1_1_data_source_1a363c8b6944e8e6cb48823848c65dbfdd" kindref="member">datatype_size</ref>());</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_current_element<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_nelements<sp/>=<sp/>max_elements;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset_1ab9f1e0f0adaf0b1d18db185480e56851" kindref="member">Dataset::data_append_value</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>val)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;data_ptr<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>esize<sp/>=<sp/>this-&gt;datasource.<ref refid="classhdf5_1_1_data_source_1a363c8b6944e8e6cb48823848c65dbfdd" kindref="member">datatype_size</ref>();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(esize<sp/>*<sp/>this-&gt;data_current_element<sp/>&gt;<sp/>this-&gt;data_max_bytes)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>automatically<sp/>re-allocate<sp/>twice<sp/>as<sp/>much<sp/>memory<sp/>if<sp/>we<sp/>have<sp/>filled<sp/>up<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;data_current_element<sp/>&gt;=<sp/>this-&gt;data_nelements){</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;data_nelements<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ptmp<sp/>=<sp/>calloc(<sp/>this-&gt;data_nelements,<sp/>esize);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(ptmp,<sp/>this-&gt;data_ptr,<sp/>this-&gt;data_max_bytes);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(this-&gt;data_ptr);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;data_ptr<sp/>=<sp/>ptmp;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;data_max_bytes<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)this-&gt;data_ptr<sp/>+<sp/>(esize<sp/>*<sp/>this-&gt;data_current_element),<sp/>val,<sp/>esize);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_current_element++;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;data_current_element;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset_1a6e5db67a9491c5215a2fcd9a01105a6e" kindref="member">Dataset::data_num_elements</ref>()</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;data_nelements;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset_1aba42adabb94e1f0be959537cbaa5308c" kindref="member">Dataset::data_store_size</ref>()</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;data_nelements<sp/>+<sp/>this-&gt;data_nelements_stored;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset_1afc35c7afcd0669d49b19f482fa76d19b" kindref="member">Dataset::data_stored</ref>()</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tmp_nelements<sp/>=<sp/>this-&gt;data_nelements;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_nelements_stored<sp/>+=<sp/>this-&gt;data_nelements;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_clear();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classhdf5_1_1_dataset_1a0c45b763f7f7e8a7eae31e7089f4ca45" kindref="member">data_alloc_max_elements</ref>(tmp_nelements);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classhdf5_1_1_dataset_1aba5609ef795d177d6ec97147c4b47329" kindref="member">Dataset::data</ref>()</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;data_ptr;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dataset::data_clear()</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>free<sp/>the<sp/>memory<sp/>if<sp/>we<sp/>have<sp/>it<sp/>allocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;data_ptr<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(this-&gt;data_ptr);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;data_ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_nelements<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_max_bytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_current_element<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset_1a85c9a61357dab2c47ffe9c02761c4382" kindref="member">Dataset::set_src_default</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>def)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_default<sp/>=<sp/>def;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset_1a10afe027e429e48ee14916ed6c5da392" kindref="member">Dataset::is_src_default</ref>()</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;data_default;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset_1a4fe7889ad0a6bf9931a6f76e0a91593a" kindref="member">Dataset::set_ndattr_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>ndattr_name<sp/>=<sp/><ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset_1afd27619d863e6d85b029bda074d868eb" kindref="member">Dataset::has_ndattr_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ndattr_name<sp/>==<sp/><ref refid="classhdf5_1_1_element_1ab0b11b3ae3395b46832251d222308aef" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>==================<sp/>Dataset<sp/>Class<sp/>private<sp/>methods<sp/>====================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dataset::_copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_dataset" kindref="compound">Dataset</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_element_1a024ef00b4b3b4915962f218b0c4d3b5b" kindref="member">Element::_copy</ref>(src);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ndattr_name<sp/>=<sp/>src.ndattr_name;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;datasource<sp/>=<sp/>src.datasource;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_current_element<sp/>=<sp/>src.data_current_element;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_max_bytes<sp/>=<sp/>src.data_max_bytes;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_nelements<sp/>=<sp/>src.data_nelements;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data_ptr<sp/>=<sp/>calloc(<sp/>this-&gt;data_nelements,<sp/>this-&gt;datasource.<ref refid="classhdf5_1_1_data_source_1a363c8b6944e8e6cb48823848c65dbfdd" kindref="member">datatype_size</ref>()<sp/>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>==================<sp/>HardLink<sp/>Class<sp/>public<sp/>methods<sp/>====================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_hard_link_1a56925e54cf181d53809e87f35e2e9d0e" kindref="member">HardLink::HardLink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_hard_link" kindref="compound">HardLink</ref>&amp;<sp/>src)<sp/>:<sp/>target(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_copy(src);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_hard_link_1a56925e54cf181d53809e87f35e2e9d0e" kindref="member">HardLink::HardLink</ref>()<sp/>:<sp/><ref refid="classhdf5_1_1_element" kindref="compound">Element</ref>(),<sp/>target(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_hard_link_1a56925e54cf181d53809e87f35e2e9d0e" kindref="member">HardLink::HardLink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>:<sp/><ref refid="classhdf5_1_1_element" kindref="compound">Element</ref>(name),<sp/>target(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_hard_link_1ad585b04a58bf7a0d729b007e12b99175" kindref="member">HardLink::~HardLink</ref>()</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><ref refid="classhdf5_1_1_hard_link" kindref="compound">HardLink</ref>&amp;<sp/><ref refid="classhdf5_1_1_hard_link_1a2fd65c27f7f5fe0ebbd90d500280eab6" kindref="member">HardLink::operator =</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_hard_link" kindref="compound">HardLink</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>self-assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;src){</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_copy(src);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classhdf5_1_1_hard_link_1a0275a03e52149023d1b35bcaccbbd4b6" kindref="member">HardLink::_str_</ref>()</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out(std::stringstream::out);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;<sp/>HardLink:<sp/>\&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classhdf5_1_1_element_1ac45685511f3cace4cf60133f8db454a2" kindref="member">get_full_name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>target:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;target;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_hard_link_1a81645c18c4f5ed122ad8be3f204369cd" kindref="member">HardLink::set_target</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>tgt)</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>target<sp/>=<sp/>tgt;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>std::string&amp;<sp/><ref refid="classhdf5_1_1_hard_link_1a55e1fd38705086ddf767e419ecc65d36" kindref="member">HardLink::get_target</ref>()</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;target;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>==================<sp/>HardLink<sp/>Class<sp/>private<sp/>methods<sp/>====================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HardLink::_copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhdf5_1_1_hard_link" kindref="compound">HardLink</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhdf5_1_1_element_1a024ef00b4b3b4915962f218b0c4d3b5b" kindref="member">Element::_copy</ref>(src);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;target<sp/>=<sp/>src.target;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>hdf5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDFileHDF5Layout.cpp"/>
  </compounddef>
</doxygen>
