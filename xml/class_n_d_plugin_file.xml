<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_n_d_plugin_file" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>NDPluginFile</compoundname>
    <basecompoundref refid="class_n_d_plugin_driver" prot="public" virt="non-virtual">NDPluginDriver</basecompoundref>
    <derivedcompoundref refid="class_n_d_file_h_d_f5" prot="public" virt="non-virtual">NDFileHDF5</derivedcompoundref>
    <derivedcompoundref refid="class_n_d_file_j_p_e_g" prot="public" virt="non-virtual">NDFileJPEG</derivedcompoundref>
    <derivedcompoundref refid="class_n_d_file_magick" prot="public" virt="non-virtual">NDFileMagick</derivedcompoundref>
    <derivedcompoundref refid="class_n_d_file_net_c_d_f" prot="public" virt="non-virtual">NDFileNetCDF</derivedcompoundref>
    <derivedcompoundref refid="class_n_d_file_nexus" prot="public" virt="non-virtual">NDFileNexus</derivedcompoundref>
    <derivedcompoundref refid="class_n_d_file_null" prot="public" virt="non-virtual">NDFileNull</derivedcompoundref>
    <derivedcompoundref refid="class_n_d_file_t_i_f_f" prot="public" virt="non-virtual">NDFileTIFF</derivedcompoundref>
    <derivedcompoundref refid="classffmpeg_file" prot="public" virt="non-virtual">ffmpegFile</derivedcompoundref>
    <derivedcompoundref refid="classpco_edge_plugin" prot="public" virt="non-virtual">pcoEdgePlugin</derivedcompoundref>
    <includes refid="_n_d_plugin_file_8h" local="no">NDPluginFile.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_n_d_plugin_file_1a6255a7fdddc16d94aab10c7a828cc0eb" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int NDPluginFile::supportsMultipleArrays</definition>
        <argsstring></argsstring>
        <name>supportsMultipleArrays</name>
        <briefdescription>
<para>Derived classes must set this flag to 0/1 if they cannot/can write multiple NDArrays to a single file. </para>
        </briefdescription>
        <detaileddescription>
<para>Used in capture and stream modes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="66" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_n_d_plugin_file_1acafe0cd0f20aae4084f85283211e9021" prot="private" static="no" mutable="no">
        <type><ref refid="class_n_d_array" kindref="compound">NDArray</ref> **</type>
        <definition>NDArray** NDPluginFile::pCapture</definition>
        <argsstring></argsstring>
        <name>pCapture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="83" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_n_d_plugin_file_1ad6a0af1e0c6d93cadded927c705817a6" prot="private" static="no" mutable="no">
        <type>epicsMutexId</type>
        <definition>epicsMutexId NDPluginFile::fileMutexId</definition>
        <argsstring></argsstring>
        <name>fileMutexId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="84" column="18" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_n_d_plugin_file_1a9d2383f296314898008b9678c706d1e5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool NDPluginFile::useAttrFilePrefix</definition>
        <argsstring></argsstring>
        <name>useAttrFilePrefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="85" column="10" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_n_d_plugin_file_1a33f97096c59a300c6a96bb330e74fbbf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool NDPluginFile::lazyOpen</definition>
        <argsstring></argsstring>
        <name>lazyOpen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="86" column="10" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_n_d_plugin_file_1a18784e89616607fdb097c31f86114793" prot="private" static="no" mutable="no">
        <type><ref refid="_n_d_array_8h_1a25da0f364d2f6a3b2369b647b38df24e" kindref="member">NDArrayInfo_t</ref> *</type>
        <definition>NDArrayInfo_t* NDPluginFile::ndArrayInfoInit</definition>
        <argsstring></argsstring>
        <name>ndArrayInfoInit</name>
        <briefdescription>
<para>The <ref refid="class_n_d_array" kindref="compound">NDArray</ref> information at file open time. </para>
        </briefdescription>
        <detaileddescription>
<para>Used to check against changes in incoming frames dimensions or datatype </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="87" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_n_d_plugin_file_1a59d1b76dfbef43310a6a5628fdfcc655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NDPluginFile::NDPluginFile</definition>
        <argsstring>(const char *portName, int queueSize, int blockingCallbacks, const char *NDArrayPort, int NDArrayAddr, int maxAddr, int maxBuffers, size_t maxMemory, int interfaceMask, int interruptMask, int asynFlags, int autoConnect, int priority, int stackSize, int maxThreads, bool compressionAware=false)</argsstring>
        <name>NDPluginFile</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>queueSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blockingCallbacks</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>NDArrayPort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NDArrayAddr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxAddr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxBuffers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxMemory</declname>
        </param>
        <param>
          <type>int</type>
          <declname>interfaceMask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>interruptMask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>asynFlags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>autoConnect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stackSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxThreads</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>compressionAware</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="class_n_d_plugin_file" kindref="compound">NDPluginFile</ref>; all parameters are simply passed to <ref refid="class_n_d_plugin_driver_1a64f942bde94593fdb0b5ff5c677197d4" kindref="member">NDPluginDriver::NDPluginDriver</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">portName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the asyn port driver to be created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">queueSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of NDArrays that the input queue for this plugin can hold when NDPluginDriverBlockingCallbacks=0. Larger queues can decrease the number of dropped arrays, at the expense of more <ref refid="class_n_d_array" kindref="compound">NDArray</ref> buffers being allocated from the underlying driver&apos;s <ref refid="class_n_d_array_pool" kindref="compound">NDArrayPool</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockingCallbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial setting for the NDPluginDriverBlockingCallbacks flag. 0=callbacks are queued and executed by the callback thread; 1 callbacks execute in the thread of the driver doing the callbacks. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NDArrayPort</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of asyn port driver for initial source of <ref refid="class_n_d_array" kindref="compound">NDArray</ref> callbacks. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NDArrayAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>asyn port driver address for initial source of <ref refid="class_n_d_array" kindref="compound">NDArray</ref> callbacks. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of asyn addr addresses this driver supports. 1 is minimum. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxBuffers</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of <ref refid="class_n_d_array" kindref="compound">NDArray</ref> buffers that the <ref refid="class_n_d_array_pool" kindref="compound">NDArrayPool</ref> for this driver is allowed to allocate. Set this to 0 to allow an unlimited number of buffers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxMemory</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum amount of memory that the <ref refid="class_n_d_array_pool" kindref="compound">NDArrayPool</ref> for this driver is allowed to allocate. Set this to 0 to allow an unlimited amount of memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interfaceMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask defining the asyn interfaces that this driver supports. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interruptMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask definining the asyn interfaces that can generate interrupts (callbacks) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">asynFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags when creating the asyn port driver; includes ASYN_CANBLOCK and ASYN_MULTIDEVICE. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">autoConnect</parametername>
</parameternamelist>
<parameterdescription>
<para>The autoConnect flag for the asyn port driver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">priority</parametername>
</parameternamelist>
<parameterdescription>
<para>The thread priority for the asyn port driver thread if ASYN_CANBLOCK is set in asynFlags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stackSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The stack size for the asyn port driver thread if ASYN_CANBLOCK is set in asynFlags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxThreads</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of threads this driver is allowed to use. If 0 then 1 will be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">compressionAware</parametername>
</parameternamelist>
<parameterdescription>
<para>true if this file plugin can handle compressed NDArrays. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="30" column="5" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="915" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1a49e1a69095365b5f2643695c8ca5f5ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void NDPluginFile::processCallbacks</definition>
        <argsstring>(NDArray *pArray)</argsstring>
        <name>processCallbacks</name>
        <reimplements refid="class_n_d_plugin_driver_1a75ed5528f584d90e4f789aef058661cd">processCallbacks</reimplements>
        <reimplementedby refid="classpco_edge_plugin_1a216639465ebb2332343942e8de9fdd09">processCallbacks</reimplementedby>
        <param>
          <type><ref refid="class_n_d_array" kindref="compound">NDArray</ref> *</type>
          <declname>pArray</declname>
        </param>
        <briefdescription>
<para>Callback function that is called by the <ref refid="class_n_d_array" kindref="compound">NDArray</ref> driver with new <ref refid="class_n_d_array" kindref="compound">NDArray</ref> data. </para>
        </briefdescription>
        <detaileddescription>
<para>Saves a single file if NDFileWriteMode=NDFileModeSingle and NDAutoSave=1. Stores array in a capture buffer if NDFileWriteMode=NDFileModeCapture and NDFileCapture=1. Appends data to an open file if NDFileWriteMode=NDFileModeStream and NDFileCapture=1. In capture or stream mode if the desired number of arrays has been saved (NDFileNumCaptured=NDFileNumCapture) then it stops capture or streaming. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pArray</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_n_d_array" kindref="compound">NDArray</ref> from the callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="37" column="18" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="712" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1ab94ee0e792cf736d95885c61f89dbeac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>asynStatus</type>
        <definition>asynStatus NDPluginFile::writeInt32</definition>
        <argsstring>(asynUser *pasynUser, epicsInt32 value)</argsstring>
        <name>writeInt32</name>
        <reimplements refid="class_n_d_plugin_driver_1a5f60198f46fd7cd89c101dce9533f3aa">writeInt32</reimplements>
        <reimplementedby refid="class_n_d_file_h_d_f5_1a93b912985918638c2043e9ffd10d5550">writeInt32</reimplementedby>
        <param>
          <type>asynUser *</type>
          <declname>pasynUser</declname>
        </param>
        <param>
          <type>epicsInt32</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Called when asyn clients call pasynInt32-&gt;write(). </para>
        </briefdescription>
        <detaileddescription>
<para>This function performs actions for some parameters, including NDReadFile, NDWriteFile and NDFileCapture. For other parameters it calls <ref refid="class_n_d_plugin_driver_1a5f60198f46fd7cd89c101dce9533f3aa" kindref="member">NDPluginDriver::writeInt32</ref> to see if that method understands the parameter. For all parameters it sets the value in the parameter library and calls any registered callbacks.. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pasynUser</parametername>
</parameternamelist>
<parameterdescription>
<para>pasynUser structure that encodes the reason and address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="38" column="24" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="796" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1ab3cde6fd6af5ec69e60c63614b7ecd6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>asynStatus</type>
        <definition>asynStatus NDPluginFile::writeNDArray</definition>
        <argsstring>(asynUser *pasynUser, void *genericPointer)</argsstring>
        <name>writeNDArray</name>
        <param>
          <type>asynUser *</type>
          <declname>pasynUser</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>genericPointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="39" column="24" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="874" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1a9758e4ab84ba1959fd942bd181f7577f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>asynStatus</type>
        <definition>virtual asynStatus NDPluginFile::openFile</definition>
        <argsstring>(const char *fileName, NDFileOpenMode_t openMode, NDArray *pArray)=0</argsstring>
        <name>openFile</name>
        <reimplementedby refid="class_n_d_file_h_d_f5_1af14d09cbad66e107e354fcbcb87cd141">openFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_j_p_e_g_1a6004151e4870085cbc281215b3366d14">openFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_magick_1a15942537c3a299ef246f621124e0988a">openFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_net_c_d_f_1a2875f4d09dab434f3aef2187a5349641">openFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_nexus_1a512c83e2f73921a28eb293ed46adb2ae">openFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_null_1acc3865549b4d1d05bb98c6ee54d55ecf">openFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_t_i_f_f_1a0f6e77ee9eee63c0c58e05c7f355a85b">openFile</reimplementedby>
        <reimplementedby refid="classpco_edge_plugin_1a7bdd835f8f803bf19f766bb3dc24266e">openFile</reimplementedby>
        <reimplementedby refid="classffmpeg_file_1a9ed8ae7dbff372476b59cf7e310456ba">openFile</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type><ref refid="_n_d_plugin_file_8h_1a0585278ac7a80661367c32f62ad6c653" kindref="member">NDFileOpenMode_t</ref></type>
          <declname>openMode</declname>
        </param>
        <param>
          <type><ref refid="class_n_d_array" kindref="compound">NDArray</ref> *</type>
          <declname>pArray</declname>
        </param>
        <briefdescription>
<para>Open a file; pure virtual function that must be implemented by derived classes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute path name of the file to open. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">openMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask with one of the access mode bits NDFileModeRead, NDFileModeWrite. NDFileModeAppend. May also have the bit NDFileModeMultiple set if the file is to be opened to write or read multiple NDArrays into a single file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pArray</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an <ref refid="class_n_d_array" kindref="compound">NDArray</ref>; this array does not contain data to be written or read. Rather it can be used to determine the header information and data structure for the file. It is guaranteed that NDArrays pass to <ref refid="class_n_d_plugin_file_1aa4492e7f3b478ba3d9cd5f7a179c469b" kindref="member">NDPluginFile::writeFile</ref> or <ref refid="class_n_d_plugin_file_1a810cbc3916e9e1aae2ec1d9c589320f2" kindref="member">NDPluginFile::readFile</ref> will have the same data type, data dimensions and attributes as this array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="50" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1a810cbc3916e9e1aae2ec1d9c589320f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>asynStatus</type>
        <definition>virtual asynStatus NDPluginFile::readFile</definition>
        <argsstring>(NDArray **pArray)=0</argsstring>
        <name>readFile</name>
        <reimplementedby refid="class_n_d_file_h_d_f5_1a2680dc0b6dfee8bc3020001607926771">readFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_j_p_e_g_1a99f50a455344fe551342e6b94c77df2e">readFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_magick_1a40c0fdc7c3aaa26a652119ac18a04d72">readFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_net_c_d_f_1af1a444e74dba7b3f03a0529d83b8e844">readFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_nexus_1adf003e65e73f369aec5f17a6a159ab34">readFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_null_1a285d2dc0a4db353626dbc29b5297163e">readFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_t_i_f_f_1a61a76bcf316c3c9682c87d9231fdb3c9">readFile</reimplementedby>
        <reimplementedby refid="classpco_edge_plugin_1a98c25b5f6ce28577a1aa86516a46f90d">readFile</reimplementedby>
        <reimplementedby refid="classffmpeg_file_1a6620811b6b142ef011e77a49f6321084">readFile</reimplementedby>
        <param>
          <type><ref refid="class_n_d_array" kindref="compound">NDArray</ref> **</type>
          <declname>pArray</declname>
        </param>
        <briefdescription>
<para>Read <ref refid="class_n_d_array" kindref="compound">NDArray</ref> data from a file; pure virtual function that must be implemented by derived classes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pArray</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the address of an <ref refid="class_n_d_array" kindref="compound">NDArray</ref> to read the data into. <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="54" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1aa4492e7f3b478ba3d9cd5f7a179c469b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>asynStatus</type>
        <definition>virtual asynStatus NDPluginFile::writeFile</definition>
        <argsstring>(NDArray *pArray)=0</argsstring>
        <name>writeFile</name>
        <reimplementedby refid="class_n_d_file_h_d_f5_1a577c4b3ed97f95cdf74beb08886f4579">writeFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_j_p_e_g_1abce283acdac1a7a22f4cf51c2ea4c4c2">writeFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_magick_1a08d523c515bcf76e66339a5db36b28ae">writeFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_net_c_d_f_1a4475f49bbe821f870f9140e484afcbfe">writeFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_nexus_1ad09e4ff9d4a87c60a840c32bb009748a">writeFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_null_1a2b94c1c21f7bc4d6e945635f8f68865c">writeFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_t_i_f_f_1ab9577db1c85a05a25f10bb63d00521f4">writeFile</reimplementedby>
        <reimplementedby refid="classpco_edge_plugin_1a091e3fc2d840ffb48fee456bac649ed2">writeFile</reimplementedby>
        <reimplementedby refid="classffmpeg_file_1ad948c22ad53a0f30def7f9635db1e07d">writeFile</reimplementedby>
        <param>
          <type><ref refid="class_n_d_array" kindref="compound">NDArray</ref> *</type>
          <declname>pArray</declname>
        </param>
        <briefdescription>
<para>Write <ref refid="class_n_d_array" kindref="compound">NDArray</ref> data to a file; pure virtual function that must be implemented by derived classes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pArray</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an <ref refid="class_n_d_array" kindref="compound">NDArray</ref> to write to the file. This function can be called multiple times between the call to openFile and closeFile if the class set supportsMultipleArrays=1 and NDFileModeMultiple was set in openMode in the call to <ref refid="class_n_d_plugin_file_1a9758e4ab84ba1959fd942bd181f7577f" kindref="member">NDPluginFile::openFile</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="60" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1a815abad359463ebfecfd9c5d0c01b6fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>asynStatus</type>
        <definition>virtual asynStatus NDPluginFile::closeFile</definition>
        <argsstring>()=0</argsstring>
        <name>closeFile</name>
        <reimplementedby refid="class_n_d_file_h_d_f5_1abdf52d4a798618711cd9d73eab352456">closeFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_j_p_e_g_1af906537abb3ea2133e3984e15ca0e112">closeFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_magick_1a138b745a98a21593046ef6f2c02ed3b9">closeFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_net_c_d_f_1a35af756bbfae5475b239c6baacae04e7">closeFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_nexus_1a89564ec15ec34df81af982aca7ade01a">closeFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_null_1a971af95c99b7a01893b7bd4c62d23dd1">closeFile</reimplementedby>
        <reimplementedby refid="class_n_d_file_t_i_f_f_1ab697161ed5059acb5981f2dbeb462492">closeFile</reimplementedby>
        <reimplementedby refid="classpco_edge_plugin_1a67816988308892c8a9e10b7c9e371e43">closeFile</reimplementedby>
        <reimplementedby refid="classffmpeg_file_1a7c0b7abd5c58060c64eb78d59114489e">closeFile</reimplementedby>
        <briefdescription>
<para>Close the file opened with <ref refid="class_n_d_plugin_file_1a9758e4ab84ba1959fd942bd181f7577f" kindref="member">NDPluginFile::openFile</ref>; pure virtual function that must be implemented by derived classes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="64" column="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_n_d_plugin_file_1aafa72df8a464500e39bf76d8329ea56f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asynStatus</type>
        <definition>asynStatus NDPluginFile::openFileBase</definition>
        <argsstring>(NDFileOpenMode_t openMode, NDArray *pArray)</argsstring>
        <name>openFileBase</name>
        <param>
          <type><ref refid="_n_d_plugin_file_8h_1a0585278ac7a80661367c32f62ad6c653" kindref="member">NDFileOpenMode_t</ref></type>
          <declname>openMode</declname>
        </param>
        <param>
          <type><ref refid="class_n_d_array" kindref="compound">NDArray</ref> *</type>
          <declname>pArray</declname>
        </param>
        <briefdescription>
<para>Base method for opening a file Creates the file name with <ref refid="classasyn_n_d_array_driver_1a813f6c84e96329cd89653a3b0497f8a9" kindref="member">asynNDArrayDriver::createFileName</ref>, then calls the pure virtual function openFile in the derived class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="70" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="29" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1a624736b3a452ac10808086f8379716a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asynStatus</type>
        <definition>asynStatus NDPluginFile::readFileBase</definition>
        <argsstring>()</argsstring>
        <name>readFileBase</name>
        <briefdescription>
<para>Base method for reading a file Creates the file name with <ref refid="classasyn_n_d_array_driver_1a813f6c84e96329cd89653a3b0497f8a9" kindref="member">asynNDArrayDriver::createFileName</ref>, then calls the pure virtual functions openFile, readFile and closeFile in the derived class. </para>
        </briefdescription>
        <detaileddescription>
<para>Does callbacks with the <ref refid="class_n_d_array" kindref="compound">NDArray</ref> that was read in. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="71" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="136" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1a493583a960959a17f4d421e4923c52d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asynStatus</type>
        <definition>asynStatus NDPluginFile::writeFileBase</definition>
        <argsstring>()</argsstring>
        <name>writeFileBase</name>
        <briefdescription>
<para>Base method for writing a file Handles logic for NDFileModeSingle, NDFileModeCapture and NDFileModeStream when the derived class does or does not support NDPulginFileMultiple. </para>
        </briefdescription>
        <detaileddescription>
<para>Calls writeFile in the derived class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="72" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="201" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1a5501eb02d6c2fe083b4565999e133a20" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asynStatus</type>
        <definition>asynStatus NDPluginFile::closeFileBase</definition>
        <argsstring>()</argsstring>
        <name>closeFileBase</name>
        <briefdescription>
<para>Base method for closing a file Calls the pure virtual function closeFile in the derived class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="73" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="83" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1a11d8077abb04cad65f997043bc0d57eb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asynStatus</type>
        <definition>asynStatus NDPluginFile::doCapture</definition>
        <argsstring>(int capture)</argsstring>
        <name>doCapture</name>
        <param>
          <type>int</type>
          <declname>capture</declname>
        </param>
        <briefdescription>
<para>Handles the logic for when NDFileCapture changes state, starting or stopping capturing or streaming NDArrays to a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">capture</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to start or stop capture; 1=start capture, 0=stop capture. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="74" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="407" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1a93f9e30c61f815c5df5ec8b2baa72048" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NDPluginFile::freeCaptureBuffer</definition>
        <argsstring>(int numCapture)</argsstring>
        <name>freeCaptureBuffer</name>
        <param>
          <type>int</type>
          <declname>numCapture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="75" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="388" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1aaf68715682c427c24232547abd4cf639" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asynStatus</type>
        <definition>asynStatus NDPluginFile::attrFileCloseCheck</definition>
        <argsstring>()</argsstring>
        <name>attrFileCloseCheck</name>
        <briefdescription>
<para>Check whether an attribute asking the file to be closed has been set. </para>
        </briefdescription>
        <detaileddescription>
<para>if the value of FILEPLUGIN_CLOSE attribute is set to 1 then close the file. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="76" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="493" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1ad46aaf898900550c5ff7989da42c3526" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asynStatus</type>
        <definition>asynStatus NDPluginFile::attrFileNameCheck</definition>
        <argsstring>()</argsstring>
        <name>attrFileNameCheck</name>
        <briefdescription>
<para>Check whether the attributes defining the filename has changed since last write. </para>
        </briefdescription>
        <detaileddescription>
<para>If this is the first frame (NDFileNumCaptured == 1) then the file is opened. For other frames we check whether the attribute file name or number has changed since last write. If this is the case then the current file is closed a new one opened. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="77" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="523" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1a6902731eb37b201cbcf4aa551a57d714" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asynStatus</type>
        <definition>asynStatus NDPluginFile::attrFileNameSet</definition>
        <argsstring>()</argsstring>
        <name>attrFileNameSet</name>
        <briefdescription>
<para>Look up filename related attributes in the <ref refid="class_n_d_array" kindref="compound">NDArray</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>If file name or number is found in the <ref refid="class_n_d_array" kindref="compound">NDArray</ref>, the values are replacing the existing ones in the parameter library. If not found the existing settings remain. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="78" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="578" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1aeb844e79c807e79f074fd4388e005c04" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool NDPluginFile::attrIsProcessingRequired</definition>
        <argsstring>(NDAttributeList *pAttrList)</argsstring>
        <name>attrIsProcessingRequired</name>
        <param>
          <type><ref refid="class_n_d_attribute_list" kindref="compound">NDAttributeList</ref> *</type>
          <declname>pAttrList</declname>
        </param>
        <briefdescription>
<para>Decide whether or not this frame is intended to be processed by this plugin. </para>
        </briefdescription>
        <detaileddescription>
<para>By default all frames are processed. The decision not to process a frame is made based on the string value of the FILEPLUGIN_DESTINATION: if the value does not equal either &quot;all&quot; or the ASYN port name of the current plugin the frame is not to be processed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pAttrList</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the current <ref refid="class_n_d_array" kindref="compound">NDArray</ref>&apos;s attribute list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the frame is to be processed. false if the frame is not to be processed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="79" column="10" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="626" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1a514cc9b7bca4716d69c8bc24bfb87797" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NDPluginFile::registerInitFrameInfo</definition>
        <argsstring>(NDArray *pArray)</argsstring>
        <name>registerInitFrameInfo</name>
        <param>
          <type><ref refid="class_n_d_array" kindref="compound">NDArray</ref> *</type>
          <declname>pArray</declname>
        </param>
        <briefdescription>
<para>Grab a copy of the NDArrayInfo_t structure for future reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="80" column="10" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="650" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="class_n_d_plugin_file_1af03884f20b8894106c941a16191fa610" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool NDPluginFile::isFrameValid</definition>
        <argsstring>(NDArray *pArray)</argsstring>
        <name>isFrameValid</name>
        <param>
          <type><ref refid="class_n_d_array" kindref="compound">NDArray</ref> *</type>
          <declname>pArray</declname>
        </param>
        <briefdescription>
<para>Compare pArray dimensions and datatype against latched NDArrayInfo_t structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="81" column="10" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.cpp" bodystart="662" bodyend="702"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for <ref refid="class_n_d_array" kindref="compound">NDArray</ref> file writing plugins; actual file writing plugins inherit from this class. </para>
    </briefdescription>
    <detaileddescription>
<para>This class handles the logic of single file per image, capture into buffer or streaming multiple images to a single file. Derived classes must implement the 4 pure virtual functions: openFile, readFile, writeFile and closeFile. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>NDPluginDriver</label>
        <link refid="class_n_d_plugin_driver"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>ffmpegFile</label>
        <link refid="classffmpeg_file"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>epicsThreadRunable</label>
      </node>
      <node id="1">
        <label>NDPluginFile</label>
        <link refid="class_n_d_plugin_file"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>asynPortDriver</label>
      </node>
      <node id="3">
        <label>asynNDArrayDriver</label>
        <link refid="classasyn_n_d_array_driver"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>NDFileNull</label>
        <link refid="class_n_d_file_null"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>pcoEdgePlugin</label>
        <link refid="classpco_edge_plugin"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>NDFileNexus</label>
        <link refid="class_n_d_file_nexus"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>NDFileTIFF</label>
        <link refid="class_n_d_file_t_i_f_f"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>NDFileJPEG</label>
        <link refid="class_n_d_file_j_p_e_g"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>NDFileNetCDF</label>
        <link refid="class_n_d_file_net_c_d_f"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>NDFileHDF5</label>
        <link refid="class_n_d_file_h_d_f5"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>NDFileMagick</label>
        <link refid="class_n_d_file_magick"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>NDPluginDriver</label>
        <link refid="class_n_d_plugin_driver"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>pPrevInputArray_</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>epicsThreadRunable</label>
      </node>
      <node id="8">
        <label>NDDimension</label>
        <link refid="struct_n_d_dimension"/>
      </node>
      <node id="1">
        <label>NDPluginFile</label>
        <link refid="class_n_d_plugin_file"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>asynPortDriver</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="9">
        <label>Codec_t</label>
        <link refid="struct_codec__t"/>
        <childnode refid="10" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>NDArray</label>
        <link refid="class_n_d_array"/>
        <childnode refid="5" relation="usage">
          <edgelabel>pNDArrayPool</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>dims</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>pAttributeList</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>codec</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>pDriver</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>asynNDArrayDriver</label>
        <link refid="classasyn_n_d_array_driver"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>pNDArrayPool</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>pAttributeList</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>pArrays</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>NDArrayPool</label>
        <link refid="class_n_d_array_pool"/>
      </node>
      <node id="6">
        <label>NDAttributeList</label>
        <link refid="class_n_d_attribute_list"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" line="28" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFile.h" bodystart="28" bodyend="89"/>
    <listofallmembers>
      <member refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>ADAcquire</name></member>
      <member refid="classasyn_n_d_array_driver_1aaeb5af71e22323b6a3d4f51be380bc7a" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>ADAcquireBusy</name></member>
      <member refid="classasyn_n_d_array_driver_1a4eadbf94d756dcf7b61d624f791fd516" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>ADFirmwareVersion</name></member>
      <member refid="classasyn_n_d_array_driver_1a2deb25acd798e9e0da6c52741a07b915" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>ADManufacturer</name></member>
      <member refid="classasyn_n_d_array_driver_1a4c15720b7002ec1ff9278058240d82da" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>ADModel</name></member>
      <member refid="classasyn_n_d_array_driver_1a89d5bd570163bd569bc6d2a2163da9c2" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>ADSDKVersion</name></member>
      <member refid="classasyn_n_d_array_driver_1aa4d910fd087c8eb02f3437b18b80bba1" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>ADSerialNumber</name></member>
      <member refid="classasyn_n_d_array_driver_1adb00dde7e1d46856e0bd4b586aff6bd2" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>ADWaitForPlugins</name></member>
      <member refid="classasyn_n_d_array_driver_1aaaccd27681be8d91d10246e1aad72034" prot="public" virt="non-virtual"><scope>NDPluginFile</scope><name>asynNDArrayDriver</name></member>
      <member refid="class_n_d_plugin_file_1aaf68715682c427c24232547abd4cf639" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>attrFileCloseCheck</name></member>
      <member refid="class_n_d_plugin_file_1ad46aaf898900550c5ff7989da42c3526" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>attrFileNameCheck</name></member>
      <member refid="class_n_d_plugin_file_1a6902731eb37b201cbcf4aa551a57d714" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>attrFileNameSet</name></member>
      <member refid="class_n_d_plugin_file_1aeb844e79c807e79f074fd4388e005c04" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>attrIsProcessingRequired</name></member>
      <member refid="class_n_d_plugin_driver_1a1aef91c358b7b8bde97fc1a01eb7c00d" prot="protected" virt="virtual"><scope>NDPluginFile</scope><name>beginProcessCallbacks</name></member>
      <member refid="classasyn_n_d_array_driver_1aba7309da5e7c5571fc693b1998c9d236" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>checkPath</name></member>
      <member refid="classasyn_n_d_array_driver_1aaca89f35ddf4c5a1c22374ff608593cd" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>checkPath</name></member>
      <member refid="class_n_d_plugin_file_1a815abad359463ebfecfd9c5d0c01b6fc" prot="public" virt="pure-virtual"><scope>NDPluginFile</scope><name>closeFile</name></member>
      <member refid="class_n_d_plugin_file_1a5501eb02d6c2fe083b4565999e133a20" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>closeFileBase</name></member>
      <member refid="class_n_d_plugin_driver_1aff27b7526fff890c1a88c2da0297b92c" prot="protected" virt="virtual"><scope>NDPluginFile</scope><name>connectToArrayPort</name></member>
      <member refid="classasyn_n_d_array_driver_1a813f6c84e96329cd89653a3b0497f8a9" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>createFileName</name></member>
      <member refid="classasyn_n_d_array_driver_1af5494c8e3b3f317e049a5c336d8065f4" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>createFileName</name></member>
      <member refid="classasyn_n_d_array_driver_1a42b3686c9c08b14ba054dd005a30fa0d" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>createFilePath</name></member>
      <member refid="classasyn_n_d_array_driver_1acc2afad33faf8e45d6f21e251133ed94" prot="public" virt="non-virtual"><scope>NDPluginFile</scope><name>decrementQueuedArrayCount</name></member>
      <member refid="class_n_d_plugin_file_1a11d8077abb04cad65f997043bc0d57eb" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>doCapture</name></member>
      <member refid="class_n_d_plugin_driver_1aa511b82dd2d49966c199b1ed4f72101f" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>driverCallback</name></member>
      <member refid="class_n_d_plugin_driver_1ad2a1210161a2f542f347482aa93f3797" prot="protected" virt="virtual"><scope>NDPluginFile</scope><name>endProcessCallbacks</name></member>
      <member refid="class_n_d_plugin_file_1ad6a0af1e0c6d93cadded927c705817a6" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>fileMutexId</name></member>
      <member refid="class_n_d_plugin_file_1a93f9e30c61f815c5df5ec8b2baa72048" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>freeCaptureBuffer</name></member>
      <member refid="classasyn_n_d_array_driver_1a7492ba858d885e2ba226a1c7ef9dcf72" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>getAttributes</name></member>
      <member refid="classasyn_n_d_array_driver_1a1a369bc9b605bba000f782c69429622b" prot="public" virt="non-virtual"><scope>NDPluginFile</scope><name>getQueuedArrayCount</name></member>
      <member refid="classasyn_n_d_array_driver_1ad55549fca656bc01cbe0e3c92e4d29e3" prot="public" virt="non-virtual"><scope>NDPluginFile</scope><name>incrementQueuedArrayCount</name></member>
      <member refid="class_n_d_plugin_file_1af03884f20b8894106c941a16191fa610" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>isFrameValid</name></member>
      <member refid="class_n_d_plugin_file_1a33f97096c59a300c6a96bb330e74fbbf" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>lazyOpen</name></member>
      <member refid="classasyn_n_d_array_driver_1ad472f633149cd560959721e589d9ea54" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDADCoreVersion</name></member>
      <member refid="classasyn_n_d_array_driver_1af2354f73acece6ee2427f5069b16fdb5" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDArrayCallbacks</name></member>
      <member refid="classasyn_n_d_array_driver_1abec5f5fc9922549d745d7dc7f19243ea" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDArrayCounter</name></member>
      <member refid="classasyn_n_d_array_driver_1a2b2fe51fba9a6ee4146813eac0c47fd1" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDArrayData</name></member>
      <member refid="class_n_d_plugin_file_1a18784e89616607fdb097c31f86114793" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>ndArrayInfoInit</name></member>
      <member refid="classasyn_n_d_array_driver_1abf6f05821c7d1a9ab6aef60c9374281e" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDArraySize</name></member>
      <member refid="classasyn_n_d_array_driver_1a79c89c00ea62734d82c89e09ea8aa47b" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDArraySizeX</name></member>
      <member refid="classasyn_n_d_array_driver_1a75753778fe16182d0771e924f05bde33" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDArraySizeY</name></member>
      <member refid="classasyn_n_d_array_driver_1a72fac0fbaa730672f9a3a6da8c1d1a97" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDArraySizeZ</name></member>
      <member refid="classasyn_n_d_array_driver_1a4fae01b5b72053b6ae11dcd37ff6aff0" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDAttributesFile</name></member>
      <member refid="classasyn_n_d_array_driver_1abba302aca48e561ee5b40794db9f0708" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDAttributesMacros</name></member>
      <member refid="classasyn_n_d_array_driver_1a0875da7319e3cc7f54212629208b1d95" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDAttributesStatus</name></member>
      <member refid="classasyn_n_d_array_driver_1a9966536066c350fc218d3d7cb4d66aaf" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDAutoIncrement</name></member>
      <member refid="classasyn_n_d_array_driver_1a73da5c2affb0342b82b470f96a068d1a" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDAutoSave</name></member>
      <member refid="classasyn_n_d_array_driver_1a6e584ca2489de3a5e3e9d4d4e00bb7c0" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDBayerPattern</name></member>
      <member refid="classasyn_n_d_array_driver_1a43641411ca31d630cbf30adab5e553b2" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDCodec</name></member>
      <member refid="classasyn_n_d_array_driver_1abf7b27064b0d69440f16feb1e19f6cf2" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDColorMode</name></member>
      <member refid="classasyn_n_d_array_driver_1a2a9b3db5995b201c2e153decfd79391e" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDCompressedSize</name></member>
      <member refid="classasyn_n_d_array_driver_1af71358738ff1dbe4c9185f105807f799" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDDataType</name></member>
      <member refid="classasyn_n_d_array_driver_1a23727b6252a78b74fc40868f15e656dc" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDDimensions</name></member>
      <member refid="classasyn_n_d_array_driver_1a2be0f672f139c59f942bedfd7d94ff0f" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDDriverVersion</name></member>
      <member refid="classasyn_n_d_array_driver_1a436f60f2a566a9be759c2dad9a9cbbaf" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDEpicsTSNsec</name></member>
      <member refid="classasyn_n_d_array_driver_1af9d5abcc0a9ef2a21abce8607fd7650e" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDEpicsTSSec</name></member>
      <member refid="classasyn_n_d_array_driver_1adc503aa2621ea29c553514b09784229a" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileCapture</name></member>
      <member refid="classasyn_n_d_array_driver_1a726ad8d1b09b0fc5e08e0561e9bc255f" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileCreateDir</name></member>
      <member refid="classasyn_n_d_array_driver_1a1ce29ba9f5d31b52628ae76129d15fa2" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileDeleteDriverFile</name></member>
      <member refid="classasyn_n_d_array_driver_1a8911e3455de6adbfcb21093da9ff0500" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileFormat</name></member>
      <member refid="classasyn_n_d_array_driver_1a8f5e5a7aae6848a12e55012273ab06c5" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileLazyOpen</name></member>
      <member refid="classasyn_n_d_array_driver_1a513d2b4cc04ba240f434394c715f733f" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileName</name></member>
      <member refid="classasyn_n_d_array_driver_1a6d7cf0fea0eba3eb69fe69a60b89b30c" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileNumber</name></member>
      <member refid="classasyn_n_d_array_driver_1abd42667177a6b0ea88888487511514cd" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileNumCapture</name></member>
      <member refid="classasyn_n_d_array_driver_1aa392d8dfaa3d659958deddf100d54aed" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileNumCaptured</name></member>
      <member refid="classasyn_n_d_array_driver_1ac511e9800761d6cb070d3540940b24c3" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFilePath</name></member>
      <member refid="classasyn_n_d_array_driver_1a3cf47b7e4df08a87b0585c62509878bf" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFilePathExists</name></member>
      <member refid="classasyn_n_d_array_driver_1a2db8828aac3ad3c3df409291395fcb4d" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileTemplate</name></member>
      <member refid="classasyn_n_d_array_driver_1a5523209bde8cdb69b0ea275628422e9f" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileTempSuffix</name></member>
      <member refid="classasyn_n_d_array_driver_1a392868002486b6c806c587ef3f73c320" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileWriteMessage</name></member>
      <member refid="classasyn_n_d_array_driver_1ae446f2d56cfb91299839a1a3fea72a62" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileWriteMode</name></member>
      <member refid="classasyn_n_d_array_driver_1ab5b4722576613c52894c55da7153a05f" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFileWriteStatus</name></member>
      <member refid="classasyn_n_d_array_driver_1ad109404880a23929fc17dea1f09e0775" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDFullFileName</name></member>
      <member refid="classasyn_n_d_array_driver_1aa13dc824ba27681f894f8319f3f13a8c" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDNDimensions</name></member>
      <member refid="classasyn_n_d_array_driver_1aff0d6045cf18c21959a8c21228549ecd" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDNumQueuedArrays</name></member>
      <member refid="class_n_d_plugin_driver_1a64f942bde94593fdb0b5ff5c677197d4" prot="public" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriver</name></member>
      <member refid="class_n_d_plugin_driver_1aded3fa83fce5860a43183c1441f3c1b8" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverArrayAddr</name></member>
      <member refid="class_n_d_plugin_driver_1af17c68cbdf44c2d0e5afe616cea59a33" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverArrayPort</name></member>
      <member refid="class_n_d_plugin_driver_1a5b8196a068729c124aea5e93acc18082" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverBlockingCallbacks</name></member>
      <member refid="class_n_d_plugin_driver_1acdc0e6ca61992ece1b16765935789d42" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverDisorderedArrays</name></member>
      <member refid="class_n_d_plugin_driver_1a181790b177900d66a9536764ac814915" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverDroppedArrays</name></member>
      <member refid="class_n_d_plugin_driver_1afe1c9c90e217f1eab41da7e41affa18b" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverDroppedOutputArrays</name></member>
      <member refid="class_n_d_plugin_driver_1a120cd6bb3fba2592ba8b5d0bafedaa63" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverEnableCallbacks</name></member>
      <member refid="class_n_d_plugin_driver_1afb29a9c55233ce7950e58c27a12e2000" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverExecutionTime</name></member>
      <member refid="class_n_d_plugin_driver_1a643775874259dd6ad39a93791a9fca65" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverMaxByteRate</name></member>
      <member refid="class_n_d_plugin_driver_1ab534ecf779c0903202e39584ee9a4d78" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverMaxThreads</name></member>
      <member refid="class_n_d_plugin_driver_1a451f714fdd397166f06c6185fe66c796" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverMinCallbackTime</name></member>
      <member refid="class_n_d_plugin_driver_1ab203222d4bbc658f83ae0a2d0e4d1751" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverNumThreads</name></member>
      <member refid="class_n_d_plugin_driver_1aee6432ed8a237cb0c622cdd3fe34cede" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverPluginType</name></member>
      <member refid="class_n_d_plugin_driver_1a212c8e1abc30af8fab372fc30da64217" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverProcessPlugin</name></member>
      <member refid="class_n_d_plugin_driver_1a7667b496159eb0104f1bbfbff73be21f" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverQueueFree</name></member>
      <member refid="class_n_d_plugin_driver_1a0f901287274bd6fe8880dcfddf2f41fe" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverQueueSize</name></member>
      <member refid="class_n_d_plugin_driver_1a0a586ae818b8728039ef5e5e2ef5fe60" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverSortFree</name></member>
      <member refid="class_n_d_plugin_driver_1ae95276d032904ecf950d3eb2dba1d475" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverSortMode</name></member>
      <member refid="class_n_d_plugin_driver_1a9c31a96a3e2e334ce1fe36cfd5781c11" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverSortSize</name></member>
      <member refid="class_n_d_plugin_driver_1adc03a67c19691e7d6f7f647c7bbb87ac" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginDriverSortTime</name></member>
      <member refid="class_n_d_plugin_file_1a59d1b76dfbef43310a6a5628fdfcc655" prot="public" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPluginFile</name></member>
      <member refid="classasyn_n_d_array_driver_1adf264650a61fe86c37dbc7a4e5c1fbd0" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPoolAllocBuffers</name></member>
      <member refid="classasyn_n_d_array_driver_1af3cacda934695b472269d32ba2d94a86" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPoolEmptyFreeList</name></member>
      <member refid="classasyn_n_d_array_driver_1a9514efd0d89337677ccb428b8b3ac518" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPoolFreeBuffers</name></member>
      <member refid="classasyn_n_d_array_driver_1a5ab509aca13c1642449253f6ce6eca2c" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPoolMaxBuffers</name></member>
      <member refid="classasyn_n_d_array_driver_1a7267d600284240edc0f0abe484dff2ee" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPoolMaxMemory</name></member>
      <member refid="classasyn_n_d_array_driver_1a2a7b868b8d6c542fff28993e1c977e4b" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPoolUsedMemory</name></member>
      <member refid="classasyn_n_d_array_driver_1acefc2096d9db2fd102542a957722ceef" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDPortNameSelf</name></member>
      <member refid="classasyn_n_d_array_driver_1acdf9d2f3575481f29544c56c9fe46c5c" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDReadFile</name></member>
      <member refid="classasyn_n_d_array_driver_1a9b5492ae014f21d0843658f19e955dc1" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDTimeStamp</name></member>
      <member refid="classasyn_n_d_array_driver_1a8d713b9cc045417a599c91aacc98b08b" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDUniqueId</name></member>
      <member refid="classasyn_n_d_array_driver_1a5d1ec3e763ea9aef2f3fd576611baeb5" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>NDWriteFile</name></member>
      <member refid="class_n_d_plugin_file_1a9758e4ab84ba1959fd942bd181f7577f" prot="public" virt="pure-virtual"><scope>NDPluginFile</scope><name>openFile</name></member>
      <member refid="class_n_d_plugin_file_1aafa72df8a464500e39bf76d8329ea56f" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>openFileBase</name></member>
      <member refid="classasyn_n_d_array_driver_1a6f5685f9951f6b3b897e85425b59ad69" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>pArrays</name></member>
      <member refid="classasyn_n_d_array_driver_1a7bed3ca3a144124eb31053eeecc990e9" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>pAttributeList</name></member>
      <member refid="class_n_d_plugin_file_1acafe0cd0f20aae4084f85283211e9021" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>pCapture</name></member>
      <member refid="classasyn_n_d_array_driver_1ad3969854a37329ef4061cc560e9022dc" prot="public" virt="non-virtual"><scope>NDPluginFile</scope><name>pNDArrayPool</name></member>
      <member refid="class_n_d_plugin_driver_1ae671b38856ba882ce3aa534b127020e9" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>pPrevInputArray_</name></member>
      <member refid="class_n_d_plugin_file_1a49e1a69095365b5f2643695c8ca5f5ce" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>processCallbacks</name></member>
      <member refid="class_n_d_plugin_file_1a810cbc3916e9e1aae2ec1d9c589320f2" prot="public" virt="pure-virtual"><scope>NDPluginFile</scope><name>readFile</name></member>
      <member refid="class_n_d_plugin_file_1a624736b3a452ac10808086f8379716a4" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>readFileBase</name></member>
      <member refid="classasyn_n_d_array_driver_1a5aeb82d51c34b79b77433e121722a141" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>readFloat64</name></member>
      <member refid="classasyn_n_d_array_driver_1acac9d5044d62734723404ef7e53ee4e8" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>readGenericPointer</name></member>
      <member refid="classasyn_n_d_array_driver_1a4c0e7e85f9f4a988614a273c035be813" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>readInt32</name></member>
      <member refid="class_n_d_plugin_driver_1ae9f9e40e62e01e41af145586f53feafc" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>readInt32Array</name></member>
      <member refid="classasyn_n_d_array_driver_1a1da351ae597074c829204945f700098b" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>readNDAttributesFile</name></member>
      <member refid="class_n_d_plugin_file_1a514cc9b7bca4716d69c8bc24bfb87797" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>registerInitFrameInfo</name></member>
      <member refid="classasyn_n_d_array_driver_1ac3f2d73a05eb54357ec3f052e1b000f2" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>report</name></member>
      <member refid="class_n_d_plugin_driver_1a8aa70bf3081b461f617a8b9c7c9ddfb2" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>run</name></member>
      <member refid="class_n_d_plugin_driver_1a2cd081ea1db6d65e02c3c9b951201cdc" prot="protected" virt="virtual"><scope>NDPluginFile</scope><name>setArrayInterrupt</name></member>
      <member refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>setIntegerParam</name></member>
      <member refid="classasyn_n_d_array_driver_1a3732469004adb2cd7eb5d5f047385915" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>setIntegerParam</name></member>
      <member refid="class_n_d_plugin_driver_1ac7e03567ead074f29a3eab5c7d193801" prot="public" virt="non-virtual"><scope>NDPluginFile</scope><name>sortingTask</name></member>
      <member refid="class_n_d_plugin_driver_1a085bcf8d331f7dedac92af07c94b2d15" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>start</name></member>
      <member refid="class_n_d_plugin_file_1a6255a7fdddc16d94aab10c7a828cc0eb" prot="public" virt="non-virtual"><scope>NDPluginFile</scope><name>supportsMultipleArrays</name></member>
      <member refid="classasyn_n_d_array_driver_1aa52489ae8673348bf596faf63b94e85e" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>threadPriority_</name></member>
      <member refid="classasyn_n_d_array_driver_1a467b05b088bb8cf97e2fcad07a4a432f" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>threadStackSize_</name></member>
      <member refid="class_n_d_plugin_driver_1ae6b1a0c91170c2ef73546fcc4a78ac27" prot="protected" virt="non-virtual"><scope>NDPluginFile</scope><name>throttled</name></member>
      <member refid="classasyn_n_d_array_driver_1a688578d794900c0671da8dfaf771912b" prot="public" virt="non-virtual"><scope>NDPluginFile</scope><name>updateQueuedArrayCount</name></member>
      <member refid="class_n_d_plugin_file_1a9d2383f296314898008b9678c706d1e5" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>useAttrFilePrefix</name></member>
      <member refid="class_n_d_plugin_file_1aa4492e7f3b478ba3d9cd5f7a179c469b" prot="public" virt="pure-virtual"><scope>NDPluginFile</scope><name>writeFile</name></member>
      <member refid="class_n_d_plugin_file_1a493583a960959a17f4d421e4923c52d7" prot="private" virt="non-virtual"><scope>NDPluginFile</scope><name>writeFileBase</name></member>
      <member refid="class_n_d_plugin_driver_1a0d9d826a638226234e48f4d4f41fc4c0" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>writeFloat64</name></member>
      <member refid="classasyn_n_d_array_driver_1ad95feb77baff701f85641ef5fc3d5c65" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>writeGenericPointer</name></member>
      <member refid="class_n_d_plugin_file_1ab94ee0e792cf736d95885c61f89dbeac" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>writeInt32</name></member>
      <member refid="class_n_d_plugin_file_1ab3cde6fd6af5ec69e60c63614b7ecd6e" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>writeNDArray</name></member>
      <member refid="class_n_d_plugin_driver_1ae485392fd0a4db1f4fdee533582bae44" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>writeOctet</name></member>
      <member refid="classasyn_n_d_array_driver_1ab392c48715c896b8f58c0456b7889723" prot="public" virt="virtual"><scope>NDPluginFile</scope><name>~asynNDArrayDriver</name></member>
      <member refid="class_n_d_plugin_driver_1a10f6dca6408ac46f59758df67b0513da" prot="public" virt="non-virtual"><scope>NDPluginFile</scope><name>~NDPluginDriver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
