<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="rest_api_8cpp" kind="file" language="C++">
    <compoundname>restApi.cpp</compoundname>
    <includes refid="rest_api_8h" local="yes">restApi.h</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">frozen.h</includes>
    <includes local="no">epicsStdio.h</includes>
    <includes local="no">epicsThread.h</includes>
    <includes local="no">epicsTime.h</includes>
    <includes local="no">fcntl.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp</label>
        <link refid="rest_api_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>restApi.h</label>
        <link refid="rest_api_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>epicsMutex.h</label>
      </node>
      <node id="11">
        <label>epicsStdio.h</label>
      </node>
      <node id="12">
        <label>epicsThread.h</label>
      </node>
      <node id="13">
        <label>epicsTime.h</label>
      </node>
      <node id="14">
        <label>fcntl.h</label>
      </node>
      <node id="10">
        <label>frozen.h</label>
      </node>
      <node id="5">
        <label>osiSock.h</label>
      </node>
      <node id="6">
        <label>stdexcept</label>
      </node>
      <node id="8">
        <label>stdio.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="9">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structsocket" prot="public">socket</innerclass>
    <innerclass refid="structrequest" prot="public">request</innerclass>
    <innerclass refid="structresponse" prot="public">response</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="rest_api_8cpp_1a4e67e9429d48a2ba8f833ee3b1dceb5d" prot="public" static="no">
        <name>EOL</name>
        <initializer>&quot;\r\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="16" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a546ba4d9fbd8e32aae1f09dd5bc5d4d7" prot="public" static="no">
        <name>EOL_LEN</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="17" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a4fff801e2524b9df0b97b92544cfe3bb" prot="public" static="no">
        <name>EOH</name>
        <initializer><ref refid="rest_api_8cpp_1a4e67e9429d48a2ba8f833ee3b1dceb5d" kindref="member">EOL</ref> <ref refid="rest_api_8cpp_1a4e67e9429d48a2ba8f833ee3b1dceb5d" kindref="member">EOL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="18" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a86fcf94887e3f5b3591d081066464411" prot="public" static="no">
        <name>EOH_LEN</name>
        <initializer>(<ref refid="rest_api_8cpp_1a546ba4d9fbd8e32aae1f09dd5bc5d4d7" kindref="member">EOL_LEN</ref>*2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="19" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1ad6f0c8006339ecc2e3fa17a877a32db8" prot="public" static="no">
        <name>ID_STR</name>
        <initializer>&quot;$id&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="21" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1ad67b99fde0615f584720d61f0fcf0937" prot="public" static="no">
        <name>ID_LEN</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="22" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a61aa1fbf493cc7a59f907a7e7e23ac84" prot="public" static="no">
        <name>DATA_NATIVE</name>
        <initializer>&quot;application/<ref refid="_a_d_time_pix_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref>; charset=utf-8&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="24" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a908f8d1bb18160a1243edee75aa2c151" prot="public" static="no">
        <name>DATA_TIFF</name>
        <initializer>&quot;application/tiff&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="25" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1af26ac4e9ffdbb498f81eba4b80fd8ba4" prot="public" static="no">
        <name>DATA_HDF5</name>
        <initializer>&quot;application/hdf5&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="26" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1ad6589acb8296f3c88d58ed45082f8391" prot="public" static="no">
        <name>DATA_HTML</name>
        <initializer>&quot;text/html&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="27" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1abc578c63b8061edc333983260802dced" prot="public" static="no">
        <name>MAX_HTTP_RETRIES</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="29" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1acb84a306ee37479f97cf0b476560f027" prot="public" static="no">
        <name>MAX_MESSAGE_SIZE</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="30" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a7244ab798f58214294b580ca0bb48552" prot="public" static="no">
        <name>MAX_BUF_SIZE</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="31" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1aca4700927c96ce973bf96ecb802910ba" prot="public" static="no">
        <name>MAX_JSON_TOKENS</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="32" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a182f71a3baebbcc4c9fe246b42bf1cf2" prot="public" static="no">
        <name>DEFAULT_TIMEOUT_INIT</name>
        <initializer>240</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="34" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a3f997bdb7c364631cdd277d71fa75f2f" prot="public" static="no">
        <name>DEFAULT_TIMEOUT_ARM</name>
        <initializer>120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="35" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a61fb7d532e3914724782e64c2af9843a" prot="public" static="no">
        <name>DEFAULT_TIMEOUT_CONNECT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="36" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1ad8de19b57a26747fb7ef015e2a678b45" prot="public" static="no">
        <name>ERR_PREFIX</name>
        <initializer>&quot;RestApi&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="38" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a351b8552521f29df22aa336bb28e2180" prot="public" static="no">
        <name>ERR</name>
        <param><defname>msg</defname></param>
        <initializer>fprintf(stderr, <ref refid="rest_api_8cpp_1ad8de19b57a26747fb7ef015e2a678b45" kindref="member">ERR_PREFIX</ref> &quot;::%s: %s\n&quot;, functionName, msg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="39" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a02586085698a967f28309aa3d54b43a3" prot="public" static="no">
        <name>ERR_ARGS</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>    fprintf(stderr, <ref refid="rest_api_8cpp_1ad8de19b57a26747fb7ef015e2a678b45" kindref="member">ERR_PREFIX</ref> &quot;::%s: &quot; fmt &quot;\n&quot;, \
    functionName, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="41" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="41" bodyend="42"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1adec0375050ef1be9673c119a6f83d1be" prot="public" static="no">
        <name>REQUEST_GET</name>
        <initializer>    &quot;GET %s%s HTTP/1.1&quot; EOL \
    &quot;Host: %s&quot; EOL\
    &quot;Content-Length: 0&quot; EOL \
    &quot;Accept: &quot; DATA_NATIVE <ref refid="rest_api_8cpp_1a4fff801e2524b9df0b97b92544cfe3bb" kindref="member">EOH</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="46" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a2b98bddd7898ae3d28b040713bc78aec" prot="public" static="no">
        <name>REQUEST_GET_FILE</name>
        <initializer>    &quot;GET %s%s HTTP/1.1&quot; EOL \
    &quot;Host: %s&quot; EOL\
    &quot;Content-Length: 0&quot; EOL \
    &quot;Accept: %s&quot; <ref refid="rest_api_8cpp_1a4fff801e2524b9df0b97b92544cfe3bb" kindref="member">EOH</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="52" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1aea20f935127ae58ea0d0ae85d2c14c46" prot="public" static="no">
        <name>REQUEST_PUT</name>
        <initializer>    &quot;PUT %s%s HTTP/1.1&quot; EOL \
    &quot;Host: %s&quot; EOL\
    &quot;Accept-Encoding: identity&quot; EOL\
    &quot;Content-Type: &quot; DATA_NATIVE <ref refid="rest_api_8cpp_1a4e67e9429d48a2ba8f833ee3b1dceb5d" kindref="member">EOL</ref> \
    &quot;Content-Length: %lu&quot; <ref refid="rest_api_8cpp_1a4fff801e2524b9df0b97b92544cfe3bb" kindref="member">EOH</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="58" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a1a649288315320a375ae2c7a5ec93bce" prot="public" static="no">
        <name>REQUEST_HEAD</name>
        <initializer>    &quot;HEAD %s%s HTTP/1.1&quot; EOL\
    &quot;Host: %s&quot; <ref refid="rest_api_8cpp_1a4fff801e2524b9df0b97b92544cfe3bb" kindref="member">EOH</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="65" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="define" id="rest_api_8cpp_1a5514ba5f2e2da0ac62ea16ab1711bd4e" prot="public" static="no">
        <name>REQUEST_DELETE</name>
        <initializer>    &quot;DELETE %s%s HTTP/1.1&quot; EOL\
    &quot;Host: %s&quot; <ref refid="rest_api_8cpp_1a4fff801e2524b9df0b97b92544cfe3bb" kindref="member">EOH</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="69" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="69" bodyend="71"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="rest_api_8cpp_1a6a9dbb91c569af562f6119bb7b960cbb" prot="public" static="no">
        <type>struct <ref refid="structsocket" kindref="compound">socket</ref></type>
        <definition>typedef struct socket socket_t</definition>
        <argsstring></argsstring>
        <name>socket_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="83" column="10"/>
      </memberdef>
      <memberdef kind="typedef" id="rest_api_8cpp_1a367edad9ab2aa35c679c908173b6ebc2" prot="public" static="no">
        <type>struct <ref refid="structrequest" kindref="compound">request</ref></type>
        <definition>typedef struct request request_t</definition>
        <argsstring></argsstring>
        <name>request_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="89" column="11"/>
      </memberdef>
      <memberdef kind="typedef" id="rest_api_8cpp_1ae28817caa5cb8b1eef6c0d3e00529692" prot="public" static="no">
        <type>struct <ref refid="structresponse" kindref="compound">response</ref></type>
        <definition>typedef struct response response_t</definition>
        <argsstring></argsstring>
        <name>response_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="99" column="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="rest_api_8cpp_1a741b15220b0f8d6c7b35f430b9868731" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int parseHeader</definition>
        <argsstring>(response_t *response)</argsstring>
        <name>parseHeader</name>
        <param>
          <type><ref refid="rest_api_8cpp_1ae28817caa5cb8b1eef6c0d3e00529692" kindref="member">response_t</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="103" column="12" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="103" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="rest_api_8cpp_1a36b0be654ced51f1d7d397874bc8ad06" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int parseSequenceId</definition>
        <argsstring>(const response_t *response, int *sequenceId)</argsstring>
        <name>parseSequenceId</name>
        <param>
          <type>const <ref refid="rest_api_8cpp_1ae28817caa5cb8b1eef6c0d3e00529692" kindref="member">response_t</ref> *</type>
          <declname>response</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sequenceId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" line="157" column="12" bodyfile="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp" bodystart="157" bodyend="201"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rest_api_8h" kindref="compound">restApi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;frozen.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JSON<sp/>parser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsStdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsThread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsTime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\r\n&quot;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>Line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EOL_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>Line<sp/>Length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EOH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EOL<sp/>EOL<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>Header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EOH_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(EOL_LEN*2)<sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>Header<sp/>Length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ID_STR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;$id&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ID_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DATA_NATIVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;application/json;<sp/>charset=utf-8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DATA_TIFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;application/tiff&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DATA_HDF5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;application/hdf5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DATA_HTML<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;text/html&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_HTTP_RETRIES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_MESSAGE_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_BUF_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_JSON_TOKENS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_TIMEOUT_INIT<sp/><sp/><sp/><sp/>240</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_TIMEOUT_ARM<sp/><sp/><sp/><sp/><sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_TIMEOUT_CONNECT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERR_PREFIX<sp/><sp/>&quot;RestApi&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERR(msg)<sp/>fprintf(stderr,<sp/>ERR_PREFIX<sp/>&quot;::%s:<sp/>%s\n&quot;,<sp/>functionName,<sp/>msg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERR_ARGS(fmt,...)<sp/>fprintf(stderr,<sp/>ERR_PREFIX<sp/>&quot;::%s:<sp/>&quot;<sp/>fmt<sp/>&quot;\n&quot;,<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>functionName,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Requests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REQUEST_GET\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;GET<sp/>%s%s<sp/>HTTP/1.1&quot;<sp/>EOL<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Host:<sp/>%s&quot;<sp/>EOL\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Content-Length:<sp/>0&quot;<sp/>EOL<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Accept:<sp/>&quot;<sp/>DATA_NATIVE<sp/>EOH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REQUEST_GET_FILE\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;GET<sp/>%s%s<sp/>HTTP/1.1&quot;<sp/>EOL<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Host:<sp/>%s&quot;<sp/>EOL\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Content-Length:<sp/>0&quot;<sp/>EOL<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Accept:<sp/>%s&quot;<sp/>EOH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REQUEST_PUT\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;PUT<sp/>%s%s<sp/>HTTP/1.1&quot;<sp/>EOL<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Host:<sp/>%s&quot;<sp/>EOL\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Accept-Encoding:<sp/>identity&quot;<sp/>EOL\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Content-Type:<sp/>&quot;<sp/>DATA_NATIVE<sp/>EOL<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Content-Length:<sp/>%lu&quot;<sp/>EOH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REQUEST_HEAD\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;HEAD<sp/>%s%s<sp/>HTTP/1.1&quot;<sp/>EOL\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Host:<sp/>%s&quot;<sp/>EOH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REQUEST_DELETE\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;DELETE<sp/>%s%s<sp/>HTTP/1.1&quot;<sp/>EOL\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Host:<sp/>%s&quot;<sp/>EOH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::string;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Structure<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structsocket" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsocket" kindref="compound">socket</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>SOCKET<sp/><ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsMutex<sp/><ref refid="structsocket_1a18c5465a8c6856c15b45d8e8e0d7e147" kindref="member">mutex</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structsocket_1a48a0bdcea38bea40f5a2d9e3b113b139" kindref="member">closed</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structsocket_1af4c5c09231ee14e47c75844f377a0be9" kindref="member">retries</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}<sp/><ref refid="rest_api_8cpp_1a6a9dbb91c569af562f6119bb7b960cbb" kindref="member">socket_t</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structrequest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrequest" kindref="compound">request</ref></highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref>,<sp/><ref refid="structrequest_1a9095aa378d8153895243ac8ffd46baf9" kindref="member">actualLen</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/><ref refid="rest_api_8cpp_1a367edad9ab2aa35c679c908173b6ebc2" kindref="member">request_t</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structresponse" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresponse" kindref="compound">response</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structresponse_1aa8d4c62e04a1ce7fab912b496ad6cf43" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structresponse_1a1a34157603e204ad13c9c10b9970b0c7" kindref="member">dataLen</ref>,<sp/><ref refid="structresponse_1ac6818bf58025baff5405239ddc7a4936" kindref="member">actualLen</ref>,<sp/><ref refid="structresponse_1afa0cb387effbdd7fe801205cd2c051c1" kindref="member">headerLen</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structresponse_1a0977d175ed8d57639bc827204d3ab4f3" kindref="member">reconnect</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structresponse_1a5d65e751a2a5220864bd20d8940dd18e" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structresponse_1a844a1f991527aa9fa80ce6ad414a911f" kindref="member">contentLength</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/><ref refid="rest_api_8cpp_1ae28817caa5cb8b1eef6c0d3e00529692" kindref="member">response_t</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Static<sp/>public<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parseHeader<sp/>(<ref refid="structresponse" kindref="compound">response_t</ref><sp/>*<ref refid="structresponse" kindref="compound">response</ref>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scanned;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/><ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1aa8d4c62e04a1ce7fab912b496ad6cf43" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*eol;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1a844a1f991527aa9fa80ce6ad414a911f" kindref="member">contentLength</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1a0977d175ed8d57639bc827204d3ab4f3" kindref="member">reconnect</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>scanned<sp/>=<sp/>sscanf(data,<sp/></highlight><highlight class="stringliteral">&quot;%*s<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scanned<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>strstr(data,<sp/><ref refid="rest_api_8cpp_1a4e67e9429d48a2ba8f833ee3b1dceb5d" kindref="member">EOL</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>+=<sp/><ref refid="rest_api_8cpp_1a546ba4d9fbd8e32aae1f09dd5bc5d4d7" kindref="member">EOL_LEN</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>eol<sp/>=<sp/>strstr(data,<sp/><ref refid="rest_api_8cpp_1a4e67e9429d48a2ba8f833ee3b1dceb5d" kindref="member">EOL</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(eol<sp/>&amp;&amp;<sp/>data<sp/>!=<sp/>eol)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/>*colon;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/><sp/><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colon<sp/>=<sp/>strchr(data,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!colon)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*colon<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key,<sp/></highlight><highlight class="stringliteral">&quot;content-length&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(colon<sp/>+<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;%lu&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1a844a1f991527aa9fa80ce6ad414a911f" kindref="member">contentLength</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key,<sp/></highlight><highlight class="stringliteral">&quot;connection&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value[<ref refid="rest_api_8cpp_1a7244ab798f58214294b580ca0bb48552" kindref="member">MAX_BUF_SIZE</ref>];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(colon<sp/>+<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1a0977d175ed8d57639bc827204d3ab4f3" kindref="member">reconnect</ref><sp/>=<sp/>!strcasecmp(value,<sp/></highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>eol<sp/>+<sp/><ref refid="rest_api_8cpp_1a546ba4d9fbd8e32aae1f09dd5bc5d4d7" kindref="member">EOL_LEN</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eol<sp/>=<sp/>strstr(data,<sp/><ref refid="rest_api_8cpp_1a4e67e9429d48a2ba8f833ee3b1dceb5d" kindref="member">EOL</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!eol)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1a5d65e751a2a5220864bd20d8940dd18e" kindref="member">content</ref><sp/>=<sp/>data<sp/>+<sp/><ref refid="rest_api_8cpp_1a546ba4d9fbd8e32aae1f09dd5bc5d4d7" kindref="member">EOL_LEN</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1afa0cb387effbdd7fe801205cd2c051c1" kindref="member">headerLen</ref><sp/>=<sp/><ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1a5d65e751a2a5220864bd20d8940dd18e" kindref="member">content</ref><sp/>-<sp/><ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1aa8d4c62e04a1ce7fab912b496ad6cf43" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parseSequenceId<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structresponse" kindref="compound">response_t</ref><sp/>*<ref refid="structresponse" kindref="compound">response</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sequenceId)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;parseParamList&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1a844a1f991527aa9fa80ce6ad414a911f" kindref="member">contentLength</ref>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rest_api_8cpp_1a351b8552521f29df22aa336bb28e2180" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;no<sp/>content<sp/>to<sp/>parse&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">json_token<sp/>tokens[<ref refid="rest_api_8cpp_1aca4700927c96ce973bf96ecb802910ba" kindref="member">MAX_JSON_TOKENS</ref>];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>parse_json(<ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1a5d65e751a2a5220864bd20d8940dd18e" kindref="member">content</ref>,<sp/><ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1a844a1f991527aa9fa80ce6ad414a911f" kindref="member">contentLength</ref>,<sp/>tokens,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rest_api_8cpp_1aca4700927c96ce973bf96ecb802910ba" kindref="member">MAX_JSON_TOKENS</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rest_api_8cpp_1a351b8552521f29df22aa336bb28e2180" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>parse<sp/>response<sp/>json&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tokens[0].type<sp/>!=<sp/>JSON_TYPE_OBJECT)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rest_api_8cpp_1a351b8552521f29df22aa336bb28e2180" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;unexpected<sp/>token<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">json_token<sp/>*seqIdToken<sp/>=<sp/>find_json_token(tokens,<sp/></highlight><highlight class="stringliteral">&quot;sequence<sp/>id&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!seqIdToken)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seqIdToken<sp/>=<sp/>find_json_token(tokens,<sp/></highlight><highlight class="stringliteral">&quot;series<sp/>id&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!seqIdToken)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rest_api_8cpp_1a351b8552521f29df22aa336bb28e2180" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>find<sp/>&apos;series<sp/>id&apos;<sp/>or<sp/>&apos;sequence<sp/>id&apos;<sp/>token&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sscanf(seqIdToken-&gt;ptr,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>sequenceId)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rest_api_8cpp_1a351b8552521f29df22aa336bb28e2180" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>parse<sp/>&apos;sequence_id&apos;<sp/>token&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a8273915057ec140617e5280369429390" kindref="member">RestAPI::buildMasterName</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pattern,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seqId,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufSize)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*idStr<sp/>=<sp/>strstr(pattern,<sp/><ref refid="rest_api_8cpp_1ad6f0c8006339ecc2e3fa17a877a32db8" kindref="member">ID_STR</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idStr)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prefixLen<sp/>=<sp/>idStr<sp/>-<sp/>pattern;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/>bufSize,<sp/></highlight><highlight class="stringliteral">&quot;%.*s%d%s_master.h5&quot;</highlight><highlight class="normal">,<sp/>prefixLen,<sp/>pattern,<sp/>seqId,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern+prefixLen+<ref refid="rest_api_8cpp_1ad67b99fde0615f584720d61f0fcf0937" kindref="member">ID_LEN</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/>bufSize,<sp/></highlight><highlight class="stringliteral">&quot;%s_master.h5&quot;</highlight><highlight class="normal">,<sp/>pattern);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1ac143d147cbc5e05934cdccdf8fe3b31f" kindref="member">RestAPI::buildDataName</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pattern,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seqId,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufSize)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*idStr<sp/>=<sp/>strstr(pattern,<sp/><ref refid="rest_api_8cpp_1ad6f0c8006339ecc2e3fa17a877a32db8" kindref="member">ID_STR</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idStr)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prefixLen<sp/>=<sp/>idStr<sp/>-<sp/>pattern;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/>bufSize,<sp/></highlight><highlight class="stringliteral">&quot;%.*s%d%s_data_%06d.h5&quot;</highlight><highlight class="normal">,<sp/>prefixLen,<sp/>pattern,<sp/>seqId,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern+prefixLen+<ref refid="rest_api_8cpp_1ad67b99fde0615f584720d61f0fcf0937" kindref="member">ID_LEN</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/>bufSize,<sp/></highlight><highlight class="stringliteral">&quot;%s_data_%06d.h5&quot;</highlight><highlight class="normal">,<sp/>pattern,<sp/>n);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Public<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><ref refid="class_rest_a_p_i_1a6e5355fe38f7a44019d965b3298af46d" kindref="member">RestAPI::RestAPI</ref><sp/>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>hostname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numSockets)<sp/>:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>mHostname(hostname),<sp/>mPort(port),<sp/>mNumSockets(numSockets),</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>mSockets(new<sp/><ref refid="structsocket" kindref="compound">socket_t</ref>[numSockets])</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;mAddress,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mAddress));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hostToIPAddr(mHostname.c_str(),<sp/>&amp;mAddress.sin_addr))</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;invalid<sp/>hostname&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>mAddress.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>mAddress.sin_port<sp/>=<sp/>htons(port);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>&lt;<sp/>mNumSockets;<sp/>++<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSockets[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].closed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSockets[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSockets[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].retries<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>REST<sp/>URIs<sp/>based<sp/>on<sp/>API<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>api;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13cabfae33a050b17dde57291c75361b1c84" kindref="member">SSAPIVersion</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/detector/api/version&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="structresponse" kindref="compound">response</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;get(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13cabfae33a050b17dde57291c75361b1c84" kindref="member">SSAPIVersion</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="structresponse" kindref="compound">response</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">json_token<sp/>tokens[<ref refid="rest_api_8cpp_1aca4700927c96ce973bf96ecb802910ba" kindref="member">MAX_JSON_TOKENS</ref>];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>parse_json(<ref refid="structresponse" kindref="compound">response</ref>.c_str(),<sp/><ref refid="structresponse" kindref="compound">response</ref>.length(),<sp/>tokens,<sp/><ref refid="rest_api_8cpp_1aca4700927c96ce973bf96ecb802910ba" kindref="member">MAX_JSON_TOKENS</ref>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>parse<sp/>response<sp/>json&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">json_token<sp/>*token<sp/>=<sp/>find_json_token(tokens,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(token<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>find<sp/>value<sp/>token&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>api<sp/>=<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">string</ref>(token-&gt;ptr,<sp/>token-&gt;len);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(api<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1.6.0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAPIVersion<sp/>=<sp/><ref refid="rest_api_8h_1afd90a56eecf857322c679f314656bb22a261dc1cca84cb181448de4b554ef4881" kindref="member">API_1_6_0</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(api<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1.8.0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAPIVersion<sp/>=<sp/><ref refid="rest_api_8h_1afd90a56eecf857322c679f314656bb22a8be7f20681f690e2b886666315930a6b" kindref="member">API_1_8_0</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>API,<sp/>must<sp/>be<sp/>1.6.0<sp/>or<sp/>1.8.0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca054a1e387ec304b1aa613fa6ce5ef6fb" kindref="member">SSDetConfig</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/detector/api/&quot;</highlight><highlight class="normal"><sp/>+<sp/>api<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/config/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13cad9b774597809fbee1ee7dda48141f200" kindref="member">SSDetStatus</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/detector/api/&quot;</highlight><highlight class="normal"><sp/>+<sp/>api<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/status/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13cab317f5a1466f6edc280d0452c615f972" kindref="member">SSFWConfig</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/filewriter/api/&quot;</highlight><highlight class="normal"><sp/>+<sp/>api<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/config/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca328f5eb85f29c0bb7bbd688078b8f9a7" kindref="member">SSFWStatus</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/filewriter/api/&quot;</highlight><highlight class="normal"><sp/>+<sp/>api<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/status/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca20addaa3664638592d39ed6fe3bbf6be" kindref="member">SSFWCommand</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/filewriter/api/&quot;</highlight><highlight class="normal"><sp/>+<sp/>api<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/command/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca46baf3b9b51868c3ad3fa84646bd674d" kindref="member">SSCommand</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/detector/api/&quot;</highlight><highlight class="normal"><sp/>+<sp/>api<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/command/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca90c4192ef04861810b6545793bad5e1b" kindref="member">SSData</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/data/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca0751c2ab6629ed46ebbdd3f88321a441" kindref="member">SSMonConfig</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/monitor/api/&quot;</highlight><highlight class="normal"><sp/>+<sp/>api<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/config/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca14a394f23a6d7232b99f4f03f704a251" kindref="member">SSMonStatus</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/monitor/api/&quot;</highlight><highlight class="normal"><sp/>+<sp/>api<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/status/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13cae43f78a073c568086edf2880ca13fcd6" kindref="member">SSMonImages</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/monitor/api/&quot;</highlight><highlight class="normal"><sp/>+<sp/>api<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/images/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13cafac094e3f5e25c37dab0f458416890ee" kindref="member">SSStreamConfig</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/stream/api/&quot;</highlight><highlight class="normal"><sp/>+<sp/>api<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/config/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13caadd8602a6ab296f8692c5ce7224164cf" kindref="member">SSStreamStatus</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/stream/api/&quot;</highlight><highlight class="normal"><sp/>+<sp/>api<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/status/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca1a3e49e6ed8bbd7628d9987531e8f08c" kindref="member">SSSysCommand</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/system/api/&quot;</highlight><highlight class="normal"><sp/>+<sp/>api<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/command/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a91d3c97d44fdcf7990e2daefc663af62" kindref="member">RestAPI::initialize</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a7bc501cee9faad708dd1bd16c874bf81" kindref="member">put</ref>(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca46baf3b9b51868c3ad3fa84646bd674d" kindref="member">SSCommand</ref>,<sp/></highlight><highlight class="stringliteral">&quot;initialize&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/><ref refid="rest_api_8cpp_1a182f71a3baebbcc4c9fe246b42bf1cf2" kindref="member">DEFAULT_TIMEOUT_INIT</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1ae825bb94222ca1f0863359625d07af84" kindref="member">RestAPI::arm</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sequenceId)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;arm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request_t</ref><sp/><ref refid="structrequest" kindref="compound">request</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>requestBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>requestBuf;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(requestBuf);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a9095aa378d8153895243ac8ffd46baf9" kindref="member">actualLen</ref><sp/>=<sp/>epicsSnprintf(<ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref>,<sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref>,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rest_api_8cpp_1aea20f935127ae58ea0d0ae85d2c14c46" kindref="member">REQUEST_PUT</ref>,<sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca46baf3b9b51868c3ad3fa84646bd674d" kindref="member">SSCommand</ref>].c_str(),<sp/></highlight><highlight class="stringliteral">&quot;arm&quot;</highlight><highlight class="normal">,<sp/>mHostname.c_str(),<sp/>0lu);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response_t</ref><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>responseBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1aa8d4c62e04a1ce7fab912b496ad6cf43" kindref="member">data</ref><sp/><sp/><sp/><sp/>=<sp/>responseBuf;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a1a34157603e204ad13c9c10b9970b0c7" kindref="member">dataLen</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(responseBuf);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doRequest(&amp;<ref refid="structrequest" kindref="compound">request</ref>,<sp/>&amp;<ref refid="structresponse" kindref="compound">response</ref>,<sp/><ref refid="rest_api_8cpp_1a3f997bdb7c364631cdd277d71fa75f2f" kindref="member">DEFAULT_TIMEOUT_ARM</ref>))</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_file_net_c_d_f_8cpp_1a588357de2986fdf4c1380190f7ae9f37" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;[param=arm]<sp/>request<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref><sp/>!=<sp/>200)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[param=arm]<sp/>server<sp/>returned<sp/>error<sp/>code<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sequenceId<sp/>?<sp/>parseSequenceId(&amp;<ref refid="structresponse" kindref="compound">response</ref>,<sp/>sequenceId)<sp/>:<sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a40189dd9e9d11af33fa0aa1415170cbb" kindref="member">RestAPI::trigger</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exposure)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>for<sp/>INTS<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!exposure)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a7bc501cee9faad708dd1bd16c874bf81" kindref="member">put</ref>(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca46baf3b9b51868c3ad3fa84646bd674d" kindref="member">SSCommand</ref>,<sp/></highlight><highlight class="stringliteral">&quot;trigger&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>timeout);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>for<sp/>INTE<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>putDouble<sp/>should<sp/>block<sp/>for<sp/>the<sp/>whole<sp/>exposure<sp/>duration,<sp/>but<sp/>it<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Eiger&apos;s<sp/>fault)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>exposureStr[<ref refid="eiger_detector_8cpp_1a7244ab798f58214294b580ca0bb48552" kindref="member">MAX_BUF_SIZE</ref>];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(exposureStr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(exposureStr),<sp/></highlight><highlight class="stringliteral">&quot;%lf&quot;</highlight><highlight class="normal">,<sp/>exposure);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeStamp<sp/>start,<sp/>end;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;start);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_rest_a_p_i_1a7bc501cee9faad708dd1bd16c874bf81" kindref="member">put</ref>(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca46baf3b9b51868c3ad3fa84646bd674d" kindref="member">SSCommand</ref>,<sp/></highlight><highlight class="stringliteral">&quot;trigger&quot;</highlight><highlight class="normal">,<sp/>exposureStr,<sp/>NULL,<sp/>timeout))</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;end);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>epicsTimeDiffInSeconds(&amp;end,<sp/>&amp;start);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(diff<sp/>&lt;<sp/>exposure)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadSleep(exposure<sp/>-<sp/>diff);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a6d24a36342a1c9295ebff8bce6b3520c" kindref="member">RestAPI::disarm</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a7bc501cee9faad708dd1bd16c874bf81" kindref="member">put</ref>(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca46baf3b9b51868c3ad3fa84646bd674d" kindref="member">SSCommand</ref>,<sp/></highlight><highlight class="stringliteral">&quot;disarm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1aae730dc6d4847e8838c37c4c46ad0f45" kindref="member">RestAPI::cancel</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a7bc501cee9faad708dd1bd16c874bf81" kindref="member">put</ref>(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca46baf3b9b51868c3ad3fa84646bd674d" kindref="member">SSCommand</ref>,<sp/></highlight><highlight class="stringliteral">&quot;cancel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1ada70bbc81eaf00ddce547633ccd107e5" kindref="member">RestAPI::abort</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a7bc501cee9faad708dd1bd16c874bf81" kindref="member">put</ref>(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca46baf3b9b51868c3ad3fa84646bd674d" kindref="member">SSCommand</ref>,<sp/></highlight><highlight class="stringliteral">&quot;abort&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a106067bd36fe4c725c64c855da10d507" kindref="member">RestAPI::wait</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a7bc501cee9faad708dd1bd16c874bf81" kindref="member">put</ref>(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca46baf3b9b51868c3ad3fa84646bd674d" kindref="member">SSCommand</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wait&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>-1);</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a48937b64fd8afe334cf720cf89e6b9cd" kindref="member">RestAPI::hvReset</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resetTime)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>resetTimeStr[<ref refid="eiger_detector_8cpp_1a7244ab798f58214294b580ca0bb48552" kindref="member">MAX_BUF_SIZE</ref>];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(resetTimeStr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(resetTimeStr),<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>resetTime);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a7bc501cee9faad708dd1bd16c874bf81" kindref="member">put</ref>(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca46baf3b9b51868c3ad3fa84646bd674d" kindref="member">SSCommand</ref>,<sp/></highlight><highlight class="stringliteral">&quot;hv_reset&quot;</highlight><highlight class="normal">,<sp/>resetTimeStr,<sp/>NULL,<sp/>resetTime+1);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1afbb3ff038766f6b86f56c13d79bbd859" kindref="member">RestAPI::statusUpdate</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a7bc501cee9faad708dd1bd16c874bf81" kindref="member">put</ref>(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca46baf3b9b51868c3ad3fa84646bd674d" kindref="member">SSCommand</ref>,<sp/></highlight><highlight class="stringliteral">&quot;status_update&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><ref refid="rest_api_8h_1afd90a56eecf857322c679f314656bb22" kindref="member">eigerAPIVersion_t</ref><sp/><ref refid="class_rest_a_p_i_1a41df19ad9346a73690e8b672e0419e64" kindref="member">RestAPI::getAPIVersion</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAPIVersion;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a3d156f1c0dfdf3a65196c6d53e8f5a7f" kindref="member">RestAPI::getFileSize</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*size)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;getFileSize&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request_t</ref><sp/><ref refid="structrequest" kindref="compound">request</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>requestBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>requestBuf;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(requestBuf);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a9095aa378d8153895243ac8ffd46baf9" kindref="member">actualLen</ref><sp/>=<sp/>epicsSnprintf(<ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref>,<sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref>,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rest_api_8cpp_1a1a649288315320a375ae2c7a5ec93bce" kindref="member">REQUEST_HEAD</ref>,<sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca90c4192ef04861810b6545793bad5e1b" kindref="member">SSData</ref>].c_str(),<sp/>filename,<sp/>mHostname.c_str());</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response_t</ref><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>responseBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1aa8d4c62e04a1ce7fab912b496ad6cf43" kindref="member">data</ref><sp/><sp/><sp/><sp/>=<sp/>responseBuf;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a1a34157603e204ad13c9c10b9970b0c7" kindref="member">dataLen</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(responseBuf);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doRequest(&amp;<ref refid="structrequest" kindref="compound">request</ref>,<sp/>&amp;<ref refid="structresponse" kindref="compound">response</ref>))</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[file=%s]<sp/>HEAD<sp/>request<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref><sp/>!=<sp/>200)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[file=%s]<sp/>server<sp/>returned<sp/>error<sp/>code<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>filename,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>*size<sp/>=<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a844a1f991527aa9fa80ce6ad414a911f" kindref="member">contentLength</ref>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a9adf011b39075e6078985105a5c67405" kindref="member">RestAPI::waitFile</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;waitFile&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeStamp<sp/>start,<sp/>now;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request_t</ref><sp/><ref refid="structrequest" kindref="compound">request</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>requestBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>requestBuf;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(requestBuf);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a9095aa378d8153895243ac8ffd46baf9" kindref="member">actualLen</ref><sp/>=<sp/>epicsSnprintf(<ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref>,<sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref>,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rest_api_8cpp_1a1a649288315320a375ae2c7a5ec93bce" kindref="member">REQUEST_HEAD</ref>,<sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca90c4192ef04861810b6545793bad5e1b" kindref="member">SSData</ref>].c_str(),<sp/>filename,<sp/>mHostname.c_str());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response_t</ref><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>responseBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1aa8d4c62e04a1ce7fab912b496ad6cf43" kindref="member">data</ref><sp/><sp/><sp/><sp/>=<sp/>responseBuf;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a1a34157603e204ad13c9c10b9970b0c7" kindref="member">dataLen</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(responseBuf);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;start);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doRequest(&amp;<ref refid="structrequest" kindref="compound">request</ref>,<sp/>&amp;<ref refid="structresponse" kindref="compound">response</ref>))</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[file=%s]<sp/>HEAD<sp/>request<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref><sp/>==<sp/>200)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref><sp/>!=<sp/>404)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[file=%s]<sp/>server<sp/>returned<sp/>error<sp/>code<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>filename,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;now);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(epicsTimeDiffInSeconds(&amp;now,<sp/>&amp;start)<sp/>&lt;<sp/>timeout);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ERR_ARGS(&quot;timeout<sp/>waiting<sp/>for<sp/>file<sp/>%s&quot;,<sp/>filename);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1acf2eeb00b8a0887e2f97ab9722f1e9e4" kindref="member">RestAPI::getFile</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*bufSize)</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getBlob(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca90c4192ef04861810b6545793bad5e1b" kindref="member">SSData</ref>,<sp/>filename,<sp/><ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/>bufSize,<sp/><ref refid="rest_api_8cpp_1af26ac4e9ffdbb498f81eba4b80fd8ba4" kindref="member">DATA_HDF5</ref>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a0ad3d75ba3f191e36882c90f26d1e587" kindref="member">RestAPI::deleteFile</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;deleteFile&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request_t</ref><sp/><ref refid="structrequest" kindref="compound">request</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>requestBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>requestBuf;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(requestBuf);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a9095aa378d8153895243ac8ffd46baf9" kindref="member">actualLen</ref><sp/>=<sp/>epicsSnprintf(<ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref>,<sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref>,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rest_api_8cpp_1a5514ba5f2e2da0ac62ea16ab1711bd4e" kindref="member">REQUEST_DELETE</ref>,<sp/>mSysStr[<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13ca90c4192ef04861810b6545793bad5e1b" kindref="member">SSData</ref>].c_str(),<sp/>filename,<sp/>mHostname.c_str());</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response_t</ref><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>responseBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1aa8d4c62e04a1ce7fab912b496ad6cf43" kindref="member">data</ref><sp/><sp/><sp/><sp/>=<sp/>responseBuf;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a1a34157603e204ad13c9c10b9970b0c7" kindref="member">dataLen</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(responseBuf);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doRequest(&amp;<ref refid="structrequest" kindref="compound">request</ref>,<sp/>&amp;<ref refid="structresponse" kindref="compound">response</ref>))</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[file=%s]<sp/>DELETE<sp/>request<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref><sp/>!=<sp/>204)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[file=%s]<sp/>DELETE<sp/>returned<sp/>code<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>filename,<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a9f68721bdcd7cd6c5819fef28bad60aa" kindref="member">RestAPI::getMonitorImage</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*bufSize,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>param[<ref refid="eiger_detector_8cpp_1a7244ab798f58214294b580ca0bb48552" kindref="member">MAX_BUF_SIZE</ref>];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(param,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(param),<sp/></highlight><highlight class="stringliteral">&quot;monitor?timeout=%lu&quot;</highlight><highlight class="normal">,<sp/>timeout);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getBlob(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13cae43f78a073c568086edf2880ca13fcd6" kindref="member">SSMonImages</ref>,<sp/>param,<sp/><ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/>bufSize,<sp/><ref refid="rest_api_8cpp_1a908f8d1bb18160a1243edee75aa2c151" kindref="member">DATA_TIFF</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RestAPI::connect<sp/>(<ref refid="structsocket" kindref="compound">socket_t</ref><sp/>*s)</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;connect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!s-&gt;<ref refid="structsocket_1a48a0bdcea38bea40f5a2d9e3b113b139" kindref="member">closed</ref>)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref><sp/>=<sp/>epicsSocketCreate(AF_INET,<sp/>SOCK_STREAM,<sp/>IPPROTO_TCP);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref><sp/>==<sp/>INVALID_SOCKET)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_file_net_c_d_f_8cpp_1a588357de2986fdf4c1380190f7ae9f37" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;couldn&apos;t<sp/>create<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>setNonBlock(s,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(::connect(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)&amp;mAddress,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mAddress))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connection<sp/>actually<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errno<sp/>!=<sp/>EINPROGRESS)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>error[<ref refid="eiger_detector_8cpp_1a7244ab798f58214294b580ca0bb48552" kindref="member">MAX_BUF_SIZE</ref>];</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSocketConvertErrnoToString(error,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(error));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>connect<sp/>to<sp/>%s:%d<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>mHostname.c_str(),</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPort,<sp/>error);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSocketDestroy(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Server<sp/>didn&apos;t<sp/>respond<sp/>immediately,<sp/>wait<sp/>a<sp/>little</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd_set<sp/>set;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_ZERO(&amp;set);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>,<sp/>&amp;set);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv.tv_sec<sp/><sp/>=<sp/><ref refid="rest_api_8cpp_1a61fb7d532e3914724782e64c2af9843a" kindref="member">DEFAULT_TIMEOUT_CONNECT</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv.tv_usec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>select(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref><sp/>+<sp/>1,<sp/>NULL,<sp/>&amp;set,<sp/>NULL,<sp/>&amp;tv);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error<sp/>=<sp/>ret<sp/>==<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TIMEOUT&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;select<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>connect<sp/>to<sp/>%s:%d<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>mHostname.c_str(),</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPort,<sp/>error);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSocketDestroy(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>setNonBlock(s,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1a48a0bdcea38bea40f5a2d9e3b113b139" kindref="member">closed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RestAPI::setNonBlock<sp/>(<ref refid="structsocket" kindref="compound">socket_t</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nonBlock)</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags<sp/>=<sp/>fcntl(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>,<sp/>F_GETFL,<sp/>0);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flags<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>nonBlock<sp/>?<sp/>flags<sp/>|<sp/>O_NONBLOCK<sp/>:<sp/>flags<sp/>&amp;<sp/>~O_NONBLOCK;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fcntl(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>,<sp/>F_SETFL,<sp/>flags)<sp/>==<sp/>0<sp/>?<sp/>EXIT_SUCCESS<sp/>:<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RestAPI::doRequest<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrequest" kindref="compound">request_t</ref><sp/>*<ref refid="structrequest" kindref="compound">request</ref>,<sp/><ref refid="structresponse" kindref="compound">response_t</ref><sp/>*<ref refid="structresponse" kindref="compound">response</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;doRequest&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>received,<sp/>ret;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>recvTimeout;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>*pRecvTimeout<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>fd_set<sp/>fds;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsocket" kindref="compound">socket_t</ref><sp/>*s<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gotSocket<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>&lt;<sp/>mNumSockets<sp/>&amp;&amp;<sp/>!gotSocket;<sp/>++<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>&amp;mSockets[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structsocket_1a18c5465a8c6856c15b45d8e8e0d7e147" kindref="member">mutex</ref>.tryLock())</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotSocket<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!gotSocket)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_file_net_c_d_f_8cpp_1a588357de2986fdf4c1380190f7ae9f37" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;no<sp/>available<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structsocket_1a48a0bdcea38bea40f5a2d9e3b113b139" kindref="member">closed</ref>)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(connect(s))</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_file_net_c_d_f_8cpp_1a588357de2986fdf4c1380190f7ae9f37" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>reconnect<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(send(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>,<sp/><ref refid="structrequest" kindref="compound">request</ref>-&gt;<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref>,<sp/><ref refid="structrequest" kindref="compound">request</ref>-&gt;<ref refid="structrequest_1a9095aa378d8153895243ac8ffd46baf9" kindref="member">actualLen</ref>,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structsocket_1af4c5c09231ee14e47c75844f377a0be9" kindref="member">retries</ref>++<sp/>&lt;<sp/><ref refid="rest_api_8cpp_1abc578c63b8061edc333983260802dced" kindref="member">MAX_HTTP_RETRIES</ref>)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_file_net_c_d_f_8cpp_1a588357de2986fdf4c1380190f7ae9f37" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>send&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1a48a0bdcea38bea40f5a2d9e3b113b139" kindref="member">closed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeout<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recvTimeout.tv_sec<sp/>=<sp/>timeout;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recvTimeout.tv_usec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_ZERO(&amp;fds);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>,<sp/>&amp;fds);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRecvTimeout<sp/>=<sp/>&amp;recvTimeout;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>select(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>+1,<sp/>&amp;fds,<sp/>NULL,<sp/>NULL,<sp/>pRecvTimeout);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_file_net_c_d_f_8cpp_1a588357de2986fdf4c1380190f7ae9f37" kindref="member">ERR</ref>(ret<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;select()<sp/>failed&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;timed<sp/>out&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((received<sp/>=<sp/>recv(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>,<sp/><ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1aa8d4c62e04a1ce7fab912b496ad6cf43" kindref="member">data</ref>,<sp/><ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1a1a34157603e204ad13c9c10b9970b0c7" kindref="member">dataLen</ref>,<sp/>0)<sp/>&lt;=<sp/>0))</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structsocket_1af4c5c09231ee14e47c75844f377a0be9" kindref="member">retries</ref>++<sp/>&lt;<sp/><ref refid="rest_api_8cpp_1abc578c63b8061edc333983260802dced" kindref="member">MAX_HTTP_RETRIES</ref>)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_file_net_c_d_f_8cpp_1a588357de2986fdf4c1380190f7ae9f37" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>recv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1ac6818bf58025baff5405239ddc7a4936" kindref="member">actualLen</ref><sp/>=<sp/>(size_t)<sp/>received;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((status<sp/>=<sp/>parseHeader(<ref refid="structresponse" kindref="compound">response</ref>)))</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_file_net_c_d_f_8cpp_1a588357de2986fdf4c1380190f7ae9f37" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>parseHeader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structresponse" kindref="compound">response</ref>-&gt;<ref refid="structresponse_1a0977d175ed8d57639bc827204d3ab4f3" kindref="member">reconnect</ref>)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1a48a0bdcea38bea40f5a2d9e3b113b139" kindref="member">closed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal">end:</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1af4c5c09231ee14e47c75844f377a0be9" kindref="member">retries</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1a18c5465a8c6856c15b45d8e8e0d7e147" kindref="member">mutex</ref>.unlock();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal">retry:</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>close(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1a48a0bdcea38bea40f5a2d9e3b113b139" kindref="member">closed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1a18c5465a8c6856c15b45d8e8e0d7e147" kindref="member">mutex</ref>.unlock();</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>doRequest(<ref refid="structrequest" kindref="compound">request</ref>,<sp/><ref refid="structresponse" kindref="compound">response</ref>,<sp/>timeout);</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a7bc501cee9faad708dd1bd16c874bf81" kindref="member">RestAPI::put</ref><sp/>(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13c" kindref="member">sys_t</ref><sp/>sys,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>param,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>value,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>*<sp/>reply,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;put&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>valueBuf[<ref refid="eiger_detector_8cpp_1a7244ab798f58214294b580ca0bb48552" kindref="member">MAX_BUF_SIZE</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>.empty())</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueLen<sp/>=<sp/>epicsSnprintf(valueBuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valueBuf),<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;value\&quot;:<sp/>%s}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>.c_str());</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>headerLen;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>header[<ref refid="eiger_detector_8cpp_1a7244ab798f58214294b580ca0bb48552" kindref="member">MAX_BUF_SIZE</ref>];</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>headerLen<sp/>=<sp/>epicsSnprintf(header,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header),<sp/><ref refid="rest_api_8cpp_1aea20f935127ae58ea0d0ae85d2c14c46" kindref="member">REQUEST_PUT</ref>,<sp/>mSysStr[sys].c_str(),</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param.c_str(),<sp/>mHostname.c_str(),<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)valueLen);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request_t</ref><sp/><ref refid="structrequest" kindref="compound">request</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>requestBuf[headerLen<sp/>+<sp/>valueLen];</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>requestBuf;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref><sp/><sp/><sp/>=<sp/>headerLen<sp/>+<sp/>valueLen;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a9095aa378d8153895243ac8ffd46baf9" kindref="member">actualLen</ref><sp/>=<sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response_t</ref><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>responseBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1aa8d4c62e04a1ce7fab912b496ad6cf43" kindref="member">data</ref><sp/><sp/><sp/><sp/>=<sp/>responseBuf;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a1a34157603e204ad13c9c10b9970b0c7" kindref="member">dataLen</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(responseBuf);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref>,<sp/>header,<sp/>headerLen);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref><sp/>+<sp/>headerLen,<sp/>valueBuf,<sp/>valueLen);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doRequest(&amp;<ref refid="structrequest" kindref="compound">request</ref>,<sp/>&amp;<ref refid="structresponse" kindref="compound">response</ref>,<sp/>timeout))</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[param=%s]<sp/>request<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>param.c_str());</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref><sp/>!=<sp/>200)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[param=%s]<sp/>server<sp/>returned<sp/>error<sp/>code<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param.c_str(),<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reply)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*reply<sp/>=<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">string</ref>(<ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a5d65e751a2a5220864bd20d8940dd18e" kindref="member">content</ref>,<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a844a1f991527aa9fa80ce6ad414a911f" kindref="member">contentLength</ref>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_rest_a_p_i_1a3da99109327f64267436315484b69af5" kindref="member">RestAPI::get</ref><sp/>(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13c" kindref="member">sys_t</ref><sp/>sys,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>param,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;get&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request_t</ref><sp/><ref refid="structrequest" kindref="compound">request</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>requestBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>requestBuf;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(requestBuf);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a9095aa378d8153895243ac8ffd46baf9" kindref="member">actualLen</ref><sp/>=<sp/>epicsSnprintf(<ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref>,<sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref>,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rest_api_8cpp_1adec0375050ef1be9673c119a6f83d1be" kindref="member">REQUEST_GET</ref>,<sp/>mSysStr[sys].c_str(),<sp/>param.c_str(),<sp/>mHostname.c_str());</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response_t</ref><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>responseBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1aa8d4c62e04a1ce7fab912b496ad6cf43" kindref="member">data</ref><sp/><sp/><sp/><sp/>=<sp/>responseBuf;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a1a34157603e204ad13c9c10b9970b0c7" kindref="member">dataLen</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(responseBuf);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doRequest(&amp;<ref refid="structrequest" kindref="compound">request</ref>,<sp/>&amp;<ref refid="structresponse" kindref="compound">response</ref>,<sp/>timeout))</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[param=%s]<sp/>request<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>param.c_str());</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref><sp/>!=<sp/>200)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[param=%s]<sp/>server<sp/>returned<sp/>error<sp/>code<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param.c_str(),<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref>);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>=<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">string</ref>(<ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a5d65e751a2a5220864bd20d8940dd18e" kindref="member">content</ref>,<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a844a1f991527aa9fa80ce6ad414a911f" kindref="member">contentLength</ref>);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RestAPI::getBlob<sp/>(<ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13c" kindref="member">sys_t</ref><sp/>sys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*bufSize,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*accept)</highlight></codeline>
<codeline lineno="769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;getBlob&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>received;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>remaining;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufp;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request_t</ref><sp/><ref refid="structrequest" kindref="compound">request</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>requestBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>requestBuf;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(requestBuf);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a9095aa378d8153895243ac8ffd46baf9" kindref="member">actualLen</ref><sp/>=<sp/>epicsSnprintf(<ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref>,<sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1acb1dbacb49991e37ed74e7657ad6edae" kindref="member">dataLen</ref>,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rest_api_8cpp_1a2b98bddd7898ae3d28b040713bc78aec" kindref="member">REQUEST_GET_FILE</ref>,<sp/>mSysStr[sys].c_str(),<sp/>name,<sp/>mHostname.c_str(),<sp/>accept);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response_t</ref><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>responseBuf[<ref refid="_b_i_s_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1aa8d4c62e04a1ce7fab912b496ad6cf43" kindref="member">data</ref><sp/><sp/><sp/><sp/>=<sp/>responseBuf;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a1a34157603e204ad13c9c10b9970b0c7" kindref="member">dataLen</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(responseBuf);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsocket" kindref="compound">socket_t</ref><sp/>*s<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gotSocket<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>&lt;<sp/>mNumSockets<sp/>&amp;&amp;<sp/>!gotSocket;<sp/>++<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>&amp;mSockets[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structsocket_1a18c5465a8c6856c15b45d8e8e0d7e147" kindref="member">mutex</ref>.tryLock())</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotSocket<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!gotSocket)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_file_net_c_d_f_8cpp_1a588357de2986fdf4c1380190f7ae9f37" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;no<sp/>available<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structsocket_1a48a0bdcea38bea40f5a2d9e3b113b139" kindref="member">closed</ref>)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(connect(s))</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_file_net_c_d_f_8cpp_1a588357de2986fdf4c1380190f7ae9f37" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>reconnect<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(send(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>,<sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a75261cd13d263ec8e0a3e6e80f4924e9" kindref="member">data</ref>,<sp/><ref refid="structrequest" kindref="compound">request</ref>.<ref refid="structrequest_1a9095aa378d8153895243ac8ffd46baf9" kindref="member">actualLen</ref>,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structsocket_1af4c5c09231ee14e47c75844f377a0be9" kindref="member">retries</ref>++<sp/>&lt;<sp/><ref refid="rest_api_8cpp_1abc578c63b8061edc333983260802dced" kindref="member">MAX_HTTP_RETRIES</ref>)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_file_net_c_d_f_8cpp_1a588357de2986fdf4c1380190f7ae9f37" kindref="member">ERR</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>send&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Receive<sp/>the<sp/>first<sp/>part<sp/>of<sp/>the<sp/>response<sp/>(header<sp/>and<sp/>some<sp/>content)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((received<sp/>=<sp/>recv(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>,<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1aa8d4c62e04a1ce7fab912b496ad6cf43" kindref="member">data</ref>,<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a1a34157603e204ad13c9c10b9970b0c7" kindref="member">dataLen</ref>,<sp/>0))<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structsocket_1af4c5c09231ee14e47c75844f377a0be9" kindref="member">retries</ref>++<sp/>&lt;<sp/><ref refid="rest_api_8cpp_1abc578c63b8061edc333983260802dced" kindref="member">MAX_HTTP_RETRIES</ref>)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[sys=%d<sp/>file=%s]<sp/>failed<sp/>to<sp/>receive<sp/>first<sp/>part&quot;</highlight><highlight class="normal">,<sp/>sys,<sp/>name);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((status<sp/>=<sp/>parseHeader(&amp;<ref refid="structresponse" kindref="compound">response</ref>)))</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[sys=%d<sp/>file=%s]<sp/>underlying<sp/>parseResponse<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>sys,<sp/>name);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a87a4392194e9eacc4100923e5b09f90b" kindref="member">code</ref><sp/>!=<sp/>200)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sys<sp/>!=<sp/><ref refid="rest_api_8h_1a14c3ad6f5fa82ee5ff47981398d0e13cae43f78a073c568086edf2880ca13fcd6" kindref="member">SSMonImages</ref>)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[sys=%d<sp/>file=%s]<sp/>file<sp/>not<sp/>found&quot;</highlight><highlight class="normal">,<sp/>sys,<sp/>name);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>receive<sp/>buffer<sp/>and<sp/>copy<sp/>over<sp/>what<sp/>we<sp/>already<sp/>received</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a844a1f991527aa9fa80ce6ad414a911f" kindref="member">contentLength</ref>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!*<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[sys=%d<sp/>file=%s]<sp/>malloc(%lu)<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>sys,<sp/>name,<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a844a1f991527aa9fa80ce6ad414a911f" kindref="member">contentLength</ref>);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>that<sp/>we<sp/>got<sp/>the<sp/>whole<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>*bufSize<sp/>=<sp/>received<sp/>-<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1afa0cb387effbdd7fe801205cd2c051c1" kindref="member">headerLen</ref>;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(*<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a5d65e751a2a5220864bd20d8940dd18e" kindref="member">content</ref>,<sp/>*bufSize);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>content<sp/>(MSG_WAITALL<sp/>can<sp/>fail!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>remaining<sp/>=<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a844a1f991527aa9fa80ce6ad414a911f" kindref="member">contentLength</ref><sp/>-<sp/>*bufSize;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>bufp<sp/>=<sp/>*<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref><sp/>+<sp/>*bufSize;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(remaining)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>received<sp/>=<sp/>recv(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>,<sp/>bufp,<sp/>remaining,<sp/>MSG_WAITALL);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(received<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bufSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structsocket_1af4c5c09231ee14e47c75844f377a0be9" kindref="member">retries</ref>++<sp/>&lt;<sp/><ref refid="rest_api_8cpp_1abc578c63b8061edc333983260802dced" kindref="member">MAX_HTTP_RETRIES</ref>)</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eiger_detector_8cpp_1a02586085698a967f28309aa3d54b43a3" kindref="member">ERR_ARGS</ref>(</highlight><highlight class="stringliteral">&quot;[sys=%d<sp/>file=%s]<sp/>failed<sp/>to<sp/>receive<sp/>second<sp/>part&quot;</highlight><highlight class="normal">,<sp/>sys,<sp/>name);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining<sp/>-=<sp/>received;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufp<sp/>+=<sp/>received;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>*bufSize<sp/>=<sp/><ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a844a1f991527aa9fa80ce6ad414a911f" kindref="member">contentLength</ref>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structresponse" kindref="compound">response</ref>.<ref refid="structresponse_1a0977d175ed8d57639bc827204d3ab4f3" kindref="member">reconnect</ref>)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1a48a0bdcea38bea40f5a2d9e3b113b139" kindref="member">closed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal">end:</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1af4c5c09231ee14e47c75844f377a0be9" kindref="member">retries</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1a18c5465a8c6856c15b45d8e8e0d7e147" kindref="member">mutex</ref>.unlock();</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal">retry:</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>close(s-&gt;<ref refid="structsocket_1a4a96c8e9ead80f13092915a6ef4d4373" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1a48a0bdcea38bea40f5a2d9e3b113b139" kindref="member">closed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsocket_1a18c5465a8c6856c15b45d8e8e0d7e147" kindref="member">mutex</ref>.unlock();</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getBlob(sys,<sp/>name,<sp/><ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>,<sp/>bufSize,<sp/>accept);</highlight></codeline>
<codeline lineno="914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADEiger/eigerApp/src/restApi.cpp"/>
  </compounddef>
</doxygen>
