<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ffmpeg_server_8cpp" kind="file" language="C++">
    <compoundname>ffmpegServer.cpp</compoundname>
    <includes refid="ffmpeg_server_8h" local="yes">ffmpegServer.h</includes>
    <includes local="yes">epicsExport.h</includes>
    <includes local="yes">iocsh.h</includes>
    <includes local="no">epicsExit.h</includes>
    <includes local="no">epicsThread.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="33">
        <label>sys/stat.h</label>
      </node>
      <node id="52">
        <label>iocsh.h</label>
      </node>
      <node id="50">
        <label>libavformat/avformat.h</label>
      </node>
      <node id="29">
        <label>stdarg.h</label>
      </node>
      <node id="41">
        <label>netinet/in.h</label>
      </node>
      <node id="40">
        <label>arpa/inet.h</label>
      </node>
      <node id="3">
        <label>epicsTypes.h</label>
      </node>
      <node id="16">
        <label>NDArray.h</label>
        <link refid="_n_d_array_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>NDAttributeList.h</label>
        <link refid="_n_d_attribute_list_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>stdlib.h</label>
      </node>
      <node id="36">
        <label>paths.h</label>
      </node>
      <node id="53">
        <label>epicsExit.h</label>
      </node>
      <node id="13">
        <label>epicsMutex.h</label>
      </node>
      <node id="28">
        <label>fcntl.h</label>
      </node>
      <node id="11">
        <label>epicsVersion.h</label>
      </node>
      <node id="19">
        <label>string</label>
      </node>
      <node id="47">
        <label>ffmpegCommon.h</label>
        <link refid="ffmpeg_common_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp</label>
        <link refid="ffmpeg_server_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>epicsThread.h</label>
      </node>
      <node id="35">
        <label>netdb.h</label>
      </node>
      <node id="51">
        <label>epicsExport.h</label>
      </node>
      <node id="42">
        <label>sys/resource.h</label>
      </node>
      <node id="25">
        <label>ADCoreVersion.h</label>
        <link refid="_a_d_core_version_8h"/>
      </node>
      <node id="22">
        <label>ADCoreAPI.h</label>
        <link refid="_a_d_core_a_p_i_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>pthread.h</label>
      </node>
      <node id="12">
        <label>asynNDArrayDriver.h</label>
        <link refid="asyn_n_d_array_driver_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>sys/types.h</label>
      </node>
      <node id="31">
        <label>string.h</label>
      </node>
      <node id="2">
        <label>ffmpegServer.h</label>
        <link refid="ffmpeg_server_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>unistd.h</label>
      </node>
      <node id="49">
        <label>libswscale/swscale.h</label>
      </node>
      <node id="38">
        <label>signal.h</label>
      </node>
      <node id="17">
        <label>ellLib.h</label>
      </node>
      <node id="48">
        <label>libavcodec/avcodec.h</label>
      </node>
      <node id="18">
        <label>NDAttribute.h</label>
        <link refid="_n_d_attribute_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>asynDriver.h</label>
      </node>
      <node id="32">
        <label>time.h</label>
      </node>
      <node id="54">
        <label>math.h</label>
      </node>
      <node id="46">
        <label>sys/wait.h</label>
      </node>
      <node id="26">
        <label>nullhttpd.h</label>
        <link refid="nullhttpd_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>sys/time.h</label>
      </node>
      <node id="5">
        <label>NDPluginDriver.h</label>
        <link refid="_n_d_plugin_driver_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>ctype.h</label>
      </node>
      <node id="24">
        <label>Codec.h</label>
        <link refid="_codec_8h"/>
      </node>
      <node id="4">
        <label>asynStandardInterfaces.h</label>
      </node>
      <node id="43">
        <label>sys/socket.h</label>
      </node>
      <node id="9">
        <label>epicsTime.h</label>
      </node>
      <node id="15">
        <label>asynPortDriver.h</label>
      </node>
      <node id="10">
        <label>NDPluginAPI.h</label>
        <link refid="_n_d_plugin_a_p_i_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>set</label>
      </node>
      <node id="7">
        <label>epicsMessageQueue.h</label>
      </node>
      <node id="20">
        <label>stdio.h</label>
      </node>
      <node id="14">
        <label>epicsEvent.h</label>
      </node>
      <node id="34">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ffmpeg_server_8cpp_1a3acffbd305ee72dcd4593c0d8af64a4f" prot="public" static="no">
        <name>MIN</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((a) &lt; (b)) ? (a) : (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="271" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1af0e94d13028051cd5339d204bfbb057d" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* driverName</definition>
        <argsstring></argsstring>
        <name>driverName</name>
        <initializer>= &quot;ffmpegServer&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="36" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a649416855aa18cdfbd4da41bcf4f0afd" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int stopping</definition>
        <argsstring></argsstring>
        <name>stopping</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="175" column="12" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a28ac6f712cdaf8357a9112a7bae1438a" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg streamArg0</definition>
        <argsstring></argsstring>
        <name>streamArg0</name>
        <initializer>= { &quot;portName&quot;,iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="700" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="700" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a84fea023087d695447ed411f8b71fb61" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg streamArg1</definition>
        <argsstring></argsstring>
        <name>streamArg1</name>
        <initializer>= { &quot;frame queue size&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="701" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a548fe9e8971ef34014594a421a1757e6" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg streamArg2</definition>
        <argsstring></argsstring>
        <name>streamArg2</name>
        <initializer>= { &quot;blocking callbacks&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="702" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="702" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a364a7479a195fee3bc4aeb9e699b0670" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg streamArg3</definition>
        <argsstring></argsstring>
        <name>streamArg3</name>
        <initializer>= { &quot;NDArray Port&quot;,iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="703" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a1c08cfddac9c77724d9233f580912f1f" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg streamArg4</definition>
        <argsstring></argsstring>
        <name>streamArg4</name>
        <initializer>= { &quot;NDArray Addr&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="704" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="704" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a6709f6750cacb16a7954f4e7626c1fb9" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg streamArg5</definition>
        <argsstring></argsstring>
        <name>streamArg5</name>
        <initializer>= { &quot;Max Buffers&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="705" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a9de2112b31773dd70d4ef6a37fa281e6" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg streamArg6</definition>
        <argsstring></argsstring>
        <name>streamArg6</name>
        <initializer>= { &quot;Max memory&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="706" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="706" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1ab73d35d380e70996b466b44666323295" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg streamArg7</definition>
        <argsstring></argsstring>
        <name>streamArg7</name>
        <initializer>= { &quot;priority&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="707" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="707" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a27b21ae756de320c23b04aad6e96817c" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg streamArg8</definition>
        <argsstring></argsstring>
        <name>streamArg8</name>
        <initializer>= { &quot;stackSize&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="708" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="708" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a4ce3352909ecaab59da25633d30d928f" prot="public" static="yes" mutable="no">
        <type>const iocshArg *const</type>
        <definition>const iocshArg* const streamArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>streamArgs</name>
        <initializer>= {&amp;streamArg0,
                                            &amp;streamArg1,
                                            &amp;streamArg2,
                                            &amp;streamArg3,
                                            &amp;streamArg4,
                                            &amp;streamArg5,
                                            &amp;streamArg6,
                                            &amp;streamArg7,                                            
                                            &amp;streamArg8}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="709" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="709" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a4fa25a3704b842a95254937bee435ad3" prot="public" static="yes" mutable="no">
        <type>const iocshFuncDef</type>
        <definition>const iocshFuncDef streamFuncDef</definition>
        <argsstring></argsstring>
        <name>streamFuncDef</name>
        <initializer>= {&quot;ffmpegStreamConfigure&quot;,9,streamArgs}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="719" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a1d8657cb995b005390dc8a1cc5099bc8" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg serverArg0</definition>
        <argsstring></argsstring>
        <name>serverArg0</name>
        <initializer>= { &quot;Http Port&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="726" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1acad52dc652363532e2fde8ad8ce8cad3" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg serverArg1</definition>
        <argsstring></argsstring>
        <name>serverArg1</name>
        <initializer>= { &quot;Network Interface&quot;, iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="727" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="727" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a315fb99c6fef478ccd3ceb20b1d48938" prot="public" static="yes" mutable="no">
        <type>const iocshArg *const</type>
        <definition>const iocshArg* const serverArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>serverArgs</name>
        <initializer>= {&amp;serverArg0, &amp;serverArg1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="728" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ffmpeg_server_8cpp_1a5ed7cd6d01952ce2556589437a36e379" prot="public" static="yes" mutable="no">
        <type>const iocshFuncDef</type>
        <definition>const iocshFuncDef serverFuncDef</definition>
        <argsstring></argsstring>
        <name>serverFuncDef</name>
        <initializer>= {&quot;ffmpegServerConfigure&quot;,2,serverArgs}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="729" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="729" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ffmpeg_server_8cpp_1a280ff4f61d0c55000b6d8ae24f2dd09c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dorequest</definition>
        <argsstring>(int sid)</argsstring>
        <name>dorequest</name>
        <param>
          <type>int</type>
          <declname>sid</declname>
        </param>
        <briefdescription>
<para>This is called whenever a client requests a stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="39" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="39" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_server_8cpp_1a2b8e117760015cf56c2366b8027670da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int config_read</definition>
        <argsstring>()</argsstring>
        <name>config_read</name>
        <briefdescription>
<para>this dummy function is here to satisfy nullhttpd </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="160" column="5" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="160" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_server_8cpp_1ae7b0efc9c16f820fb943a67625b2018a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void c_shutdown</definition>
        <argsstring>(void *)</argsstring>
        <name>c_shutdown</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
<para>c function that will be called at epicsExit that shuts down the http server cleanly </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="178" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="178" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_server_8cpp_1a792477deebc3288a3ec478704aa8eb68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ffmpegServerConfigure</definition>
        <argsstring>(int port, const char *networkInterface)</argsstring>
        <name>ffmpegServerConfigure</name>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>networkInterface</declname>
        </param>
        <briefdescription>
<para>Configure and start the http server, specifying a specific network interface, or &apos;any&apos; for default. </para>
        </briefdescription>
        <detaileddescription>
<para>To specify an interface, use either the DNS name or the IP of the NIC. ex: 10.68.212.33 or my-ioc-server-hostname Default port is 8080. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="191" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="191" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_server_8cpp_1a5722f6e9a3c9d46f3ea81917b369ab0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ffmpegStreamConfigure</definition>
        <argsstring>(const char *portName, int queueSize, int blockingCallbacks, const char *NDArrayPort, int NDArrayAddr, int maxBuffers, int maxMemory, int priority, int stackSize)</argsstring>
        <name>ffmpegStreamConfigure</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>queueSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blockingCallbacks</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>NDArrayPort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NDArrayAddr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxBuffers</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxMemory</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stackSize</declname>
        </param>
        <briefdescription>
<para>Configuration routine. </para>
        </briefdescription>
        <detaileddescription>
<para>Called directly, or from the iocsh function, calls <ref refid="classffmpeg_stream" kindref="compound">ffmpegStream</ref> constructor:</para>
<para>Constructor for <ref refid="classffmpeg_stream" kindref="compound">ffmpegStream</ref>; Class representing an mjpg stream served up by ffmpegServer. <ref refid="ffmpeg_server_8cpp_1a792477deebc3288a3ec478704aa8eb68" kindref="member">ffmpegServerConfigure()</ref> must be called before creating any instances of this class. <ref refid="ffmpeg_server_8cpp_1a5722f6e9a3c9d46f3ea81917b369ab0f" kindref="member">ffmpegStreamConfigure()</ref> should be used to create an instance in the iocsh. See ffmpegStream.template for more details of usage. <verbatim>\param portName The name of the asyn port driver to be created.
\param queueSize The number of NDArrays that the input queue for this plugin can hold when 
       NDPluginDriverBlockingCallbacks=0.  Larger queues can decrease the number of dropped arrays,
       at the expense of more NDArray buffers being allocated from the underlying driver&apos;s NDArrayPool.
\param blockingCallbacks Initial setting for the NDPluginDriverBlockingCallbacks flag.
       0=callbacks are queued and executed by the callback thread; 1 callbacks execute in the thread
       of the driver doing the callbacks.
\param NDArrayPort Name of asyn port driver for initial source of NDArray callbacks.
\param NDArrayAddr asyn port driver address for initial source of NDArray callbacks.
\param maxBuffers The maximum number of NDArray buffers that the NDArrayPool for this driver is 
       allowed to allocate. Set this to -1 to allow an unlimited number of buffers.
\param maxMemory The maximum amount of memory that the NDArrayPool for this driver is 
       allowed to allocate. Set this to -1 to allow an unlimited amount of memory.
\param priority The thread priority for the asyn port driver thread if ASYN_CANBLOCK is set in asynFlags.
\param stackSize The stack size for the asyn port driver thread if ASYN_CANBLOCK is set in asynFlags.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="684" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="684" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_server_8cpp_1a0548798aea52be40dd074a943804a4b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void streamCallFunc</definition>
        <argsstring>(const iocshArgBuf *args)</argsstring>
        <name>streamCallFunc</name>
        <param>
          <type>const iocshArgBuf *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="721" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="721" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_server_8cpp_1adefc2ec8eeaca6b09df37c5cb0f5ebf6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void serverCallFunc</definition>
        <argsstring>(const iocshArgBuf *args)</argsstring>
        <name>serverCallFunc</name>
        <param>
          <type>const iocshArgBuf *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="732" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="732" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_server_8cpp_1a0c7eb7c29ce7b6a4161d4dc078179caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ffmpegServerRegister</definition>
        <argsstring>(void)</argsstring>
        <name>ffmpegServerRegister</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Register ffmpegStreamConfigure and ffmpegServerConfigure for use on iocsh. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="742" column="17" bodyfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" bodystart="742" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_server_8cpp_1ac0d78a805fe1e161ee0e0788e6b45cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>epicsExportRegistrar</definition>
        <argsstring>(ffmpegServerRegister)</argsstring>
        <name>epicsExportRegistrar</name>
        <param>
          <type><ref refid="ffmpeg_server_8cpp_1a0c7eb7c29ce7b6a4161d4dc078179caf" kindref="member">ffmpegServerRegister</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" line="749" column="1" declfile="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp" declline="749" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>section License Author: Diamond Light Source, Copyright 2010 </para>
    </briefdescription>
    <detaileddescription>
<para>&apos;ffmpegServer&apos; is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</para>
<para>&apos;ffmpegServer&apos; is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.</para>
<para>You should have received a copy of the GNU Lesser General Public License along with &apos;ffmpegServer&apos;. If not, see <ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink>. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>local<sp/>includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ffmpeg_server_8h" kindref="compound">ffmpegServer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EPICS<sp/>includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;epicsExport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iocsh.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsExit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsThread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>windows<sp/>includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER<sp/></highlight><highlight class="comment">/*<sp/>Microsoft<sp/>Compilers<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pthread_cond_init<sp/>(pthread_cond_t<sp/>*cv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pthread_condattr_t<sp/>*)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>cv-&gt;semaphore<sp/>=<sp/>CreateEvent<sp/>(NULL,<sp/><ref refid="pco_8cpp_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><ref refid="pco_8cpp_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pthread_cond_wait<sp/>(pthread_cond_t<sp/>*cv,<sp/>pthread_mutex_t<sp/>*external_mutex)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(external_mutex);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>WaitForSingleObject<sp/>(cv-&gt;semaphore,<sp/>1000);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(external_mutex);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pthread_cond_signal<sp/>(pthread_cond_t<sp/>*cv)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>SetEvent<sp/>(cv-&gt;semaphore);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ffmpegServer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_server_8cpp_1a280ff4f61d0c55000b6d8ae24f2dd09c" kindref="member">dorequest</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sid)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ext;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="nullhttpd_8h_1a1a9bc17fc2e0a0bf0fd9be63bf1faffc" kindref="member">read_header</ref>(sid)&lt;0)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1ac87891f3d1a4dea4eb2b539ae69000ba" kindref="member">closeconnect</ref>(sid,<sp/>1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1aef6f1403637616a494bd7942f296d87a" kindref="member">logaccess</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>-<sp/>HTTP<sp/>Request:<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].dat-&gt;in_RemoteAddr,<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].<ref refid="struct_c_o_n_n_e_c_t_i_o_n_1aedca6bc5f821f5d9db70f5315ee9a85d" kindref="member">dat</ref>-&gt;<ref refid="struct_c_o_n_n_d_a_t_a_1ae280c6c8a40fae68c9e564f90ea1d388" kindref="member">in_RequestMethod</ref>,<sp/><ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].<ref refid="struct_c_o_n_n_e_c_t_i_o_n_1aedca6bc5f821f5d9db70f5315ee9a85d" kindref="member">dat</ref>-&gt;<ref refid="struct_c_o_n_n_d_a_t_a_1a5a732ad9e24afbf9ce90e0ddf08cd6a3" kindref="member">in_RequestURI</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].dat-&gt;out_ContentType,<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].<ref refid="struct_c_o_n_n_e_c_t_i_o_n_1aedca6bc5f821f5d9db70f5315ee9a85d" kindref="member">dat</ref>-&gt;<ref refid="struct_c_o_n_n_d_a_t_a_1a7f5562994e80d19c7c34883629744ec3" kindref="member">out_ContentType</ref>)-1,<sp/></highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>we<sp/>are<sp/>asking<sp/>for<sp/>a<sp/>jpg<sp/>or<sp/>an<sp/>mjpg<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ext<sp/>=<sp/>strrchr(<ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].dat-&gt;in_RequestURI+1,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ext<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>(int)<sp/>(ext<sp/>-<sp/><ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].dat-&gt;in_RequestURI<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portName<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)calloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>256);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(portName,<sp/><ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].dat-&gt;in_RequestURI+1,<sp/>len);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext++;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;nstreams;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(portName,<sp/>streams[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]-&gt;portName)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(ext,<sp/></highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streams[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]-&gt;send_snapshot(sid,<sp/>1);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(portName);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(ext,<sp/></highlight><highlight class="stringliteral">&quot;jpg&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp(ext,<sp/></highlight><highlight class="stringliteral">&quot;jpeg&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streams[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]-&gt;send_snapshot(sid,<sp/>0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(portName);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(ext,<sp/></highlight><highlight class="stringliteral">&quot;mjpg&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp(ext,<sp/></highlight><highlight class="stringliteral">&quot;mjpeg&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streams[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]-&gt;send_stream(sid);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(portName);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>weren&apos;t<sp/>asked<sp/>for<sp/>a<sp/>stream<sp/>then<sp/>just<sp/>send<sp/>the<sp/>index<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1aed2a33b5bb684d7b757196a9c32a9fee" kindref="member">send_header</ref>(sid,<sp/>0,<sp/>200,<sp/></highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">,<sp/>-1,<sp/>-1);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;\n\</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral">&lt;HTML&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/>&lt;style<sp/>type=\&quot;text/css\&quot;&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral">BODY<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n\</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/>background-color:<sp/>#f2f2f6;<sp/>\n\</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/>font-family:<sp/>arial,<sp/>sans-serif;<sp/>\n\</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral">}<sp/>\n\</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral">H1<sp/>{<sp/>\n\</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/>font-size:<sp/>24px;<sp/>\n\</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/>color:<sp/>#000000;<sp/>\n\</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/>font-weight:<sp/>bold;<sp/>\n\</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/>text-align:<sp/>center;<sp/>\n\</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral">}<sp/>\n\</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral">H2<sp/>{<sp/>\n\</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/>font-size:<sp/>18px;<sp/>\n\</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/>color:<sp/>#1b2a60;<sp/>\n\</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/>font-weight:<sp/>bold;<sp/>\n\</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/>text-align:<sp/>center;<sp/>\n\</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral">}<sp/>\n\</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral">A:link<sp/>{<sp/>\n\</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/>text-decoration:<sp/>none;<sp/>color:#3b4aa0;<sp/>\n\</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral">}<sp/>\n\</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral">A:visited<sp/>{<sp/>\n\</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/>text-decoration:<sp/>none;<sp/>color:#3b4aa0;<sp/>\n\</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral">}<sp/>\n\</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral">A:active<sp/>{<sp/>\n\</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/>text-decoration:<sp/>none;<sp/>color:#3b4aa0;<sp/>\n\</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral">}<sp/>\n\</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral">A:hover<sp/>{<sp/>\n\</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/>text-decoration:<sp/>underline;<sp/>color:#3b4aff;<sp/>\n\</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral">}<sp/>\n\</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral">td<sp/>{<sp/>\n\</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/>background-color:<sp/>#e0e0ee;<sp/>\n\</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/>border-style:<sp/>outset;<sp/>\n\</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/>border-color:<sp/>#e0e0ee;<sp/>\n\</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/>border-width:<sp/>1px;<sp/>\n\</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/>padding:<sp/>10px;<sp/>\n\</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/>text-align:<sp/>center;<sp/>\n\</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral">}<sp/>\n\</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral">p<sp/>{<sp/>\n\</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/>text-align:<sp/>center;<sp/>\n\</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral">}<sp/>\n\</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/>&lt;/style&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/>&lt;HEAD&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/>&lt;TITLE&gt;ffmpegServer<sp/>Content<sp/>Listing&lt;/TITLE&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/>&lt;/HEAD&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/>&lt;BODY&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/>&lt;CENTER&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/>&lt;H1&gt;ffmpegServer<sp/>Content<sp/>Listing&lt;/H1&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/>&lt;TABLE<sp/>cellspacing=\&quot;15\&quot;&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&lt;TR&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral">&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>a<sp/>table<sp/>of<sp/>streams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;nstreams;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;&lt;TD&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;&lt;H2&gt;%s&lt;/H2&gt;\n&quot;</highlight><highlight class="normal">,<sp/>streams[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]-&gt;portName);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=\&quot;%s.index\&quot;<sp/>height=\&quot;192\&quot;<sp/>title=\&quot;Static<sp/>JPEG\&quot;<sp/>alt=\&quot;&amp;lt;No<sp/>image<sp/>yet&amp;gt;\&quot;/&gt;\n&quot;</highlight><highlight class="normal">,<sp/>streams[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]-&gt;portName);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;&lt;p&gt;&lt;a<sp/>href=\&quot;%s.jpg\&quot;&gt;Link<sp/>to<sp/>Static<sp/>JPEG&lt;/a&gt;&lt;/p&gt;\n&quot;</highlight><highlight class="normal">,<sp/>streams[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]-&gt;portName);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;&lt;p&gt;&lt;a<sp/>href=\&quot;%s.mjpg\&quot;&gt;Link<sp/>to<sp/>MJPEG<sp/>Stream&lt;/a&gt;&lt;/p&gt;\n&quot;</highlight><highlight class="normal">,<sp/>streams[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]-&gt;portName);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;&lt;/TD&gt;\n&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>%<sp/>3<sp/>==<sp/>2)<sp/>{<sp/></highlight><highlight class="comment">//3<sp/>per<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;/TR&gt;\n<sp/><sp/><sp/><sp/>&lt;TR&gt;\n&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;\n\</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&lt;/TR&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/>&lt;/TABLE&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/>&lt;/CENTER&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/>&lt;/BODY&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral">&lt;/HTML&gt;<sp/>\n\</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral">&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1ab95609803a250987eae69d66ec90dce8" kindref="member">flushbuffer</ref>(sid);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_server_8cpp_1a2b8e117760015cf56c2366b8027670da" kindref="member">config_read</ref>()</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a67c5cbc76c67f1a4a8ae8ad8c8fe2c00" kindref="member">server_base_dir</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a67c5cbc76c67f1a4a8ae8ad8c8fe2c00" kindref="member">server_base_dir</ref>)-1,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="nullhttpd_8h_1acb57b2a8dd265846c7eaa64c42d600a0" kindref="member">DEFAULT_BASE_DIR</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1af7b661a404ecb6934b120f9e7fe017ea" kindref="member">server_bin_dir</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1af7b661a404ecb6934b120f9e7fe017ea" kindref="member">server_bin_dir</ref>)-1,<sp/></highlight><highlight class="stringliteral">&quot;%s/bin&quot;</highlight><highlight class="normal">,<sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a67c5cbc76c67f1a4a8ae8ad8c8fe2c00" kindref="member">server_base_dir</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1aa4361a2b3d132396f2d450bc06d0f4b2" kindref="member">server_cgi_dir</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1aa4361a2b3d132396f2d450bc06d0f4b2" kindref="member">server_cgi_dir</ref>)-1,<sp/></highlight><highlight class="stringliteral">&quot;%s/cgi-bin&quot;</highlight><highlight class="normal">,<sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a67c5cbc76c67f1a4a8ae8ad8c8fe2c00" kindref="member">server_base_dir</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a00904ede0353bd9386c6f2309eaa9919" kindref="member">server_etc_dir</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a00904ede0353bd9386c6f2309eaa9919" kindref="member">server_etc_dir</ref>)-1,<sp/></highlight><highlight class="stringliteral">&quot;%s/etc&quot;</highlight><highlight class="normal">,<sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a67c5cbc76c67f1a4a8ae8ad8c8fe2c00" kindref="member">server_base_dir</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1aa482ba89933d38936e704f8351c5422b" kindref="member">server_htdocs_dir</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1aa482ba89933d38936e704f8351c5422b" kindref="member">server_htdocs_dir</ref>)-1,<sp/></highlight><highlight class="stringliteral">&quot;%s/htdocs&quot;</highlight><highlight class="normal">,<sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a67c5cbc76c67f1a4a8ae8ad8c8fe2c00" kindref="member">server_base_dir</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a070c46b95dbdcc7d8fc05161e15b7eb6" kindref="member">fixslashes</ref>(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a67c5cbc76c67f1a4a8ae8ad8c8fe2c00" kindref="member">server_base_dir</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a070c46b95dbdcc7d8fc05161e15b7eb6" kindref="member">fixslashes</ref>(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1af7b661a404ecb6934b120f9e7fe017ea" kindref="member">server_bin_dir</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a070c46b95dbdcc7d8fc05161e15b7eb6" kindref="member">fixslashes</ref>(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1aa4361a2b3d132396f2d450bc06d0f4b2" kindref="member">server_cgi_dir</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a070c46b95dbdcc7d8fc05161e15b7eb6" kindref="member">fixslashes</ref>(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a00904ede0353bd9386c6f2309eaa9919" kindref="member">server_etc_dir</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a070c46b95dbdcc7d8fc05161e15b7eb6" kindref="member">fixslashes</ref>(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1aa482ba89933d38936e704f8351c5422b" kindref="member">server_htdocs_dir</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stopping<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_server_8cpp_1ae7b0efc9c16f820fb943a67625b2018a" kindref="member">c_shutdown</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Shutting<sp/>down<sp/>http<sp/>server...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>stopping<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a19559a3ecf97260826b16f9038ae838f" kindref="member">server_shutdown</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;OK\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_server_8cpp_1a792477deebc3288a3ec478704aa8eb68" kindref="member">ffmpegServerConfigure</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>networkInterface)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port==0)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>8080;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>streams<sp/>=<sp/>(<ref refid="classffmpeg_stream" kindref="compound">ffmpegStream</ref><sp/>**)<sp/>calloc(<ref refid="ffmpeg_server_8h_1a297bc9dca0006b1b8651ee863ac4b077" kindref="member">MAX_FFMPEG_STREAMS</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classffmpeg_stream" kindref="compound">ffmpegStream</ref><sp/>*));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>nstreams<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a37ac1475af32ae6c18601f83611ed341" kindref="member">server_port</ref><sp/>=<sp/>port;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a04a8885c08679641e022f10fe2f71e39" kindref="member">server_loglevel</ref>=1;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a86bebf8687bb667cfe42135c1ab02091" kindref="member">server_hostname</ref>,<sp/>networkInterface,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a86bebf8687bb667cfe42135c1ab02091" kindref="member">server_hostname</ref>)-1);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a2d615a786dca9452d48dbdda393af55d" kindref="member">server_maxconn</ref>=50;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a8750ce68311f1da57c4c967c72e65750" kindref="member">server_maxidle</ref>=120;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Starting<sp/>server<sp/>on<sp/>port<sp/>%d...\n&quot;</highlight><highlight class="normal">,<sp/>port);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="nullhttpd_8h_1a71770dad1bccb2ffa25dfdcb12cb40bd" kindref="member">program_name</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nullhttpd_8h_1a71770dad1bccb2ffa25dfdcb12cb40bd" kindref="member">program_name</ref>)-1,<sp/></highlight><highlight class="stringliteral">&quot;ffmpegServer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1afd49f8a781f4f13c93b4348dfdc4507d" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_beginthread(WSAReaper,<sp/>0,<sp/>NULL)==-1)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1af1a3fad0fb9bfa5cd9083948f6c95de4" kindref="member">logerror</ref>(</highlight><highlight class="stringliteral">&quot;Winsock<sp/>reaper<sp/>thread<sp/>failed<sp/>to<sp/>start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>up<sp/>acquisition<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>(epicsThreadCreate(</highlight><highlight class="stringliteral">&quot;httpServer&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadPriorityMedium,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadGetStackSize(epicsThreadStackMedium),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(EPICSTHREADFUNC)<ref refid="nullhttpd_8h_1a8df31299ee67f394fa1b97ca96a1e656" kindref="member">accept_loop</ref>,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL)<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s:ffmpegServerConfigure<sp/>epicsThreadCreate<sp/>failure<sp/>for<sp/>image<sp/>task\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>printf(</highlight><highlight class="stringliteral">&quot;OK\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Register<sp/>the<sp/>shutdown<sp/>function<sp/>for<sp/>epicsAtExit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsAtExit(<ref refid="ffmpeg_server_8cpp_1ae7b0efc9c16f820fb943a67625b2018a" kindref="member">c_shutdown</ref>,<sp/>NULL);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classffmpeg_stream_1a3cb8c2f674d73c20793867abd2aa5724" kindref="member">ffmpegStream::send_snapshot</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>now=time((time_t*)0);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>always_on;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref>*<sp/>pArray;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>printf(&quot;JPEG<sp/>requested\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Say<sp/>we&apos;re<sp/>listening<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(0,<sp/><ref refid="classffmpeg_stream_1a11d0091d6d6cf7690076190ea87dd5e5" kindref="member">ffmpegServerAlwaysOn</ref>,<sp/>&amp;always_on);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(<sp/>&amp;this-&gt;mutex<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;nclients++;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;nclients<sp/>&gt;<sp/>1)<sp/>always_on<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;this-&gt;mutex);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>always<sp/>on<sp/>or<sp/>clients<sp/>already<sp/>listening<sp/>then<sp/>there<sp/>is<sp/>already<sp/>a<sp/>frame<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(always_on<sp/>||<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pArray<sp/>=<sp/>get_jpeg();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pArray<sp/>=<sp/>wait_for_jpeg(sid);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>no<sp/>longer<sp/>listening<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(<sp/>&amp;this-&gt;mutex<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;nclients--;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;this-&gt;mutex);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there&apos;s<sp/>no<sp/>data<sp/>yet,<sp/>say<sp/>so<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pArray<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1ad4a81cea18f472f3df2e85494113dcc5" kindref="member">printerror</ref>(sid,<sp/>200,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>Data&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>jpeg<sp/>available<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>right<sp/>header<sp/>for<sp/>a<sp/>jpeg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>(int)<sp/>pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].<ref refid="struct_c_o_n_n_e_c_t_i_o_n_1aedca6bc5f821f5d9db70f5315ee9a85d" kindref="member">dat</ref>-&gt;<ref refid="struct_c_o_n_n_d_a_t_a_1a2ee16182dd3131dda674a22be01ba286" kindref="member">out_ContentLength</ref>=size;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a02debcd1a761c6a92250717ab540b0c0" kindref="member">send_fileheader</ref>(sid,<sp/>0,<sp/>200,<sp/></highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;image/jpeg&quot;</highlight><highlight class="normal">,<sp/>size,<sp/>now);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>jpeg<sp/>itself<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>send(<ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].<ref refid="structsocket" kindref="compound">socket</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>pArray-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>,<sp/>size,<sp/>0);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>pArray-&gt;<ref refid="class_n_d_array_1a0c4c61ea4d44ce97db979d24305c996e" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].<ref refid="struct_c_o_n_n_e_c_t_i_o_n_1aedca6bc5f821f5d9db70f5315ee9a85d" kindref="member">dat</ref>-&gt;<ref refid="struct_c_o_n_n_d_a_t_a_1abdeba9c8665c56d25f9268f0ad98bd04" kindref="member">out_headdone</ref>=1;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].<ref refid="struct_c_o_n_n_e_c_t_i_o_n_1aedca6bc5f821f5d9db70f5315ee9a85d" kindref="member">dat</ref>-&gt;<ref refid="struct_c_o_n_n_d_a_t_a_1a527ff688438cfc247e440d94467a5f48" kindref="member">out_bodydone</ref>=1;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].<ref refid="struct_c_o_n_n_e_c_t_i_o_n_1aedca6bc5f821f5d9db70f5315ee9a85d" kindref="member">dat</ref>-&gt;<ref refid="struct_c_o_n_n_d_a_t_a_1af248510653b6b3d9153288977a0775b5" kindref="member">out_flushed</ref>=1;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].<ref refid="struct_c_o_n_n_e_c_t_i_o_n_1aedca6bc5f821f5d9db70f5315ee9a85d" kindref="member">dat</ref>-&gt;<ref refid="struct_c_o_n_n_d_a_t_a_1ae3b78c381506b4f8e9c1f86826b49f37" kindref="member">out_ReplyData</ref>[0]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1ab95609803a250987eae69d66ec90dce8" kindref="member">flushbuffer</ref>(sid);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN(a,<sp/>b)<sp/><sp/>(((a)<sp/>&lt;<sp/>(b))<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classffmpeg_stream_1aee647da4243f5d6c8c33b1bb49e92d1e" kindref="member">ffmpegStream::send_frame</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sid,<sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pArray)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>difftime;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>struct<sp/>timeval<sp/>start,<sp/>end;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pArray)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>metadata<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Send<sp/>frame<sp/>%d<sp/>to<sp/>sid<sp/>%d\n&quot;,<sp/>pArray-&gt;dims[0].size,<sp/>sid);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;Content-Type:<sp/>image/jpeg\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;Content-Length:<sp/>%d\r\n\r\n&quot;</highlight><highlight class="normal">,<sp/>pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1ab95609803a250987eae69d66ec90dce8" kindref="member">flushbuffer</ref>(sid);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>jpeg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gettimeofday(&amp;start,<sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>send(<ref refid="nullhttpd_8h_1a525d7eccda3aaf37a79ce3854365b295" kindref="member">conn</ref>[sid].<ref refid="structsocket" kindref="compound">socket</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>pArray-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>,<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gettimeofday(&amp;end,<sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>a<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;\r\n--BOUNDARY\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1ab95609803a250987eae69d66ec90dce8" kindref="member">flushbuffer</ref>(sid);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difftime<sp/>=<sp/>(end.tv_usec<sp/>-<sp/>start.tv_usec)<sp/>*<sp/>0.000001<sp/>+<sp/>end.tv_sec<sp/>-<sp/>start.tv_sec;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(difftime<sp/>&gt;<sp/>0.1)<sp/>printf<sp/>(&quot;It<sp/>took<sp/>%.2lf<sp/>seconds<sp/>to<sp/>send<sp/>a<sp/>frame<sp/>to<sp/>%d.<sp/>That&apos;s<sp/>a<sp/>bit<sp/>slow\n&quot;,<sp/>difftime,<sp/>sid);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Done\n&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pArray-&gt;<ref refid="class_n_d_array_1a0c4c61ea4d44ce97db979d24305c996e" kindref="member">release</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><ref refid="class_n_d_array" kindref="compound">NDArray</ref>*<sp/>ffmpegStream::get_jpeg()<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref>*<sp/>pArray;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;this-&gt;mutex);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>pArray<sp/>=<sp/>this-&gt;jpeg;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pArray)<sp/>pArray-&gt;<ref refid="class_n_d_array_1a886f99b8a1af302b444b9b2620231e73" kindref="member">reserve</ref>();<sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;this-&gt;mutex);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pArray;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><ref refid="class_n_d_array" kindref="compound">NDArray</ref>*<sp/>ffmpegStream::wait_for_jpeg(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sid)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref>*<sp/>pArray;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;this-&gt;mutex);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;(this-&gt;cond[sid]),<sp/>&amp;this-&gt;mutex);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>pArray<sp/>=<sp/>this-&gt;jpeg;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pArray)<sp/>pArray-&gt;<ref refid="class_n_d_array_1a886f99b8a1af302b444b9b2620231e73" kindref="member">reserve</ref>();<sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;this-&gt;mutex);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pArray;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classffmpeg_stream_1aee216808379d2b57aab36f3f97baf7c1" kindref="member">ffmpegStream::send_stream</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sid)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>always_on;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref>*<sp/>pArray;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>now=time((time_t*)0);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Say<sp/>we&apos;re<sp/>listening<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(0,<sp/><ref refid="classffmpeg_stream_1a11d0091d6d6cf7690076190ea87dd5e5" kindref="member">ffmpegServerAlwaysOn</ref>,<sp/>&amp;always_on);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(<sp/>&amp;this-&gt;mutex<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;nclients++;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;nclients<sp/>&gt;<sp/>1)<sp/>always_on<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;this-&gt;mutex);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>appropriate<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a02debcd1a761c6a92250717ab540b0c0" kindref="member">send_fileheader</ref>(sid,<sp/>0,<sp/>200,<sp/></highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;multipart/x-mixed-replace;boundary=BOUNDARY&quot;</highlight><highlight class="normal">,<sp/>-1,<sp/>now);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1a5d3bd1a7f401fdd0efae6fdb4280e0fb" kindref="member">prints</ref>(</highlight><highlight class="stringliteral">&quot;--BOUNDARY\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nullhttpd_8h_1ab95609803a250987eae69d66ec90dce8" kindref="member">flushbuffer</ref>(sid);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>always<sp/>on<sp/>or<sp/>clients<sp/>already<sp/>listening<sp/>then<sp/>there<sp/>is<sp/>already<sp/>a<sp/>frame<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(always_on)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pArray<sp/>=<sp/>get_jpeg();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="classffmpeg_stream_1aee647da4243f5d6c8c33b1bb49e92d1e" kindref="member">send_frame</ref>(sid,<sp/>pArray);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>while<sp/>the<sp/>client<sp/>is<sp/>listening<sp/>and<sp/>we<sp/>aren&apos;t<sp/>stopping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ret<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>!stopping)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>for<sp/>a<sp/>new<sp/>frame<sp/>and<sp/>send<sp/>it*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pArray<sp/>=<sp/>wait_for_jpeg(sid);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="classffmpeg_stream_1aee647da4243f5d6c8c33b1bb49e92d1e" kindref="member">send_frame</ref>(sid,<sp/>pArray);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>no<sp/>longer<sp/>listening<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(<sp/>&amp;this-&gt;mutex<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;nclients--;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;this-&gt;mutex);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ffmpegStream::allocScArray(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;scArray)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;scArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref><sp/>&gt;=<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>processed<sp/>array<sp/>is<sp/>already<sp/>big<sp/>enough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avpicture_fill((AVPicture<sp/>*)scPicture,(uint8_t<sp/>*)scArray-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>,c-&gt;pix_fmt,c-&gt;width,c-&gt;height);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>need<sp/>a<sp/>new<sp/>one,<sp/>so<sp/>discard<sp/>the<sp/>old<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;scArray-&gt;<ref refid="class_n_d_array_1a0c4c61ea4d44ce97db979d24305c996e" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scArray<sp/>=<sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1ad3969854a37329ef4061cc560e9022dc" kindref="member">pNDArrayPool</ref>-&gt;<ref refid="class_n_d_array_pool_1a26b4360694655c4af6c853c2f3d2ce5e" kindref="member">alloc</ref>(1,<sp/>&amp;size,<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16aa4bc4803d2c1a0073497f0b4b4d2243f" kindref="member">NDInt8</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>alloc<sp/>in<sp/>and<sp/>scaled<sp/>pictures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>avpicture_fill((AVPicture<sp/>*)scPicture,(uint8_t<sp/>*)scArray-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>,c-&gt;pix_fmt,c-&gt;width,c-&gt;height);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classffmpeg_stream_1a04f5f241f4da4407726e3426bb5e6365" kindref="member">ffmpegStream::processCallbacks</ref>(<ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pArray)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>difftime;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>struct<sp/>timeval<sp/>start,<sp/>end;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>gettimeofday(&amp;start,<sp/>NULL);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>going<sp/>to<sp/>get<sp/>these<sp/>with<sp/>getIntegerParam<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality,<sp/>clients,<sp/>false_col,<sp/>always_on,<sp/>maxw,<sp/>maxh;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>going<sp/>to<sp/>get<sp/>these<sp/>from<sp/>the<sp/>dims<sp/>of<sp/>the<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>case<sp/>we<sp/>force<sp/>a<sp/>final<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>setw,<sp/>seth;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>printing<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;processCallbacks&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>getting<sp/>the<sp/>colour<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>=<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812a7ce7370097e884f4954fc8b3d069a620" kindref="member">NDColorModeMono</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_attribute" kindref="compound">NDAttribute</ref><sp/>*pAttribute<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>base<sp/>class<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_plugin_driver_1a1aef91c358b7b8bde97fc1a01eb7c00d" kindref="member">NDPluginDriver::beginProcessCallbacks</ref>(pArray);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>if<sp/>anyone&apos;s<sp/>listening<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;this-&gt;mutex);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>clients<sp/>=<sp/>this-&gt;nclients;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;this-&gt;mutex);<sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(0,<sp/><ref refid="classffmpeg_stream_1a59db3fcbcec5b18839466e7f7535c80c" kindref="member">ffmpegServerClients</ref>,<sp/>clients);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>configuration<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(0,<sp/><ref refid="classffmpeg_stream_1a3c08ebc688454593f2d12414ee47a85b" kindref="member">ffmpegServerQuality</ref>,<sp/>&amp;quality);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(0,<sp/><ref refid="classffmpeg_stream_1aafef035b249121419e9f41ce5cb11c8f" kindref="member">ffmpegServerFalseCol</ref>,<sp/>&amp;false_col);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(0,<sp/><ref refid="classffmpeg_stream_1a11d0091d6d6cf7690076190ea87dd5e5" kindref="member">ffmpegServerAlwaysOn</ref>,<sp/>&amp;always_on);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(0,<sp/><ref refid="classffmpeg_stream_1a9919b67e00e68d0e23aeabef7defe058" kindref="member">ffmpegServerMaxW</ref>,<sp/>&amp;maxw);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(0,<sp/><ref refid="classffmpeg_stream_1ad3bbc4cbbb6a7a56fd8d7ba40d24acb7" kindref="member">ffmpegServerMaxH</ref>,<sp/>&amp;maxh);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(0,<sp/><ref refid="classffmpeg_stream_1a2402c07c5d70d2585f6ebe97c0730ef0" kindref="member">ffmpegServerSetW</ref>,<sp/>&amp;setw);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(0,<sp/><ref refid="classffmpeg_stream_1af13c264690bf4a471667305cbfd7e4aa" kindref="member">ffmpegServerSetH</ref>,<sp/>&amp;seth);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>no-ones<sp/>listening<sp/>and<sp/>we&apos;re<sp/>not<sp/>always<sp/>on<sp/>then<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clients<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>always_on<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;No-one<sp/>listening\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>with<sp/>the<sp/>lock<sp/>taken,<sp/>and<sp/>it<sp/>must<sp/>be<sp/>set<sp/>when<sp/>we<sp/>exit.</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>following<sp/>code<sp/>can<sp/>be<sp/>exected<sp/>without<sp/>the<sp/>mutex<sp/>because<sp/>we<sp/>are<sp/>not<sp/>accessing<sp/>memory</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>other<sp/>threads<sp/>can<sp/>access.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>colormode<sp/>of<sp/>the<sp/>array<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>pAttribute<sp/>=<sp/>pArray-&gt;<ref refid="class_n_d_array_1af5aad7b41118f465621cf045ed957469" kindref="member">pAttributeList</ref>-&gt;<ref refid="class_n_d_attribute_list_1a99aa95cfbd0fe8430a1104e067a0fdaf" kindref="member">find</ref>(</highlight><highlight class="stringliteral">&quot;ColorMode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pAttribute)<sp/>pAttribute-&gt;<ref refid="class_n_d_attribute_1a732db4dc92aa8585089bac924335a9bd" kindref="member">getValue</ref>(<ref refid="_n_d_attribute_8h_1a8a795995acde8458f43ac9b01376ef07a52a96048ab842e5ee55012e5abd38088" kindref="member">NDAttrInt32</ref>,<sp/>&amp;<ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pArray-&gt;<ref refid="class_n_d_array_1a4769c6ebb8275710a58bd88dba086b71" kindref="member">ndims</ref><sp/>==<sp/>2)<sp/>&amp;&amp;<sp/>(<ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>==<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812a7ce7370097e884f4954fc8b3d069a620" kindref="member">NDColorModeMono</ref>))<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/><sp/>=<sp/>(int)<sp/>pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[1].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pArray-&gt;<ref refid="class_n_d_array_1a4769c6ebb8275710a58bd88dba086b71" kindref="member">ndims</ref><sp/>==<sp/>3)<sp/>&amp;&amp;<sp/>(pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref><sp/>==<sp/>3)<sp/>&amp;&amp;<sp/>(<ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>==<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812ab189c5eca6618929ea57f516e3dd5e5d" kindref="member">NDColorModeRGB1</ref>))<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/><sp/>=<sp/>(int)<sp/>pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[1].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[2].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/><sp/>=<sp/>(int)<sp/>pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[1].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>image<sp/>according<sp/>to<sp/>user<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setw<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>seth<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>setw;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>seth;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setw<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sf<sp/>=<sp/>(double)(setw)/width;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>(int)(sf<sp/>*<sp/>height);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>setw;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seth<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sf<sp/>=<sp/>(double)(seth)/height;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>(int)(sf<sp/>*<sp/>width);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>seth;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>exceed<sp/>the<sp/>maximum<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&gt;<sp/>maxw<sp/>||<sp/>height<sp/>&gt;<sp/>maxh)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sf<sp/>=<sp/><ref refid="ffmpeg_server_8cpp_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)maxw)/width,<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)maxh)/height);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>(int)<sp/>(sf<sp/>*<sp/>width);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>(int)<sp/>(sf<sp/>*<sp/>height);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>width<sp/>and<sp/>height<sp/>have<sp/>changed<sp/>then<sp/>reinitialise<sp/>the<sp/>codec<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>NULL<sp/>||<sp/>width<sp/>!=<sp/>c-&gt;width<sp/>||<sp/>height<sp/>!=<sp/>c-&gt;height)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Setting<sp/>width<sp/>%d<sp/>height<sp/>%d\n&quot;,<sp/>width,<sp/>height);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AVRational<sp/>avr;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avr.num<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avr.den<sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>width<sp/>and<sp/>height<sp/>changed,<sp/>close<sp/>old<sp/>codec<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avcodec_close(c);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>av_free(c);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>avcodec_alloc_context3(codec);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>that<sp/>we<sp/>don&apos;t<sp/>try<sp/>and<sp/>create<sp/>an<sp/>image<sp/>smaller<sp/>than<sp/>AV_INPUT_BUFFER_MIN_SIZE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>*<sp/>height<sp/>&lt;<sp/>AV_INPUT_BUFFER_MIN_SIZE)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sf<sp/>=<sp/>sqrt(1.0<sp/>*<sp/>AV_INPUT_BUFFER_MIN_SIZE<sp/>/<sp/>width<sp/>/<sp/>height);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>(int)<sp/>(height<sp/>*<sp/>sf<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height<sp/>%<sp/>32)<sp/>height<sp/>=<sp/>height<sp/>+<sp/>32<sp/>-<sp/>(height<sp/>%<sp/>32);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>(int)<sp/>(width<sp/>*<sp/>sf<sp/>+<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>%<sp/>32)<sp/>width<sp/>=<sp/>width<sp/>+<sp/>32<sp/>-<sp/>(width<sp/>%<sp/>32);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;width<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;height<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;flags<sp/>=<sp/>AV_CODEC_FLAG_QSCALE;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;time_base<sp/>=<sp/>avr;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;pix_fmt<sp/>=<sp/>AV_PIX_FMT_YUVJ420P;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(codec<sp/>&amp;&amp;<sp/>codec-&gt;pix_fmts){</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>AVPixelFormat<sp/>*p=<sp/>codec-&gt;pix_fmts;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>*p!=-1;<sp/>p++){</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*p<sp/>==<sp/>c-&gt;pix_fmt)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*p<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;pix_fmt<sp/>=<sp/>codec-&gt;pix_fmts[0];</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>open<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avcodec_open2(c,<sp/>codec,<sp/>NULL)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>could<sp/>not<sp/>open<sp/>codec\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Override<sp/>codec<sp/>pix_fmt<sp/>to<sp/>get<sp/>rid<sp/>of<sp/>error<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;pix_fmt<sp/>==<sp/>AV_PIX_FMT_YUVJ420P)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;pix_fmt<sp/>=<sp/>AV_PIX_FMT_YUV420P;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;color_range<sp/>=<sp/>AVCOL_RANGE_JPEG;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>width<sp/>*<sp/><sp/>height;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>our<sp/>processed<sp/>array<sp/>is<sp/>big<sp/>enough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;allocScArray(2<sp/>*<sp/>size);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>quality<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>scPicture-&gt;quality<sp/>=<sp/>3276<sp/>-<sp/>(int)<sp/>(quality<sp/>*<sp/>32.76);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scPicture-&gt;quality<sp/>&lt;<sp/>0)<sp/>scPicture-&gt;quality<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scPicture-&gt;quality<sp/>&gt;<sp/>32767)<sp/>scPicture-&gt;quality<sp/>=<sp/>32768;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>format<sp/>the<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ffmpeg_common_8cpp_1ab6f0216aa17760826df4630964370220" kindref="member">formatArray</ref>(pArray,<sp/>this-&gt;pasynUserSelf,<sp/>this-&gt;inPicture,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(this-&gt;ctx),<sp/>this-&gt;c,<sp/>this-&gt;scPicture)<sp/>!=<sp/>asynSuccess)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Could<sp/>not<sp/>format<sp/>array<sp/>for<sp/>correct<sp/>pix_fmt<sp/>for<sp/>codec\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>must<sp/>enter<sp/>the<sp/>loop<sp/>and<sp/>exit<sp/>with<sp/>the<sp/>mutex<sp/>locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;lock();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lock<sp/>the<sp/>output<sp/>plugin<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;this-&gt;mutex);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>the<sp/>last<sp/>jpeg<sp/>created<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;jpeg)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;jpeg-&gt;<ref refid="class_n_d_array_1a0c4c61ea4d44ce97db979d24305c996e" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>it<sp/>to<sp/>a<sp/>jpeg<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;jpeg<sp/>=<sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1ad3969854a37329ef4061cc560e9022dc" kindref="member">pNDArrayPool</ref>-&gt;<ref refid="class_n_d_array_pool_1a26b4360694655c4af6c853c2f3d2ce5e" kindref="member">alloc</ref>(1,<sp/>&amp;size,<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16aa4bc4803d2c1a0073497f0b4b4d2243f" kindref="member">NDInt8</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>AVPacket<sp/>pkt;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>got_output;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>av_init_packet(&amp;pkt);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt.data<sp/>=<sp/>(uint8_t*)this-&gt;jpeg-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>packet<sp/>data<sp/>will<sp/>be<sp/>allocated<sp/>by<sp/>the<sp/>encoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt.size<sp/>=<sp/>c-&gt;width<sp/>*<sp/>c-&gt;height;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needed<sp/>to<sp/>stop<sp/>a<sp/>stream<sp/>of<sp/>&quot;AVFrame.format<sp/>is<sp/>not<sp/>set&quot;<sp/>etc.<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>scPicture-&gt;format<sp/>=<sp/>c-&gt;pix_fmt;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>scPicture-&gt;width<sp/>=<sp/>c-&gt;width;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>scPicture-&gt;height<sp/>=<sp/>c-&gt;height;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(avcodec_encode_video2(c,<sp/>&amp;pkt,<sp/>scPicture,<sp/>&amp;got_output))<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Encoding<sp/>jpeg<sp/>failed\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>got_output<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>got_output<sp/>is<sp/>undefined<sp/>on<sp/>error,<sp/>so<sp/>explicitly<sp/>set<sp/>it<sp/>for<sp/>use<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(got_output)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;jpeg-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref><sp/>=<sp/>pkt.size;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>av_packet_unref(&amp;pkt);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Frame!<sp/>Size:<sp/>%d\n&quot;,<sp/>this-&gt;jpeg-&gt;dims[0].size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>signal<sp/>fresh_frame<sp/>to<sp/>output<sp/>plugin<sp/>and<sp/>unlock<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a2d615a786dca9452d48dbdda393af55d" kindref="member">server_maxconn</ref>;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_signal(&amp;(this-&gt;cond[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]));</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;this-&gt;mutex);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>must<sp/>enter<sp/>the<sp/>loop<sp/>and<sp/>exit<sp/>with<sp/>the<sp/>mutex<sp/>locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>parameters.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks(0,<sp/>0);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>gettimeofday(&amp;end,<sp/>NULL);<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>difftime<sp/>=<sp/>(end.tv_usec<sp/>-<sp/>start.tv_usec)<sp/>*<sp/>0.000001<sp/>+<sp/>end.tv_sec<sp/>-<sp/>start.tv_sec;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(difftime<sp/>&gt;<sp/>0.1)<sp/>printf<sp/>(&quot;It<sp/>took<sp/>%.2lf<sp/>seconds<sp/>to<sp/>process<sp/>callbacks.<sp/>That&apos;s<sp/>a<sp/>bit<sp/>slow\n&quot;,<sp/>difftime);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><ref refid="classffmpeg_stream_1ae555592f661e8645f501df400864ce5d" kindref="member">ffmpegStream::ffmpegStream</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queueSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockingCallbacks,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*NDArrayPort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NDArrayAddr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invoke<sp/>the<sp/>base<sp/>class<sp/>constructor</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>autoconnect<sp/>to<sp/>1.<sp/><sp/>priority<sp/>can<sp/>be<sp/>0,<sp/>which<sp/>will<sp/>use<sp/>defaults.<sp/></highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>require<sp/>a<sp/>minimum<sp/>stacksize<sp/>of<sp/>128k<sp/>for<sp/>windows-x64<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_n_d_plugin_driver" kindref="compound">NDPluginDriver</ref>(portName,<sp/>queueSize,<sp/>blockingCallbacks,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NDArrayPort,<sp/>NDArrayAddr,<sp/>1,<sp/>maxBuffers,<sp/>maxMemory,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynGenericPointerMask,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynGenericPointerMask,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>priority,<sp/>stackSize<sp/>&lt;<sp/>128000<sp/>?<sp/>128000<sp/>:<sp/>stackSize,<sp/>1)<sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>ASYN_CANBLOCK<sp/>or<sp/>ASYN_MULTIDEVICE,<sp/>do<sp/>autoConnect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>host[64]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>url[256]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;jpeg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;nclients<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;c<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;codec<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;inPicture<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scPicture<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ctx<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cond<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>some<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="ffmpeg_server_8h_1ada8e2fc61d7c7473df012158fe20757d" kindref="member">ffmpegServerQualityString</ref>,<sp/><sp/>asynParamInt32,<sp/>&amp;ffmpegServerQuality);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="ffmpeg_server_8h_1a93192932ddb35b638de6fb8e8d00502b" kindref="member">ffmpegServerFalseColString</ref>,<sp/>asynParamInt32,<sp/>&amp;ffmpegServerFalseCol);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="ffmpeg_server_8h_1ad29cdbe58cc31ead87a20f4a175ba0d3" kindref="member">ffmpegServerHttpPortString</ref>,<sp/>asynParamInt32,<sp/>&amp;ffmpegServerHttpPort);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="ffmpeg_server_8h_1a7d341dd09469d377404c31f580afbfba" kindref="member">ffmpegServerHostString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ffmpegServerHost);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="ffmpeg_server_8h_1a8fef7cd316fdc83330ed34b25401a7b8" kindref="member">ffmpegServerJpgUrlString</ref>,<sp/><sp/><sp/>asynParamOctet,<sp/>&amp;ffmpegServerJpgUrl);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="ffmpeg_server_8h_1ae3a523f007f3f10cd81010f679d0f4cf" kindref="member">ffmpegServerMjpgUrlString</ref>,<sp/><sp/>asynParamOctet,<sp/>&amp;ffmpegServerMjpgUrl);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="ffmpeg_server_8h_1a9dad05aa2b8aa44ccbd0a79eeae046cc" kindref="member">ffmpegServerClientsString</ref>,<sp/><sp/>asynParamInt32,<sp/>&amp;ffmpegServerClients);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="ffmpeg_server_8h_1a8469bafe7eb09d3269e507c49ee81f29" kindref="member">ffmpegServerAlwaysOnString</ref>,<sp/>asynParamInt32,<sp/>&amp;ffmpegServerAlwaysOn);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="ffmpeg_server_8h_1aa76e374e8dabfd350f627121f3781026" kindref="member">ffmpegServerMaxWString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ffmpegServerMaxW);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="ffmpeg_server_8h_1ac9969134468c657849aa488e72eeafd2" kindref="member">ffmpegServerMaxHString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ffmpegServerMaxH);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="ffmpeg_server_8h_1a233c5d8e725a6e4e0e0515fbebcfedea" kindref="member">ffmpegServerSetWString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ffmpegServerSetW);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="ffmpeg_server_8h_1af2baa7c72fcb53739f4d0392d9979d4d" kindref="member">ffmpegServerSetHString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;ffmpegServerSetH);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>connect<sp/>to<sp/>the<sp/>NDArray<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>connectToArrayPort();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>initial<sp/>values<sp/>of<sp/>some<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(0,<sp/>ffmpegServerHttpPort,<sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a37ac1475af32ae6c18601f83611ed341" kindref="member">server_port</ref>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(0,<sp/>ffmpegServerClients,<sp/>0);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>plugin<sp/>type<sp/>string<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(NDPluginDriverPluginType,<sp/></highlight><highlight class="stringliteral">&quot;ffmpegServer&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>hostname<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>gethostname(host,<sp/>64);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ffmpegServerHost,<sp/>host);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(url,<sp/></highlight><highlight class="stringliteral">&quot;http://%s:%d/%s.jpg&quot;</highlight><highlight class="normal">,<sp/>host,<sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a37ac1475af32ae6c18601f83611ed341" kindref="member">server_port</ref>,<sp/>portName);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ffmpegServerJpgUrl,<sp/>url);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(url,<sp/></highlight><highlight class="stringliteral">&quot;http://%s:%d/%s.mjpg&quot;</highlight><highlight class="normal">,<sp/>host,<sp/><ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a37ac1475af32ae6c18601f83611ed341" kindref="member">server_port</ref>,<sp/>portName);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ffmpegServerMjpgUrl,<sp/>url);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialise<sp/>the<sp/>ffmpeg<sp/>library<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ffmpeg_common_8cpp_1adfbd5f55a740c1d8aa175847169acd67" kindref="member">ffmpegInitialise</ref>();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>the<sp/>input<sp/>and<sp/>output<sp/>pictures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>inPicture<sp/>=<sp/>av_frame_alloc();</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>scPicture<sp/>=<sp/>av_frame_alloc();</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Setup<sp/>correct<sp/>codec<sp/>for<sp/>mjpeg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>codec<sp/>=<sp/>avcodec_find_encoder(AV_CODEC_ID_MJPEG);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!codec)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;MJPG<sp/>codec<sp/>not<sp/>found\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>mutex<sp/>and<sp/>the<sp/>conditional<sp/>variable<sp/>are<sp/>used<sp/>to<sp/>synchronize<sp/>access<sp/>to<sp/>the<sp/>global<sp/>picture<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_init(&amp;(this-&gt;<ref refid="aravis_test_8c_1a0a3a44172cbb1c18e7f52a9437a1693d" kindref="member">mutex</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cond<sp/>=<sp/>(pthread_cond_t<sp/>*)<sp/>calloc(<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a2d615a786dca9452d48dbdda393af55d" kindref="member">server_maxconn</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pthread_cond_t));</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="nullhttpd_8h_1ac72f0ddb88146ec79385cf0a0bdb3f27" kindref="member">config</ref>.<ref refid="struct_c_o_n_f_i_g_1a2d615a786dca9452d48dbdda393af55d" kindref="member">server_maxconn</ref>;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_init(&amp;(this-&gt;cond[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]),<sp/>NULL);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_server_8cpp_1a5722f6e9a3c9d46f3ea81917b369ab0f" kindref="member">ffmpegStreamConfigure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queueSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockingCallbacks,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*NDArrayPort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NDArrayAddr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nstreams+1<sp/>&gt;<sp/><ref refid="ffmpeg_server_8h_1a297bc9dca0006b1b8651ee863ac4b077" kindref="member">MAX_FFMPEG_STREAMS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s:ffmpegStreamConfigure:<sp/>Can<sp/>only<sp/>create<sp/>%d<sp/>streams\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/><ref refid="ffmpeg_server_8h_1a297bc9dca0006b1b8651ee863ac4b077" kindref="member">MAX_FFMPEG_STREAMS</ref>);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classffmpeg_stream" kindref="compound">ffmpegStream</ref><sp/>*pPlugin<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classffmpeg_stream" kindref="compound">ffmpegStream</ref>(portName,<sp/>queueSize,<sp/>blockingCallbacks,<sp/>NDArrayPort,<sp/>NDArrayAddr,<sp/>maxBuffers,<sp/>maxMemory,<sp/>priority,<sp/>stackSize);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>pPlugin-&gt;<ref refid="class_n_d_plugin_driver_1a085bcf8d331f7dedac92af07c94b2d15" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>streams[nstreams++]<sp/>=<sp/>pPlugin;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynSuccess);</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EPICS<sp/>iocsh<sp/>shell<sp/>commands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>streamArg0<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;portName&quot;</highlight><highlight class="normal">,iocshArgString};</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>streamArg1<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;frame<sp/>queue<sp/>size&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>streamArg2<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;blocking<sp/>callbacks&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>streamArg3<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;NDArray<sp/>Port&quot;</highlight><highlight class="normal">,iocshArgString};</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>streamArg4<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;NDArray<sp/>Addr&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>streamArg5<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>Buffers&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>streamArg6<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>memory&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>streamArg7<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;priority&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>streamArg8<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;stackSize&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>streamArgs[]<sp/>=<sp/>{&amp;streamArg0,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;streamArg1,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;streamArg2,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;streamArg3,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;streamArg4,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;streamArg5,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;streamArg6,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;streamArg7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;streamArg8};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshFuncDef<sp/>streamFuncDef<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ffmpegStreamConfigure&quot;</highlight><highlight class="normal">,9,streamArgs};</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>streamCallFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArgBuf<sp/>*<ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>)</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ffmpeg_server_8cpp_1a5722f6e9a3c9d46f3ea81917b369ab0f" kindref="member">ffmpegStreamConfigure</ref>(<ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[0].sval,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[1].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[2].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[3].sval,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[4].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[5].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[6].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[7].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[8].ival);</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>serverArg0<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Http<sp/>Port&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>serverArg1<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Network<sp/>Interface&quot;</highlight><highlight class="normal">,<sp/>iocshArgString};</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>serverArgs[]<sp/>=<sp/>{&amp;serverArg0,<sp/>&amp;serverArg1};</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshFuncDef<sp/>serverFuncDef<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ffmpegServerConfigure&quot;</highlight><highlight class="normal">,2,serverArgs};</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serverCallFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArgBuf<sp/>*<ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[1].sval<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ffmpeg_server_8cpp_1a792477deebc3288a3ec478704aa8eb68" kindref="member">ffmpegServerConfigure</ref>(<ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[0].ival,<sp/></highlight><highlight class="stringliteral">&quot;any&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ffmpeg_server_8cpp_1a792477deebc3288a3ec478704aa8eb68" kindref="member">ffmpegServerConfigure</ref>(<ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[0].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[1].sval);</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_server_8cpp_1a0c7eb7c29ce7b6a4161d4dc078179caf" kindref="member">ffmpegServerRegister</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>iocshRegister(&amp;streamFuncDef,streamCallFunc);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>iocshRegister(&amp;serverFuncDef,serverCallFunc);</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><ref refid="ffmpeg_server_8cpp_1ac0d78a805fe1e161ee0e0788e6b45cfe" kindref="member">epicsExportRegistrar</ref>(<ref refid="ffmpeg_server_8cpp_1a0c7eb7c29ce7b6a4161d4dc078179caf" kindref="member">ffmpegServerRegister</ref>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ffmpegServer/ffmpegServerApp/src/ffmpegServer.cpp"/>
  </compounddef>
</doxygen>
