<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_n_d_plugin_edge_8cpp" kind="file" language="C++">
    <compoundname>NDPluginEdge.cpp</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">epicsString.h</includes>
    <includes local="no">epicsMutex.h</includes>
    <includes local="no">iocsh.h</includes>
    <includes refid="_n_d_array_8h" local="yes">NDArray.h</includes>
    <includes refid="_n_d_plugin_edge_8h" local="yes">NDPluginEdge.h</includes>
    <includes local="no">epicsExport.h</includes>
    <includes local="no">opencv2/opencv.hpp</includes>
    <incdepgraph>
      <node id="17">
        <label>ADCoreAPI.h</label>
        <link refid="_a_d_core_a_p_i_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ADCoreVersion.h</label>
        <link refid="_a_d_core_version_8h"/>
      </node>
      <node id="20">
        <label>Codec.h</label>
        <link refid="_codec_8h"/>
      </node>
      <node id="9">
        <label>NDArray.h</label>
        <link refid="_n_d_array_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>NDAttribute.h</label>
        <link refid="_n_d_attribute_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>NDAttributeList.h</label>
        <link refid="_n_d_attribute_list_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>asynNDArrayDriver.h</label>
        <link refid="asyn_n_d_array_driver_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>NDPluginAPI.h</label>
        <link refid="_n_d_plugin_a_p_i_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>NDPluginDriver.h</label>
        <link refid="_n_d_plugin_driver_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp</label>
        <link refid="_n_d_plugin_edge_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>NDPluginEdge.h</label>
        <link refid="_n_d_plugin_edge_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>asynDriver.h</label>
      </node>
      <node id="28">
        <label>asynPortDriver.h</label>
      </node>
      <node id="12">
        <label>ellLib.h</label>
      </node>
      <node id="27">
        <label>epicsEvent.h</label>
      </node>
      <node id="30">
        <label>epicsExport.h</label>
      </node>
      <node id="23">
        <label>epicsMessageQueue.h</label>
      </node>
      <node id="7">
        <label>epicsMutex.h</label>
      </node>
      <node id="6">
        <label>epicsString.h</label>
      </node>
      <node id="24">
        <label>epicsThread.h</label>
      </node>
      <node id="11">
        <label>epicsTime.h</label>
      </node>
      <node id="15">
        <label>epicsTypes.h</label>
      </node>
      <node id="18">
        <label>epicsVersion.h</label>
      </node>
      <node id="8">
        <label>iocsh.h</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="31">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="10">
        <label>set</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_n_d_plugin_edge_8cpp_1af0e94d13028051cd5339d204bfbb057d" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* driverName</definition>
        <argsstring></argsstring>
        <name>driverName</name>
        <initializer>=&quot;NDPluginEdge&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="25" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_edge_8cpp_1a13021e744179110a6114bf84e9d47f32" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg0</definition>
        <argsstring></argsstring>
        <name>initArg0</name>
        <initializer>= { &quot;portName&quot;,iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="340" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="340" bodyend="340"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_edge_8cpp_1a85f312f39f3c368a5fa10d1039dc40b2" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg1</definition>
        <argsstring></argsstring>
        <name>initArg1</name>
        <initializer>= { &quot;frame queue size&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="341" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="341" bodyend="341"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_edge_8cpp_1a645a7d7d0d71a7522373e2af4008b520" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg2</definition>
        <argsstring></argsstring>
        <name>initArg2</name>
        <initializer>= { &quot;blocking callbacks&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="342" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="342" bodyend="342"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_edge_8cpp_1aaa425474fd6655fa6347e1933b29038a" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg3</definition>
        <argsstring></argsstring>
        <name>initArg3</name>
        <initializer>= { &quot;NDArrayPort&quot;,iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="343" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="343" bodyend="343"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_edge_8cpp_1a945c4d0bc0e2bc869aeaf5c6a815368a" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg4</definition>
        <argsstring></argsstring>
        <name>initArg4</name>
        <initializer>= { &quot;NDArrayAddr&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="344" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="344" bodyend="344"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_edge_8cpp_1ac7e214be38a3b3bface5e0370ae97db0" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg5</definition>
        <argsstring></argsstring>
        <name>initArg5</name>
        <initializer>= { &quot;maxBuffers&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="345" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="345" bodyend="345"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_edge_8cpp_1a43397205694aec859f3b5cb14a85edc3" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg6</definition>
        <argsstring></argsstring>
        <name>initArg6</name>
        <initializer>= { &quot;maxMemory&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="346" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="346" bodyend="346"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_edge_8cpp_1a36049b095d9ed1f56a41821a2c8fc661" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg7</definition>
        <argsstring></argsstring>
        <name>initArg7</name>
        <initializer>= { &quot;priority&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="347" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="347" bodyend="347"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_edge_8cpp_1a62a0c5258a2c1049720be5c31729f76d" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg8</definition>
        <argsstring></argsstring>
        <name>initArg8</name>
        <initializer>= { &quot;stackSize&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="348" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="348" bodyend="348"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_edge_8cpp_1ac0d7f455ac7138e5bcb473b630294718" prot="public" static="yes" mutable="no">
        <type>const iocshArg *const</type>
        <definition>const iocshArg* const initArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>initArgs</name>
        <initializer>= {&amp;initArg0,
  &amp;initArg1,
  &amp;initArg2,
  &amp;initArg3,
  &amp;initArg4,
  &amp;initArg5,
  &amp;initArg6,
  &amp;initArg7,
  &amp;initArg8}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="349" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="349" bodyend="357"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_edge_8cpp_1a469a3ecf9fff33f8f388acddffc8db6a" prot="public" static="yes" mutable="no">
        <type>const iocshFuncDef</type>
        <definition>const iocshFuncDef initFuncDef</definition>
        <argsstring></argsstring>
        <name>initFuncDef</name>
        <initializer>= {&quot;NDEdgeConfigure&quot;,9,initArgs}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="358" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="358" bodyend="358"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_n_d_plugin_edge_8cpp_1add4793cbb28c93231a75eb51a5edd1d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NDEdgeConfigure</definition>
        <argsstring>(const char *portName, int queueSize, int blockingCallbacks, const char *NDArrayPort, int NDArrayAddr, int maxBuffers, size_t maxMemory, int priority, int stackSize)</argsstring>
        <name>NDEdgeConfigure</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>queueSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blockingCallbacks</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>NDArrayPort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NDArrayAddr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxBuffers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxMemory</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stackSize</declname>
        </param>
        <briefdescription>
<para>Configuration command. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="329" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="329" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="_n_d_plugin_edge_8cpp_1aeeec53c20b81d2e7f49be49509087df5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void initCallFunc</definition>
        <argsstring>(const iocshArgBuf *args)</argsstring>
        <name>initCallFunc</name>
        <param>
          <type>const iocshArgBuf *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="359" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="359" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="_n_d_plugin_edge_8cpp_1a597ade848bd7c3fd4b3220dbb5a48f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NDEdgeRegister</definition>
        <argsstring>(void)</argsstring>
        <name>NDEdgeRegister</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="366" column="17" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" bodystart="366" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="_n_d_plugin_edge_8cpp_1ae91dacc6ce1770f59af86458694d3387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>epicsExportRegistrar</definition>
        <argsstring>(NDEdgeRegister)</argsstring>
        <name>epicsExportRegistrar</name>
        <param>
          <type><ref refid="_n_d_plugin_edge_8cpp_1a597ade848bd7c3fd4b3220dbb5a48f72" kindref="member">NDEdgeRegister</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" line="372" column="3" declfile="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp" declline="372" declcolumn="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>NDPluginEdge.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Image<sp/>processing<sp/>plugin</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Keith<sp/>Brister</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Created<sp/>November<sp/>10,<sp/>2014</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsString.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsMutex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iocsh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_n_d_array_8h" kindref="compound">NDArray.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_n_d_plugin_edge_8h" kindref="compound">NDPluginEdge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsExport.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/opencv.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*driverName=</highlight><highlight class="stringliteral">&quot;NDPluginEdge&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_d_plugin_edge_1a1c2d16c28609a91b4ccd0f414244c17c" kindref="member">NDPluginEdge::processCallbacks</ref>(<ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pArray)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>does<sp/>array<sp/>processing.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/>*<sp/>It<sp/>is<sp/>called<sp/>with<sp/>the<sp/>mutex<sp/>already<sp/>locked.<sp/><sp/>It<sp/>unlocks<sp/>it<sp/>during<sp/>long<sp/>calculations<sp/>when<sp/>private</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/>*<sp/>structures<sp/>don&apos;t<sp/>need<sp/>to<sp/>be<sp/>protected.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pScratch=NULL;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="struct_n_d_array_info" kindref="compound">NDArrayInfo</ref><sp/>arrayInfo;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows,<sp/>rowSize;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*inData,<sp/>*outData;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge1Found;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge2;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge2Found;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowThreshold;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thresholdRatio;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;processCallbacks&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>getDoubleParam(<sp/><ref refid="class_n_d_plugin_edge_1aa4a4737c94129f1e2c1257fede76630f" kindref="member">NDPluginEdgeLowThreshold</ref>,<sp/><sp/><sp/>&amp;lowThreshold);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>getDoubleParam(<sp/><ref refid="class_n_d_plugin_edge_1aec3237957fb6f5ef2eac31b8e2cd07df" kindref="member">NDPluginEdgeThresholdRatio</ref>,<sp/>&amp;thresholdRatio);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mono<sp/>image<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pArray-&gt;<ref refid="class_n_d_array_1a4769c6ebb8275710a58bd88dba086b71" kindref="member">ndims</ref><sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pasynUserSelf,<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>Please<sp/>convert<sp/>edge<sp/>detection<sp/>plugin<sp/>input<sp/>image<sp/>format<sp/>to<sp/>mono\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functionName);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>base<sp/>class<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="class_n_d_plugin_driver_1a1aef91c358b7b8bde97fc1a01eb7c00d" kindref="member">NDPluginDriver::beginProcessCallbacks</ref>(pArray);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>pArray-&gt;<ref refid="class_n_d_array_1a47af97c0e2b8255d756207908f6b470d" kindref="member">getInfo</ref>(&amp;arrayInfo);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>rowSize<sp/>=<sp/>pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[arrayInfo.<ref refid="struct_n_d_array_info_1a0e5adfa5cbd756a03a03f091e1f853ba" kindref="member">xDim</ref>].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>numRows<sp/>=<sp/>pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[arrayInfo.<ref refid="struct_n_d_array_info_1add899f2a712bd6ce7b15ff8bb81a29b5" kindref="member">yDim</ref>].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>the<sp/>computationally<sp/>expensive<sp/>code<sp/>with<sp/>the<sp/>lock<sp/>released<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>plugin<sp/>works<sp/>on<sp/>a<sp/>monochromatic<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="struct_n_d_dimension" kindref="compound">NDDimension_t</ref><sp/>scratch_dims[2];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>pScratch-&gt;<ref refid="class_n_d_array_1affa0ec5a16b9fd4288aa28cc80ab8d3d" kindref="member">initDimension</ref>(&amp;scratch_dims[0],<sp/>rowSize);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>pScratch-&gt;<ref refid="class_n_d_array_1affa0ec5a16b9fd4288aa28cc80ab8d3d" kindref="member">initDimension</ref>(&amp;scratch_dims[1],<sp/>numRows);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>the<sp/>array<sp/>something<sp/>we<sp/>understand<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1ad3969854a37329ef4061cc560e9022dc" kindref="member">pNDArrayPool</ref>-&gt;<ref refid="class_n_d_array_pool_1ade048931af82929ee2d0a33fcc5c5fea" kindref="member">convert</ref>(<sp/>pArray,<sp/>&amp;pScratch,<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16aa5f7c86d8f7853be5eb27c00481f93de" kindref="member">NDUInt8</ref>,<sp/>scratch_dims);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>pScratch-&gt;<ref refid="class_n_d_array_1a47af97c0e2b8255d756207908f6b470d" kindref="member">getInfo</ref>(&amp;arrayInfo);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>rowSize<sp/>=<sp/>pScratch-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[arrayInfo.<ref refid="struct_n_d_array_info_1a0e5adfa5cbd756a03a03f091e1f853ba" kindref="member">xDim</ref>].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>numRows<sp/>=<sp/>pScratch-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[arrayInfo.<ref refid="struct_n_d_array_info_1add899f2a712bd6ce7b15ff8bb81a29b5" kindref="member">yDim</ref>].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>img<sp/>=<sp/>cv::Mat(<sp/>numRows,<sp/>rowSize,<sp/>CV_8UC1);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>detected_edges;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>output<sp/>data<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>inData<sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pScratch-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>outData<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)img.data;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>memcpy(<sp/>outData,<sp/>inData,<sp/>arrayInfo.<ref refid="struct_n_d_array_info_1a60783541b9eda5a6222e5cdad797c387" kindref="member">nElements</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>suggested<sp/>in<sp/>the<sp/>openCV<sp/>examples,<sp/>first<sp/>slightly<sp/>blur<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::blur(<sp/>img,<sp/>detected_edges,<sp/>cv::Size(3,3));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<sp/>cv::Exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>err_msg<sp/>=<sp/>e.what();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>cv::blur<sp/>exception:<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>err_msg);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>is<sp/>the<sp/>edge<sp/>detection<sp/>routine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Canny(<sp/>detected_edges,<sp/>detected_edges,<sp/>lowThreshold,<sp/>thresholdRatio<sp/>*<sp/>lowThreshold,<sp/>3);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<sp/>cv::Exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>err_msg<sp/>=<sp/>e.what();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>cv::Canny<sp/>exception:<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>err_msg);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>the<sp/>lock<sp/>again<sp/>since<sp/>we<sp/>are<sp/>accessing<sp/>the<sp/>parameter<sp/>library<sp/>and<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>calculations<sp/>are<sp/>not<sp/>time<sp/>consuming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>find<sp/>the<sp/>top<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>j<sp/>=<sp/>rowSize/2;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>edge1Found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>edge2Found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>outData<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)detected_edges.data;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)i&lt;numRows;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*(outData<sp/>+<sp/>i*rowSize<sp/>+<sp/>j)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge1Found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>edge1<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1a4ed2dd2fc28f134087e89fc172df8188" kindref="member">NDPluginEdgeTopEdgeFound</ref>,<sp/>edge1Found);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>edge1Found)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1a00a14f582209661a4a27c680a6306b68" kindref="member">NDPluginEdgeTopPixel</ref>,<sp/>edge1);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Maybe<sp/>find<sp/>the<sp/>bottom<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=numRows<sp/>-<sp/>1;<sp/>i&gt;=0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*(outData<sp/>+<sp/>i*rowSize<sp/>+<sp/>j)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge2Found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>edge2<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1a74cccb35c8562b5862de8ba989af0414" kindref="member">NDPluginEdgeBottomEdgeFound</ref>,<sp/>edge2Found);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>edge2Found)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1adecc68cc1c1d0befa4a71deb6ab65b9a" kindref="member">NDPluginEdgeBottomPixel</ref>,<sp/>edge2);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>edge1Found<sp/>&amp;&amp;<sp/>edge2Found<sp/>&amp;&amp;<sp/>edge1<sp/>&lt;<sp/>edge2)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>edges<sp/>found<sp/>and<sp/>they<sp/>are<sp/>not<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1a208532a557e5ae2aa2dfd2f598fefc52" kindref="member">NDPluginEdgeVerticalFound</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<sp/><ref refid="class_n_d_plugin_edge_1a74260ef7b2ea7fb7399c0418eab10da6" kindref="member">NDPluginEdgeVerticalCenter</ref>,<sp/>(edge1<sp/>+<sp/>edge2)/2.0);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><sp/><sp/><sp/><ref refid="class_n_d_plugin_edge_1a69fe1516343f2245bb498d2528785dfe" kindref="member">NDPluginEdgeVerticalSize</ref>,<sp/>edge2<sp/>-<sp/>edge1);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>edge<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1a208532a557e5ae2aa2dfd2f598fefc52" kindref="member">NDPluginEdgeVerticalFound</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>Left<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>numRows/2;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>edge1Found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>edge2Found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j=0;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)j&lt;rowSize;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*(outData<sp/>+<sp/>i*rowSize<sp/>+<sp/>j)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge1Found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>edge1<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1a07c6c00ff3c2a35e75ccedf1d15b14be" kindref="member">NDPluginEdgeLeftEdgeFound</ref>,<sp/>edge1Found);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>edge1Found)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1aca4d259f6a064bca51bb87dd483151f6" kindref="member">NDPluginEdgeLeftPixel</ref>,<sp/>edge1);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Maybe<sp/>find<sp/>right<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j=rowSize-1;<sp/>j&gt;=0;<sp/>j--)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*(outData<sp/>+<sp/>i*rowSize<sp/>+<sp/>j)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge2Found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>edge2<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1a210f46321e07169695f4b2b9284f8de7" kindref="member">NDPluginEdgeRightEdgeFound</ref>,<sp/>edge2Found);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>edge2Found)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1aae3583d3b64bba67e3575b47333f2c06" kindref="member">NDPluginEdgeRightPixel</ref>,<sp/>edge2);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>edge1Found<sp/>&amp;&amp;<sp/>edge2Found<sp/>&amp;&amp;<sp/>edge1<sp/>&lt;<sp/>edge2)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1acd0932f73cabbcfe876d13827b71cecc" kindref="member">NDPluginEdgeHorizontalFound</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<sp/><ref refid="class_n_d_plugin_edge_1a6062f29dd27d92fff52ce9b9fd73073f" kindref="member">NDPluginEdgeHorizontalCenter</ref>,<sp/>(edge1<sp/>+<sp/>edge2)/2.0);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1ad2592fcea8bcc674a4b3ef0aa87e396e" kindref="member">NDPluginEdgeHorizontalSize</ref>,<sp/>edge2<sp/>-<sp/>edge1);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>edge<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<sp/><ref refid="class_n_d_plugin_edge_1acd0932f73cabbcfe876d13827b71cecc" kindref="member">NDPluginEdgeHorizontalFound</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arrayCallbacks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1af2354f73acece6ee2427f5069b16fdb5" kindref="member">NDArrayCallbacks</ref>,<sp/>&amp;arrayCallbacks);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arrayCallbacks<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>inData<sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)detected_edges.data;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>outData<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pScratch-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(outData,<sp/>inData,<sp/>arrayInfo.<ref refid="struct_n_d_array_info_1a60783541b9eda5a6222e5cdad797c387" kindref="member">nElements</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="class_n_d_plugin_driver_1ad2a1210161a2f542f347482aa93f3797" kindref="member">endProcessCallbacks</ref>(pScratch,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp value="12"/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><ref refid="class_n_d_plugin_edge_1a4d3f8d4c0e6075b8aedf26ca6d05d284" kindref="member">NDPluginEdge::NDPluginEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queueSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockingCallbacks,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*NDArrayPort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NDArrayAddr,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invoke<sp/>the<sp/>base<sp/>class<sp/>constructor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="class_n_d_plugin_driver" kindref="compound">NDPluginDriver</ref>(portName,<sp/>queueSize,<sp/>blockingCallbacks,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NDArrayPort,<sp/>NDArrayAddr,<sp/>1,<sp/>maxBuffers,<sp/>maxMemory,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asynInt32ArrayMask<sp/>|<sp/>asynFloat64ArrayMask<sp/>|<sp/>asynGenericPointerMask,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asynInt32ArrayMask<sp/>|<sp/>asynFloat64ArrayMask<sp/>|<sp/>asynGenericPointerMask,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>priority,<sp/>stackSize,<sp/>1)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>versionString[20];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//static<sp/>const<sp/>char<sp/>*functionName<sp/>=<sp/>&quot;NDPluginEdge&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1a7f87d796cc4ae8fe6ac358e70361a39d" kindref="member">NDPluginEdgeLowThresholdString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/>&amp;NDPluginEdgeLowThreshold);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1ab56ecca74eeea6a18799a3cef019bc22" kindref="member">NDPluginEdgeThresholdRatioString</ref>,<sp/><sp/><sp/>asynParamFloat64,<sp/><sp/>&amp;NDPluginEdgeThresholdRatio);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1ac077abaf8d2dc69e13967d439ab67443" kindref="member">NDPluginEdgeVerticalFoundString</ref>,<sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;NDPluginEdgeVerticalFound);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1a151e9d81618b86f39c1debf7a767cabc" kindref="member">NDPluginEdgeTopEdgeFoundString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;NDPluginEdgeTopEdgeFound);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1ac70ff6494f433b469698037d1d7c303b" kindref="member">NDPluginEdgeTopPixelString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;NDPluginEdgeTopPixel);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1a19fb38018afdbc691de89373e593ff9a" kindref="member">NDPluginEdgeBottomEdgeFoundString</ref>,<sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;NDPluginEdgeBottomEdgeFound);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1aee193ab1897f2fe9a7071ba142e42fb0" kindref="member">NDPluginEdgeBottomPixelString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;NDPluginEdgeBottomPixel);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1aabece6abac5c10fcfad2a23cae9da4cf" kindref="member">NDPluginEdgeVerticalCenterString</ref>,<sp/><sp/><sp/>asynParamFloat64,<sp/><sp/>&amp;NDPluginEdgeVerticalCenter);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1a1d04eeac59221628eca654d2e6964adb" kindref="member">NDPluginEdgeVerticalSizeString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;NDPluginEdgeVerticalSize);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1af9f51f4f98bd1d757da2272cd4ab7488" kindref="member">NDPluginEdgeHorizontalFoundString</ref>,<sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;NDPluginEdgeHorizontalFound);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1a2553a1eeece47c6289579ebbf83b4d6c" kindref="member">NDPluginEdgeLeftEdgeFoundString</ref>,<sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;NDPluginEdgeLeftEdgeFound);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1a856e8f9a434e33e1785fd4f18ab13041" kindref="member">NDPluginEdgeLeftPixelString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;NDPluginEdgeLeftPixel);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1a58409833c754e1a662b7105b9153eb16" kindref="member">NDPluginEdgeRightEdgeFoundString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;NDPluginEdgeRightEdgeFound);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1ab09b6366c528cfe6975a8c8ff5600863" kindref="member">NDPluginEdgeRightPixelString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;NDPluginEdgeRightPixel);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1ad2d96101c48a89652c974a56f067b0f1" kindref="member">NDPluginEdgeHorizontalCenterString</ref>,<sp/>asynParamFloat64,<sp/><sp/>&amp;NDPluginEdgeHorizontalCenter);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>createParam(<sp/><ref refid="_n_d_plugin_edge_8h_1a269262e21aeb693d39de5cfa67018ee2" kindref="member">NDPluginEdgeHorizontalSizeString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/>&amp;NDPluginEdgeHorizontalSize);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>plugin<sp/>type<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>setStringParam(NDPluginDriverPluginType,<sp/></highlight><highlight class="stringliteral">&quot;NDPluginEdge&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>epicsSnprintf(versionString,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(versionString),<sp/></highlight><highlight class="stringliteral">&quot;%d.%d.%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_plugin_edge_8h_1a9f59328134209d115699d9f89a5191b6" kindref="member">EDGE_VERSION</ref>,<sp/><ref refid="_n_d_plugin_edge_8h_1a326a11f478528bb9454eecbdfcc7c7e9" kindref="member">EDGE_REVISION</ref>,<sp/><ref refid="_n_d_plugin_edge_8h_1a0a1c9897eb62809826698b2e6f2a25c5" kindref="member">EDGE_MODIFICATION</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>setStringParam(NDDriverVersion,<sp/>versionString);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>connect<sp/>to<sp/>the<sp/>array<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>connectToArrayPort();</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_n_d_plugin_edge_8cpp_1add4793cbb28c93231a75eb51a5edd1d8" kindref="member">NDEdgeConfigure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queueSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockingCallbacks,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*NDArrayPort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NDArrayAddr,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="class_n_d_plugin_edge" kindref="compound">NDPluginEdge</ref><sp/>*pPlugin<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_n_d_plugin_edge" kindref="compound">NDPluginEdge</ref>(portName,<sp/>queueSize,<sp/>blockingCallbacks,<sp/>NDArrayPort,<sp/>NDArrayAddr,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxBuffers,<sp/>maxMemory,<sp/>priority,<sp/>stackSize);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pPlugin-&gt;<ref refid="class_n_d_plugin_driver_1a085bcf8d331f7dedac92af07c94b2d15" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EPICS<sp/>iocsh<sp/>shell<sp/>commands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg0<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;portName&quot;</highlight><highlight class="normal">,iocshArgString};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg1<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;frame<sp/>queue<sp/>size&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg2<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;blocking<sp/>callbacks&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg3<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;NDArrayPort&quot;</highlight><highlight class="normal">,iocshArgString};</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg4<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;NDArrayAddr&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg5<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;maxBuffers&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg6<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;maxMemory&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg7<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;priority&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg8<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;stackSize&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>initArgs[]<sp/>=<sp/>{&amp;initArg0,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>&amp;initArg1,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>&amp;initArg2,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>&amp;initArg3,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>&amp;initArg4,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>&amp;initArg5,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>&amp;initArg6,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>&amp;initArg7,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>&amp;initArg8};</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshFuncDef<sp/>initFuncDef<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;NDEdgeConfigure&quot;</highlight><highlight class="normal">,9,initArgs};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initCallFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArgBuf<sp/>*args)</highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><ref refid="_n_d_plugin_edge_8cpp_1add4793cbb28c93231a75eb51a5edd1d8" kindref="member">NDEdgeConfigure</ref>(args[0].sval,<sp/>args[1].ival,<sp/>args[2].ival,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args[3].sval,<sp/>args[4].ival,<sp/>args[5].ival,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args[6].ival,<sp/>args[7].ival,<sp/>args[8].ival);</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_n_d_plugin_edge_8cpp_1a597ade848bd7c3fd4b3220dbb5a48f72" kindref="member">NDEdgeRegister</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>iocshRegister(&amp;initFuncDef,initCallFunc);</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><ref refid="_n_d_plugin_edge_8cpp_1ae91dacc6ce1770f59af86458694d3387" kindref="member">epicsExportRegistrar</ref>(<ref refid="_n_d_plugin_edge_8cpp_1a597ade848bd7c3fd4b3220dbb5a48f72" kindref="member">NDEdgeRegister</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADPluginEdge/edgeApp/edgeSrc/NDPluginEdge.cpp"/>
  </compounddef>
</doxygen>
