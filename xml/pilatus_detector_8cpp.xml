<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="pilatus_detector_8cpp" kind="file" language="C++">
    <compoundname>pilatusDetector.cpp</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">cbf_ad.h</includes>
    <includes local="no">tiffio.h</includes>
    <includes local="no">epicsTime.h</includes>
    <includes local="no">epicsThread.h</includes>
    <includes local="no">epicsEvent.h</includes>
    <includes local="no">epicsMutex.h</includes>
    <includes local="no">epicsString.h</includes>
    <includes local="no">epicsStdio.h</includes>
    <includes local="no">cantProceed.h</includes>
    <includes local="no">iocsh.h</includes>
    <includes local="no">epicsExport.h</includes>
    <includes local="no">asynOctetSyncIO.h</includes>
    <includes refid="_a_d_driver_8h" local="yes">ADDriver.h</includes>
    <incdepgraph>
      <node id="36">
        <label>ADCoreAPI.h</label>
        <link refid="_a_d_core_a_p_i_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>ADCoreVersion.h</label>
        <link refid="_a_d_core_version_8h"/>
      </node>
      <node id="25">
        <label>ADDriver.h</label>
        <link refid="_a_d_driver_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>Codec.h</label>
        <link refid="_codec_8h"/>
      </node>
      <node id="30">
        <label>NDArray.h</label>
        <link refid="_n_d_array_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>NDAttribute.h</label>
        <link refid="_n_d_attribute_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>NDAttributeList.h</label>
        <link refid="_n_d_attribute_list_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>asynNDArrayDriver.h</label>
        <link refid="asyn_n_d_array_driver_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp</label>
        <link refid="pilatus_detector_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>asynDriver.h</label>
      </node>
      <node id="24">
        <label>asynOctetSyncIO.h</label>
      </node>
      <node id="29">
        <label>asynPortDriver.h</label>
      </node>
      <node id="21">
        <label>cantProceed.h</label>
      </node>
      <node id="13">
        <label>cbf_ad.h</label>
      </node>
      <node id="9">
        <label>ctype.h</label>
      </node>
      <node id="32">
        <label>ellLib.h</label>
      </node>
      <node id="17">
        <label>epicsEvent.h</label>
      </node>
      <node id="23">
        <label>epicsExport.h</label>
      </node>
      <node id="27">
        <label>epicsMessageQueue.h</label>
      </node>
      <node id="18">
        <label>epicsMutex.h</label>
      </node>
      <node id="20">
        <label>epicsStdio.h</label>
      </node>
      <node id="19">
        <label>epicsString.h</label>
      </node>
      <node id="16">
        <label>epicsThread.h</label>
      </node>
      <node id="15">
        <label>epicsTime.h</label>
      </node>
      <node id="26">
        <label>epicsTypes.h</label>
      </node>
      <node id="37">
        <label>epicsVersion.h</label>
      </node>
      <node id="7">
        <label>errno.h</label>
      </node>
      <node id="10">
        <label>fcntl.h</label>
      </node>
      <node id="22">
        <label>iocsh.h</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="31">
        <label>set</label>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="34">
        <label>string</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="11">
        <label>sys/stat.h</label>
      </node>
      <node id="14">
        <label>tiffio.h</label>
      </node>
      <node id="12">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classbad_pixel" prot="public">badPixel</innerclass>
    <innerclass refid="classpilatus_detector" prot="public">pilatusDetector</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="pilatus_detector_8cpp_1ae578001fe043b4cca7a0edd801cfe9c4" prot="public" static="no">
        <name>DRIVER_VERSION</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="41" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a09d8a9e616d09d45e8f4c3ad80849872" prot="public" static="no">
        <name>DRIVER_REVISION</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="42" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a00a7ebec19bc60e5ee0344109af2fd82" prot="public" static="no">
        <name>DRIVER_MODIFICATION</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="43" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" prot="public" static="no">
        <name>MAX_MESSAGE_SIZE</name>
        <initializer>256</initializer>
        <briefdescription>
<para>Messages to/from camserver. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="46" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1acc9794f655f61a3246ba3fd5c9c67e14" prot="public" static="no">
        <name>MAX_FILENAME_LEN</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="47" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1ae85fa292fde183a9e7e0afbf1dd728b5" prot="public" static="no">
        <name>MAX_HEADER_STRING_LEN</name>
        <initializer>68</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="48" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a724007862833feaf397f02be4c7fe5e2" prot="public" static="no">
        <name>MAX_BAD_PIXELS</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="49" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a5eaca2ba2c7e7c7bfca7166ab3124758" prot="public" static="no">
        <name>ASYN_POLL_TIME</name>
        <initializer>.01</initializer>
        <briefdescription>
<para>Time to poll when reading from camserver. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="51" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" prot="public" static="no">
        <name>CAMSERVER_DEFAULT_TIMEOUT</name>
        <initializer>1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="52" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a2a1c574af35da5ef9e409906d878e370" prot="public" static="no">
        <name>CAMSERVER_ACQUIRE_TIMEOUT</name>
        <initializer>10.</initializer>
        <briefdescription>
<para>Additional time to wait for a camserver response after the acquire should be complete. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="54" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a1b93c34902dd8b7b05bc40b5ab4c9044" prot="public" static="no">
        <name>CAMSERVER_RESET_POWER_TIMEOUT</name>
        <initializer>30.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="55" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1ae2292935ae37cd9f1c9d49837a74a793" prot="public" static="no">
        <name>FILE_READ_DELAY</name>
        <initializer>.01</initializer>
        <briefdescription>
<para>Time between checking to see if image file is complete. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="57" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a7e361d66962a459d627b9a2737d26400" prot="public" static="no">
        <name>PilatusDelayTimeString</name>
        <initializer>&quot;DELAY_TIME&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="79" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a669c114cc8892492c60b2280c842f411" prot="public" static="no">
        <name>PilatusThresholdString</name>
        <initializer>&quot;THRESHOLD&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="80" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1afa03c590b4a17913d577352d49c8069c" prot="public" static="no">
        <name>PilatusThresholdApplyString</name>
        <initializer>&quot;THRESHOLD_APPLY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="81" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1afc97861a65a49a361b82a40d2b290746" prot="public" static="no">
        <name>PilatusThresholdAutoApplyString</name>
        <initializer>&quot;THRESHOLD_AUTO_APPLY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="82" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1ab0737d347cca4701c251f2cf2a991b4a" prot="public" static="no">
        <name>PilatusEnergyString</name>
        <initializer>&quot;ENERGY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="83" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a04747d7a8294a1f653e10584980cdcff" prot="public" static="no">
        <name>PilatusArmedString</name>
        <initializer>&quot;ARMED&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="84" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1aa8720775862823cccd775d6d24e2d5e7" prot="public" static="no">
        <name>PilatusResetPowerString</name>
        <initializer>&quot;RESET_POWER&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="85" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a43d7e5e3be476f68c00243dc7587133d" prot="public" static="no">
        <name>PilatusResetPowerTimeString</name>
        <initializer>&quot;RESET_POWER_TIME&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="86" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1abc13131636e428094a787a61627d75fe" prot="public" static="no">
        <name>PilatusImageFileTmotString</name>
        <initializer>&quot;IMAGE_FILE_TMOT&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="87" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a8013a9b2f93c20aab2e92152727c91d6" prot="public" static="no">
        <name>PilatusBadPixelFileString</name>
        <initializer>&quot;BAD_PIXEL_FILE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="88" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a47c7ad384fdf819059200c12cafd6105" prot="public" static="no">
        <name>PilatusNumBadPixelsString</name>
        <initializer>&quot;NUM_BAD_PIXELS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="89" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1ab9491d1a236f6e574dd552609e254c8f" prot="public" static="no">
        <name>PilatusFlatFieldFileString</name>
        <initializer>&quot;FLAT_FIELD_FILE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="90" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a38458a47ba1bc14e5aef243c25415c49" prot="public" static="no">
        <name>PilatusMinFlatFieldString</name>
        <initializer>&quot;MIN_FLAT_FIELD&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="91" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a040404884d53ef0550df483a9d9143a9" prot="public" static="no">
        <name>PilatusFlatFieldValidString</name>
        <initializer>&quot;FLAT_FIELD_VALID&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="92" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a1bb73af70a75d74a02f6116de69f0579" prot="public" static="no">
        <name>PilatusGapFillString</name>
        <initializer>&quot;GAP_FILL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="93" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1adda9a256b408f9b6e792533844b51d15" prot="public" static="no">
        <name>PilatusWavelengthString</name>
        <initializer>&quot;WAVELENGTH&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="94" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a5248406704625fe2a7d6e2ef4da5acda" prot="public" static="no">
        <name>PilatusEnergyLowString</name>
        <initializer>&quot;ENERGY_LOW&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="95" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a68133a94ce81379f425cd8ab9a89ace0" prot="public" static="no">
        <name>PilatusEnergyHighString</name>
        <initializer>&quot;ENERGY_HIGH&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="96" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a2f282c12a975b65077eab7c5c60bc349" prot="public" static="no">
        <name>PilatusDetDistString</name>
        <initializer>&quot;DET_DIST&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="97" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a5adffc07135b85e9f0cb4526a1821646" prot="public" static="no">
        <name>PilatusDetVOffsetString</name>
        <initializer>&quot;DET_VOFFSET&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="98" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a4315b9091a85b0ca3b7a60ef599c90ce" prot="public" static="no">
        <name>PilatusBeamXString</name>
        <initializer>&quot;BEAM_X&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="99" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a1c5d83dff695c548c62c1d571d2a278f" prot="public" static="no">
        <name>PilatusBeamYString</name>
        <initializer>&quot;BEAM_Y&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="100" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a1b362df0feedb7a402dfc00759b4175e" prot="public" static="no">
        <name>PilatusFluxString</name>
        <initializer>&quot;FLUX&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="101" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1aedce5913870fb8db5d3205f9b271137d" prot="public" static="no">
        <name>PilatusFilterTransmString</name>
        <initializer>&quot;FILTER_TRANSM&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="102" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1ad5e9225bb955a44a800457791323ee44" prot="public" static="no">
        <name>PilatusStartAngleString</name>
        <initializer>&quot;START_ANGLE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="103" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a2313f6ec2fbdf3810c36464f268fe4ae" prot="public" static="no">
        <name>PilatusAngleIncrString</name>
        <initializer>&quot;ANGLE_INCR&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="104" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1afcb75abc7fe8a5cebc33ef88fa3fba9a" prot="public" static="no">
        <name>PilatusDet2thetaString</name>
        <initializer>&quot;DET_2THETA&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="105" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a49dd06856679e289b56b8b5493bdc2ce" prot="public" static="no">
        <name>PilatusPolarizationString</name>
        <initializer>&quot;POLARIZATION&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="106" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a0974070dfed203f5ba3cf9e7845398a5" prot="public" static="no">
        <name>PilatusAlphaString</name>
        <initializer>&quot;ALPHA&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="107" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1af12cf3d47b49ae1d93a8fad520b4e4c9" prot="public" static="no">
        <name>PilatusKappaString</name>
        <initializer>&quot;KAPPA&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="108" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1af39a6deeb28c199117a62894bf3978de" prot="public" static="no">
        <name>PilatusPhiString</name>
        <initializer>&quot;PHI&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="109" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1aec5a5c96879e8a91cfe3356c1b19084d" prot="public" static="no">
        <name>PilatusPhiIncrString</name>
        <initializer>&quot;PHI_INCR&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="110" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a73317d56668cae561e29ac8c0a915cad" prot="public" static="no">
        <name>PilatusChiString</name>
        <initializer>&quot;CHI&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="111" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a4d64dce4a50e6a4cf19f0630f0f5d0f9" prot="public" static="no">
        <name>PilatusChiIncrString</name>
        <initializer>&quot;CHI_INCR&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="112" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a30b4432f866a685b3b9e854679acd467" prot="public" static="no">
        <name>PilatusOmegaString</name>
        <initializer>&quot;OMEGA&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="113" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a450b4763a3541576949db8e48cc44510" prot="public" static="no">
        <name>PilatusOmegaIncrString</name>
        <initializer>&quot;OMEGA_INCR&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="114" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a60120c519321ca95791f0ff18357e9ce" prot="public" static="no">
        <name>PilatusOscillAxisString</name>
        <initializer>&quot;OSCILL_AXIS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="115" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a481493857e916eec8cbf81e6b05054cb" prot="public" static="no">
        <name>PilatusNumOscillString</name>
        <initializer>&quot;NUM_OSCILL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="116" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a43b0455b7e93a16b2e66af3bcdfc4c19" prot="public" static="no">
        <name>PilatusPixelCutOffString</name>
        <initializer>&quot;PIXEL_CUTOFF&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="117" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1ab6956b8576f152c9789f1a3a7ad1f504" prot="public" static="no">
        <name>PilatusThTemp0String</name>
        <initializer>&quot;TH_TEMP_0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="118" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a1f0ed778763889ea617771fb9298e791" prot="public" static="no">
        <name>PilatusThTemp1String</name>
        <initializer>&quot;TH_TEMP_1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="119" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1ace37b7a6df89d45deff03edefa3a28cb" prot="public" static="no">
        <name>PilatusThTemp2String</name>
        <initializer>&quot;TH_TEMP_2&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="120" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a2f19413ff7f226d2851554f999be9699" prot="public" static="no">
        <name>PilatusThHumid0String</name>
        <initializer>&quot;TH_HUMID_0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="121" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a9ab2368f242197dd3ff0093b62cef39f" prot="public" static="no">
        <name>PilatusThHumid1String</name>
        <initializer>&quot;TH_HUMID_1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="122" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a9ee23e91cd9f3166240832f217c8b288" prot="public" static="no">
        <name>PilatusThHumid2String</name>
        <initializer>&quot;TH_HUMID_2&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="123" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1adcf20c79fc99af24a1bef37a86000658" prot="public" static="no">
        <name>PilatusTvxVersionString</name>
        <initializer>&quot;TVXVERSION&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="124" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a1d65deeec3351103f2dc99376cd4e527" prot="public" static="no">
        <name>PilatusCbfTemplateFileString</name>
        <initializer>&quot;CBFTEMPLATEFILE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="125" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a415895762879d6647217dd227c3d286d" prot="public" static="no">
        <name>PilatusHeaderStringString</name>
        <initializer>&quot;HEADERSTRING&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="126" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pilatus_detector_8cpp_1a7494cbc68a6ae561231e9a6f48f7a15a" prot="public" static="no">
        <name>FIRST_PILATUS_PARAM</name>
        <initializer>PilatusDelayTime</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="148" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="148" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47" prot="public" static="no" strong="no">
        <type></type>
        <name>PilatusTriggerMode</name>
        <enumvalue id="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47acda9ee85028a22f342355d14bd5d4956" prot="public">
          <name>TMInternal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a553172af0e9d5df0dd5e0b3d5d6fa7a3" prot="public">
          <name>TMExternalEnable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a3e91843218a66b417febea94696fabff" prot="public">
          <name>TMExternalTrigger</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a02e7c3822dd1e2c630b0a99edaea977d" prot="public">
          <name>TMMultipleExternalTrigger</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a45aa30189155eb9f2a229b73fe9f65f7" prot="public">
          <name>TMAlignment</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Trigger modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="60" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="60" bodyend="66"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="pilatus_detector_8cpp_1a602c6402e6bf20a06eccd0d427253640" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* gainStrings[]</definition>
        <argsstring>[]</argsstring>
        <name>gainStrings</name>
        <initializer>= {&quot;lowG&quot;, &quot;midG&quot;, &quot;highG&quot;, &quot;uhighG&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="75" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="variable" id="pilatus_detector_8cpp_1af0e94d13028051cd5339d204bfbb057d" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* driverName</definition>
        <argsstring></argsstring>
        <name>driverName</name>
        <initializer>= &quot;pilatusDetector&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="77" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pilatus_detector_8cpp_1a1fcb5a0b7c786dd9bb683d6491a269d3" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pilatusDetectorConfigArg0</definition>
        <argsstring></argsstring>
        <name>pilatusDetectorConfigArg0</name>
        <initializer>= {&quot;Port name&quot;, iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1843" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1843" bodyend="1843"/>
      </memberdef>
      <memberdef kind="variable" id="pilatus_detector_8cpp_1a7a65a9802fc271859fc1d914c920846e" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pilatusDetectorConfigArg1</definition>
        <argsstring></argsstring>
        <name>pilatusDetectorConfigArg1</name>
        <initializer>= {&quot;camserver port name&quot;, iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1844" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1844" bodyend="1844"/>
      </memberdef>
      <memberdef kind="variable" id="pilatus_detector_8cpp_1a41afbad50bd2f71bda730ea17e07387c" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pilatusDetectorConfigArg2</definition>
        <argsstring></argsstring>
        <name>pilatusDetectorConfigArg2</name>
        <initializer>= {&quot;maxSizeX&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1845" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1845" bodyend="1845"/>
      </memberdef>
      <memberdef kind="variable" id="pilatus_detector_8cpp_1a06a42db95fe0cd81cb1eb62d10b8e9d7" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pilatusDetectorConfigArg3</definition>
        <argsstring></argsstring>
        <name>pilatusDetectorConfigArg3</name>
        <initializer>= {&quot;maxSizeY&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1846" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1846" bodyend="1846"/>
      </memberdef>
      <memberdef kind="variable" id="pilatus_detector_8cpp_1aa1cc2d4dc7b48828a32f4fabd519f2b2" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pilatusDetectorConfigArg4</definition>
        <argsstring></argsstring>
        <name>pilatusDetectorConfigArg4</name>
        <initializer>= {&quot;maxBuffers&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1847" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1847" bodyend="1847"/>
      </memberdef>
      <memberdef kind="variable" id="pilatus_detector_8cpp_1a6159c8aa1c6c5f9579fdb23d69b118eb" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pilatusDetectorConfigArg5</definition>
        <argsstring></argsstring>
        <name>pilatusDetectorConfigArg5</name>
        <initializer>= {&quot;maxMemory&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1848" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1848" bodyend="1848"/>
      </memberdef>
      <memberdef kind="variable" id="pilatus_detector_8cpp_1acd7eb21d37381443d5aa65446013816b" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pilatusDetectorConfigArg6</definition>
        <argsstring></argsstring>
        <name>pilatusDetectorConfigArg6</name>
        <initializer>= {&quot;priority&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1849" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1849" bodyend="1849"/>
      </memberdef>
      <memberdef kind="variable" id="pilatus_detector_8cpp_1a9dfe8bb62de6adaf3f17c52397854bcf" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pilatusDetectorConfigArg7</definition>
        <argsstring></argsstring>
        <name>pilatusDetectorConfigArg7</name>
        <initializer>= {&quot;stackSize&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1850" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1850" bodyend="1850"/>
      </memberdef>
      <memberdef kind="variable" id="pilatus_detector_8cpp_1a8180af818bfc4a95f6e3156a2de4701b" prot="public" static="yes" mutable="no">
        <type>const iocshArg *const</type>
        <definition>const iocshArg* const pilatusDetectorConfigArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>pilatusDetectorConfigArgs</name>
        <initializer>=  {&amp;pilatusDetectorConfigArg0,
                                                              &amp;pilatusDetectorConfigArg1,
                                                              &amp;pilatusDetectorConfigArg2,
                                                              &amp;pilatusDetectorConfigArg3,
                                                              &amp;pilatusDetectorConfigArg4,
                                                              &amp;pilatusDetectorConfigArg5,
                                                              &amp;pilatusDetectorConfigArg6,
                                                              &amp;pilatusDetectorConfigArg7}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1851" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1851" bodyend="1858"/>
      </memberdef>
      <memberdef kind="variable" id="pilatus_detector_8cpp_1a782c53c54bcf44495c70d6a6c5ce3ea6" prot="public" static="yes" mutable="no">
        <type>const iocshFuncDef</type>
        <definition>const iocshFuncDef configPilatusDetector</definition>
        <argsstring></argsstring>
        <name>configPilatusDetector</name>
        <initializer>= {&quot;pilatusDetectorConfig&quot;, 8, pilatusDetectorConfigArgs}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1859" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1859" bodyend="1859"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="pilatus_detector_8cpp_1a0a4a31384bfbaae36d0c789984829118" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pilatusTaskC</definition>
        <argsstring>(void *drvPvt)</argsstring>
        <name>pilatusTaskC</name>
        <param>
          <type>void *</type>
          <declname>drvPvt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1016" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1016" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="pilatus_detector_8cpp_1ac0b86ba9e37d57ab9550acec6e6a4216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pilatusDetectorConfig</definition>
        <argsstring>(const char *portName, const char *camserverPort, int maxSizeX, int maxSizeY, int maxBuffers, size_t maxMemory, int priority, int stackSize)</argsstring>
        <name>pilatusDetectorConfig</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>camserverPort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxSizeX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxSizeY</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxBuffers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxMemory</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stackSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1668" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1668" bodyend="1676"/>
      </memberdef>
      <memberdef kind="function" id="pilatus_detector_8cpp_1a1b7b37d7b6490c080bb7339e550ba0f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void configPilatusDetectorCallFunc</definition>
        <argsstring>(const iocshArgBuf *args)</argsstring>
        <name>configPilatusDetectorCallFunc</name>
        <param>
          <type>const iocshArgBuf *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1860" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1860" bodyend="1864"/>
      </memberdef>
      <memberdef kind="function" id="pilatus_detector_8cpp_1aa0c8952d9613632a9deafe3d9cf69594" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pilatusDetectorRegister</definition>
        <argsstring>(void)</argsstring>
        <name>pilatusDetectorRegister</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1867" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" bodystart="1867" bodyend="1871"/>
      </memberdef>
      <memberdef kind="function" id="pilatus_detector_8cpp_1abdd4e0d9b273670c239017ea76671cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>epicsExportRegistrar</definition>
        <argsstring>(pilatusDetectorRegister)</argsstring>
        <name>epicsExportRegistrar</name>
        <param>
          <type>pilatusDetectorRegister</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" line="1874" column="1" declfile="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp" declline="1874" declcolumn="1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>pilatusDetector.cpp</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>a<sp/>driver<sp/>for<sp/>a<sp/>Pilatus<sp/>pixel<sp/>array<sp/>detector.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Mark<sp/>Rivers</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>University<sp/>of<sp/>Chicago</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/>June<sp/>11,<sp/>2008</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cbf_ad.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tiffio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsTime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsThread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsEvent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsMutex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsString.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsStdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsMutex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cantProceed.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iocsh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsExport.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;asynOctetSyncIO.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_d_driver_8h" kindref="compound">ADDriver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRIVER_VERSION<sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRIVER_REVISION<sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRIVER_MODIFICATION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_MESSAGE_SIZE<sp/>256<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_FILENAME_LEN<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_HEADER_STRING_LEN<sp/>68</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_BAD_PIXELS<sp/>100</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASYN_POLL_TIME<sp/>.01<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMSERVER_DEFAULT_TIMEOUT<sp/>1.0</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMSERVER_ACQUIRE_TIMEOUT<sp/>10.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMSERVER_RESET_POWER_TIMEOUT<sp/>30.</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FILE_READ_DELAY<sp/>.01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47acda9ee85028a22f342355d14bd5d4956" kindref="member">TMInternal</ref>,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a553172af0e9d5df0dd5e0b3d5d6fa7a3" kindref="member">TMExternalEnable</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a3e91843218a66b417febea94696fabff" kindref="member">TMExternalTrigger</ref>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a02e7c3822dd1e2c630b0a99edaea977d" kindref="member">TMMultipleExternalTrigger</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a45aa30189155eb9f2a229b73fe9f65f7" kindref="member">TMAlignment</ref></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47" kindref="member">PilatusTriggerMode</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>badIndex;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>replaceIndex;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/><ref refid="classbad_pixel" kindref="compound">badPixel</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*gainStrings[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;lowG&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;midG&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;highG&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;uhighG&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*driverName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pilatusDetector&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusDelayTimeString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;DELAY_TIME&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusThresholdString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;THRESHOLD&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusThresholdApplyString<sp/>&quot;THRESHOLD_APPLY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusThresholdAutoApplyString<sp/>&quot;THRESHOLD_AUTO_APPLY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusEnergyString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;ENERGY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusArmedString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;ARMED&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusResetPowerString<sp/><sp/><sp/><sp/><sp/>&quot;RESET_POWER&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusResetPowerTimeString<sp/>&quot;RESET_POWER_TIME&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusImageFileTmotString<sp/><sp/>&quot;IMAGE_FILE_TMOT&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusBadPixelFileString<sp/><sp/><sp/>&quot;BAD_PIXEL_FILE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusNumBadPixelsString<sp/><sp/><sp/>&quot;NUM_BAD_PIXELS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusFlatFieldFileString<sp/><sp/>&quot;FLAT_FIELD_FILE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusMinFlatFieldString<sp/><sp/><sp/>&quot;MIN_FLAT_FIELD&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusFlatFieldValidString<sp/>&quot;FLAT_FIELD_VALID&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusGapFillString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;GAP_FILL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusWavelengthString<sp/><sp/><sp/><sp/><sp/>&quot;WAVELENGTH&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusEnergyLowString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;ENERGY_LOW&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusEnergyHighString<sp/><sp/><sp/><sp/><sp/>&quot;ENERGY_HIGH&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusDetDistString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;DET_DIST&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusDetVOffsetString<sp/><sp/><sp/><sp/><sp/>&quot;DET_VOFFSET&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusBeamXString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;BEAM_X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusBeamYString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;BEAM_Y&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusFluxString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;FLUX&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusFilterTransmString<sp/><sp/><sp/>&quot;FILTER_TRANSM&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusStartAngleString<sp/><sp/><sp/><sp/><sp/>&quot;START_ANGLE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusAngleIncrString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;ANGLE_INCR&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusDet2thetaString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;DET_2THETA&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusPolarizationString<sp/><sp/><sp/>&quot;POLARIZATION&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusAlphaString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;ALPHA&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusKappaString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;KAPPA&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusPhiString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PHI&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusPhiIncrString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PHI_INCR&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusChiString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;CHI&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusChiIncrString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;CHI_INCR&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusOmegaString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;OMEGA&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusOmegaIncrString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;OMEGA_INCR&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusOscillAxisString<sp/><sp/><sp/><sp/><sp/>&quot;OSCILL_AXIS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusNumOscillString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;NUM_OSCILL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusPixelCutOffString<sp/><sp/><sp/><sp/>&quot;PIXEL_CUTOFF&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusThTemp0String<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;TH_TEMP_0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusThTemp1String<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;TH_TEMP_1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusThTemp2String<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;TH_TEMP_2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusThHumid0String<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;TH_HUMID_0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusThHumid1String<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;TH_HUMID_1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusThHumid2String<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;TH_HUMID_2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusTvxVersionString<sp/><sp/><sp/><sp/><sp/>&quot;TVXVERSION&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusCbfTemplateFileString<sp/>&quot;CBFTEMPLATEFILE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PilatusHeaderStringString<sp/><sp/><sp/>&quot;HEADERSTRING&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classpilatus_detector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpilatus_detector" kindref="compound">pilatusDetector</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_a_d_driver" kindref="compound">ADDriver</ref><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpilatus_detector" kindref="compound">pilatusDetector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*camserverPort,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeY,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>the<sp/>methods<sp/>that<sp/>we<sp/>override<sp/>from<sp/>ADDriver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><ref refid="classpilatus_detector_1a620954e1f1e8abad82f81570406aae63" kindref="member">writeInt32</ref>(asynUser<sp/>*pasynUser,<sp/>epicsInt32<sp/>value);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><ref refid="classpilatus_detector_1a28ec23a70492c14aeff13435396a6eb7" kindref="member">writeFloat64</ref>(asynUser<sp/>*pasynUser,<sp/>epicsFloat64<sp/>value);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><ref refid="classpilatus_detector_1aa4e8186a7199e3228695b7612acc25a1" kindref="member">writeOctet</ref>(asynUser<sp/>*pasynUser,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nChars,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*nActual);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1aaab6e0ee8f7d3df9489ce35d85fd1d6d" kindref="member">report</ref>(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>details);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>should<sp/>be<sp/>private<sp/>but<sp/>are<sp/>called<sp/>from<sp/>C<sp/>so<sp/>must<sp/>be<sp/>public<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a16e0b53f2f9d509f585c93989e4add96" kindref="member">pilatusTask</ref>();<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a9417cd52ce7d978f1a383b76fce1aa9c" kindref="member">PilatusDelayTime</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FIRST_PILATUS_PARAM<sp/>PilatusDelayTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1aff068b875061c1db19bc428a303f0004" kindref="member">PilatusThreshold</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a91f9cd10a889a2d33541d5313caa6503" kindref="member">PilatusThresholdApply</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a050afcbb1d5ff8fd2e352a6c179bd1a7" kindref="member">PilatusThresholdAutoApply</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a5b347e6c7d2a82b6fe63dee28f3fbb23" kindref="member">PilatusEnergy</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a1a590ab953e612cb889621987330108a" kindref="member">PilatusArmed</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1abcdc79c0085fc0439ebb0f0aac39a3ff" kindref="member">PilatusResetPower</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a66b08dbbe3dfc9680d033b80c2563b5b" kindref="member">PilatusResetPowerTime</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a10c5bbd2c3538f95dd89c832d22d30b8" kindref="member">PilatusImageFileTmot</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a45d5021fcd01cd061c9eebfe26b023d7" kindref="member">PilatusBadPixelFile</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a050b3d9e5782b4df14803c7c2dd7ef73" kindref="member">PilatusNumBadPixels</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a7e06c78b28217471b39123f9ae0682b9" kindref="member">PilatusFlatFieldFile</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1ad771907d824e3efd05120d8721f71abf" kindref="member">PilatusMinFlatField</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a16fc0bc6a1c360e1f377663b520748d6" kindref="member">PilatusFlatFieldValid</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1aba84bfa780f1f6a8e93728c237ae1552" kindref="member">PilatusGapFill</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a1de98ceeb47db7bf2ea1937f6ee0f9ab" kindref="member">PilatusWavelength</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a69ea37779a3b5edd1ddc9d7d441325d2" kindref="member">PilatusEnergyLow</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a0b502aeb2a9e63cea5f536763ec96f79" kindref="member">PilatusEnergyHigh</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a79bb10b16167ae5380bbb27c36d021e5" kindref="member">PilatusDetDist</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a9ee751845282d1b1152a527e8cf63abe" kindref="member">PilatusDetVOffset</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a358daa61dc28f31f6494623807fc4c80" kindref="member">PilatusBeamX</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a5a0951a081e22ab72ab6e96bb86c5a20" kindref="member">PilatusBeamY</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1ac4e783c59df84d271edf53eb11ba8a2c" kindref="member">PilatusFlux</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a2dc7106f4787dd6704e8bce3c23b23d7" kindref="member">PilatusFilterTransm</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a70c8b3d21e8fbcd7c78eb60a66162987" kindref="member">PilatusStartAngle</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1abf4893826726d481d08c3b5d9f19a200" kindref="member">PilatusAngleIncr</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1aa5680ed4ce91e3169ab2135d9934e8f0" kindref="member">PilatusDet2theta</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a5ee2197ef767aca15a0da7dbb8452d97" kindref="member">PilatusPolarization</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1add43c782d19048c7240dc407fff9221b" kindref="member">PilatusAlpha</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a33bc0452a13e0c2e2d3f0d556b21a919" kindref="member">PilatusKappa</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1ab70320b2eb2a70ab686305cfb35e9a9f" kindref="member">PilatusPhi</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a8f51f400a0355a58fafbab822b28f55b" kindref="member">PilatusPhiIncr</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a18d1c1a9ac896facc37415e68af00d5c" kindref="member">PilatusChi</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a77173e6d2c34b6b19239b617af87d622" kindref="member">PilatusChiIncr</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1ab7161c19c682d430cdc1d8f8fdb80d93" kindref="member">PilatusOmega</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a3fa76b38d49102f4744d0a9b694ac98d" kindref="member">PilatusOmegaIncr</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a90e16229d6b89465b931a786f0d80627" kindref="member">PilatusOscillAxis</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a2f2ad7a7665dda405bf540d725fe5b99" kindref="member">PilatusNumOscill</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a2c809831fea29896b9c3ef1d8e579624" kindref="member">PilatusPixelCutOff</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a7f7f4d8d9c82679ae089482a66a16a5d" kindref="member">PilatusThTemp0</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a2896ab82b5f081ca1f64fbbc863023de" kindref="member">PilatusThTemp1</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a565e9ecca99b492989932fe9f3268b55" kindref="member">PilatusThTemp2</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a50c0a9997b78000285a65540d546eecc" kindref="member">PilatusThHumid0</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a1f23438bd6da602b2967e098b2813d88" kindref="member">PilatusThHumid1</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a13ce63a83d173db6fcbec4052f19178c" kindref="member">PilatusThHumid2</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1ac345c7c2a53c4aebc860a09e7f014882" kindref="member">PilatusTvxVersion</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a79fa971ac1bd9eae89c5dfb015c73931" kindref="member">PilatusCbfTemplateFile</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a5935548bc3b4d58f74d9deba3d1cf91b" kindref="member">PilatusHeaderString</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>the<sp/>methods<sp/>that<sp/>are<sp/>new<sp/>to<sp/>this<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>abortAcquisition();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makeMultipleFileFormat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*baseFileName);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>waitForFileToExist(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/>epicsTimeStamp<sp/>*pStartTime,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>correctBadPixels(<ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stringEndsWith(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*aString,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*aSubstring,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shouldIgnoreCase);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>readImageFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/>epicsTimeStamp<sp/>*pStartTime,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>readCbf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/>epicsTimeStamp<sp/>*pStartTime,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>readTiff(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/>epicsTimeStamp<sp/>*pStartTime,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>writeCamserver(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>readCamserver(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>writeReadCamserver(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setAcquireParams();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setThreshold();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>resetModulePower();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>pilatusStatus();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readBadPixelFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*badPixelFile);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readFlatFieldFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flatFieldFile);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Our<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imagesRemaining;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsEventId<sp/>startEventId;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsEventId<sp/>stopEventId;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>toCamserver[<ref refid="pilatus_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fromCamserver[<ref refid="pilatus_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pFlatField;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>multipleFileFormat[<ref refid="pilatus_detector_8cpp_1acc9794f655f61a3246ba3fd5c9c67e14" kindref="member">MAX_FILENAME_LEN</ref>];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multipleFileNumber;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>asynUser<sp/>*pasynUserCamserver;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbad_pixel" kindref="compound">badPixel</ref><sp/>badPixelMap[<ref refid="pilatus_detector_8cpp_1a724007862833feaf397f02be4c7fe5e2" kindref="member">MAX_BAD_PIXELS</ref>];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>averageFlatField;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>demandedThreshold;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>demandedEnergy;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstStatusCall;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>camserverMajor;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>camserverMinor;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>camserverPatch;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pilatusDetector::readBadPixelFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*badPixelFile)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;<sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xbad,<sp/>ybad,<sp/>xgood,<sp/>ygood;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*file;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nx,<sp/>ny;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;readBadPixelFile&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numBadPixels=0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1a79c89c00ea62734d82c89e09ea8aa47b" kindref="member">NDArraySizeX</ref>,<sp/>&amp;nx);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1a75753778fe16182d0771e924f05bde33" kindref="member">NDArraySizeY</ref>,<sp/>&amp;ny);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1a050b3d9e5782b4df14803c7c2dd7ef73" kindref="member">PilatusNumBadPixels</ref>,<sp/>numBadPixels);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(badPixelFile)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>=<sp/>fopen(badPixelFile,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>cannot<sp/>open<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>badPixelFile);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="pilatus_detector_8cpp_1a724007862833feaf397f02be4c7fe5e2" kindref="member">MAX_BAD_PIXELS</ref>;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%d,%d<sp/>%d,%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;xbad,<sp/>&amp;ybad,<sp/>&amp;xgood,<sp/>&amp;ygood);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>EOF)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>!=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>too<sp/>few<sp/>items<sp/>=%d,<sp/>should<sp/>be<sp/>4\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>n);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;badPixelMap[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].<ref refid="classbad_pixel_1a2ec2f7a408176a14a0af69a51dcfb6ee" kindref="member">badIndex</ref><sp/>=<sp/>ybad*<ref refid="namespacemake_adl_1a3c7364e67c0570681ac29158f738bff6" kindref="member">nx</ref><sp/>+<sp/>xbad;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;badPixelMap[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].<ref refid="classbad_pixel_1a8403e29869590856ae864542a816c9cf" kindref="member">replaceIndex</ref><sp/>=<sp/>ygood*ny<sp/>+<sp/>xgood;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numBadPixels++;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1a050b3d9e5782b4df14803c7c2dd7ef73" kindref="member">PilatusNumBadPixels</ref>,<sp/>numBadPixels);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp value="12"/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pilatusDetector::readFlatFieldFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flatFieldFile)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngood;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minFlatField;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsInt32<sp/>*pData;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;readFlatFieldFile&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_n_d_array_info" kindref="compound">NDArrayInfo</ref><sp/>arrayInfo;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1a16fc0bc6a1c360e1f377663b520748d6" kindref="member">PilatusFlatFieldValid</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pFlatField-&gt;<ref refid="class_n_d_array_1a47af97c0e2b8255d756207908f6b470d" kindref="member">getInfo</ref>(&amp;arrayInfo);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpilatus_detector_1ad771907d824e3efd05120d8721f71abf" kindref="member">PilatusMinFlatField</ref>,<sp/>&amp;minFlatField);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(flatFieldFile)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>readImageFile(flatFieldFile,<sp/>NULL,<sp/>0.,<sp/>this-&gt;pFlatField);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>error<sp/>reading<sp/>flat<sp/>field<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>flatFieldFile);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>average<sp/>counts<sp/>in<sp/>the<sp/>flat<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;averageFlatField<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>ngood<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0,<sp/>pData<sp/>=<sp/>(epicsInt32<sp/>*)this-&gt;pFlatField-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>;<sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;arrayInfo.<ref refid="struct_n_d_array_info_1a60783541b9eda5a6222e5cdad797c387" kindref="member">nElements</ref>;<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++,<sp/>pData++)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pData<sp/>&lt;<sp/>minFlatField)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngood++;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>averageFlatField<sp/>+=<sp/>*pData;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>averageFlatField<sp/>=<sp/>averageFlatField/ngood;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0,<sp/>pData<sp/>=<sp/>(epicsInt32<sp/>*)this-&gt;pFlatField-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>;<sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;arrayInfo.<ref refid="struct_n_d_array_info_1a60783541b9eda5a6222e5cdad797c387" kindref="member">nElements</ref>;<sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++,<sp/>pData++)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pData<sp/>&lt;<sp/>minFlatField)<sp/>*pData<sp/>=<sp/>(epicsInt32)averageFlatField;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>NDArray<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>doCallbacksGenericPointer(this-&gt;pFlatField,<sp/><ref refid="classasyn_n_d_array_driver_1a2b2fe51fba9a6ee4146813eac0c47fd1" kindref="member">NDArrayData</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1a16fc0bc6a1c360e1f377663b520748d6" kindref="member">PilatusFlatFieldValid</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pilatusDetector::makeMultipleFileFormat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*baseFileName)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>uses<sp/>the<sp/>code<sp/>from<sp/>camserver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p,<sp/>*q;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_a_d_pylon_8cpp_1ac89a06716b106a4e29cea2972ae94fed" kindref="member">fmt</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mfTempFormat[<ref refid="pilatus_detector_8cpp_1acc9794f655f61a3246ba3fd5c9c67e14" kindref="member">MAX_FILENAME_LEN</ref>];</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mfExtension[10];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numImages;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>baseFilename<sp/>has<sp/>been<sp/>built<sp/>by<sp/>the<sp/>caller.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Copy<sp/>to<sp/>temp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(mfTempFormat,<sp/>baseFileName,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mfTempFormat));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>,<sp/>&amp;numImages);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>mfTempFormat<sp/>+<sp/>strlen(mfTempFormat)<sp/>-<sp/>5;<sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>extension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(q=strrchr(p,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mfExtension,<sp/>q);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*q<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mfExtension,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>is<sp/>raw<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>multipleFileNumber=0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1ac89a06716b106a4e29cea2972ae94fed" kindref="member">fmt</ref>=5;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>format<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(p=strrchr(mfTempFormat,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p=mfTempFormat;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(q=strrchr(p,<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q++;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isdigit(*q)<sp/>&amp;&amp;<sp/>isdigit(*(q+1))<sp/>&amp;&amp;<sp/>isdigit(*(q+2)))<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multipleFileNumber=atoi(q);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1ac89a06716b106a4e29cea2972ae94fed" kindref="member">fmt</ref>=0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p=q;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(isdigit(*q))<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1ac89a06716b106a4e29cea2972ae94fed" kindref="member">fmt</ref>++;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q++;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="_a_d_pylon_8cpp_1ac89a06716b106a4e29cea2972ae94fed" kindref="member">fmt</ref>&lt;3)<sp/><sp/>||<sp/>((<ref refid="_a_d_pylon_8cpp_1ac89a06716b106a4e29cea2972ae94fed" kindref="member">fmt</ref>==3)<sp/>&amp;&amp;<sp/>(numImages&gt;999)))<sp/>||<sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="_a_d_pylon_8cpp_1ac89a06716b106a4e29cea2972ae94fed" kindref="member">fmt</ref>==4)<sp/>&amp;&amp;<sp/>(numImages&gt;9999)))<sp/>{<sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1ac89a06716b106a4e29cea2972ae94fed" kindref="member">fmt</ref>=5;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*q)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(p,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>force<sp/>&apos;_&apos;<sp/>ending<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(p,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>force<sp/>&apos;_&apos;<sp/>ending<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Build<sp/>the<sp/>final<sp/>format<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;multipleFileFormat,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;multipleFileFormat),<sp/></highlight><highlight class="stringliteral">&quot;%s%%.%dd%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mfTempFormat,<sp/><ref refid="_a_d_pylon_8cpp_1ac89a06716b106a4e29cea2972ae94fed" kindref="member">fmt</ref>,<sp/>mfExtension);</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">asynStatus<sp/>pilatusDetector::waitForFileToExist(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/>epicsTimeStamp<sp/>*pStartTime,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd=-1;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fileExists=0;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>statBuff;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeStamp<sp/>tStart,<sp/>tCheck;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>acqStartTime;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaTime=0.;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status=-1;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;waitForFileToExist&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pStartTime)<sp/>epicsTimeToTime_t(&amp;acqStartTime,<sp/>pStartTime);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;tStart);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(deltaTime<sp/>&lt;=<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>open(fileName,<sp/>O_RDONLY,<sp/>0);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(timeout<sp/>!=<sp/>0.))<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileExists<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>file<sp/>exists.<sp/><sp/>Make<sp/>sure<sp/>it<sp/>is<sp/>a<sp/>new<sp/>file,<sp/>not<sp/>an<sp/>old<sp/>one.</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>don&apos;t<sp/>do<sp/>this<sp/>check<sp/>if<sp/>timeout==0,<sp/>which<sp/>is<sp/>used<sp/>for<sp/>reading<sp/>flat<sp/>field<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>fstat(fd,<sp/>&amp;statBuff);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status){</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>error<sp/>calling<sp/>fstat,<sp/>errno=%d<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>errno,<sp/>fileName);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>allow<sp/>up<sp/>to<sp/>10<sp/>second<sp/>clock<sp/>skew<sp/>between<sp/>time<sp/>on<sp/>machine<sp/>running<sp/>this<sp/>IOC</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>the<sp/>machine<sp/>with<sp/>the<sp/>file<sp/>system<sp/>returning<sp/>modification<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(difftime(statBuff.st_mtime,<sp/>acqStartTime)<sp/>&gt;<sp/>-10)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sleep,<sp/>but<sp/>check<sp/>for<sp/>stop<sp/>event,<sp/>which<sp/>can<sp/>be<sp/>used<sp/>to<sp/>abort<sp/>a<sp/>long<sp/>acquisition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>epicsEventWaitWithTimeout(this-&gt;stopEventId,<sp/><ref refid="pilatus_detector_8cpp_1ae2292935ae37cd9f1c9d49837a74a793" kindref="member">FILE_READ_DELAY</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>epicsEventWaitOK)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Acquisition<sp/>aborted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;tCheck);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaTime<sp/>=<sp/>epicsTimeDiffInSeconds(&amp;tCheck,<sp/>&amp;tStart);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>timeout<sp/>waiting<sp/>for<sp/>file<sp/>to<sp/>be<sp/>created<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>fileName);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileExists)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>file<sp/>exists<sp/>but<sp/>is<sp/>more<sp/>than<sp/>10<sp/>seconds<sp/>old,<sp/>possible<sp/>clock<sp/>synchronization<sp/>problem\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>file<sp/>is<sp/>more<sp/>than<sp/>10<sp/>seconds<sp/>old&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Timeout<sp/>waiting<sp/>for<sp/>file<sp/>to<sp/>be<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynSuccess);</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pilatusDetector::correctBadPixels(<ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numBadPixels;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpilatus_detector_1a050b3d9e5782b4df14803c7c2dd7ef73" kindref="member">PilatusNumBadPixels</ref>,<sp/>&amp;numBadPixels);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;numBadPixels;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((epicsInt32<sp/>*)pImage-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>)[this-&gt;badPixelMap[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].<ref refid="classbad_pixel_1a2ec2f7a408176a14a0af69a51dcfb6ee" kindref="member">badIndex</ref>]<sp/>=<sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((epicsInt32<sp/>*)pImage-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>)[this-&gt;badPixelMap[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].<ref refid="classbad_pixel_1a8403e29869590856ae864542a816c9cf" kindref="member">replaceIndex</ref>];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pilatusDetector::stringEndsWith(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*aString,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*aSubstring,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shouldIgnoreCase)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>=<sp/>strlen(aString)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>strlen(aSubstring)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>j<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldIgnoreCase)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tolower(aString[i])<sp/>!=<sp/>tolower(aSubstring[j]))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aString[i]<sp/>!=<sp/>aSubstring[j])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>--;<sp/>j--;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>j<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">asynStatus<sp/>pilatusDetector::readImageFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/>epicsTimeStamp<sp/>*pStartTime,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage)</highlight></codeline>
<codeline lineno="476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;readImageFile&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringEndsWith(fileName,<sp/></highlight><highlight class="stringliteral">&quot;.tif&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>||<sp/>stringEndsWith(fileName,<sp/></highlight><highlight class="stringliteral">&quot;.tiff&quot;</highlight><highlight class="normal">,<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>readTiff(fileName,<sp/>pStartTime,<sp/>timeout,<sp/>pImage);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringEndsWith(fileName,<sp/></highlight><highlight class="stringliteral">&quot;.cbf&quot;</highlight><highlight class="normal">,<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>readCbf(fileName,<sp/>pStartTime,<sp/>timeout,<sp/>pImage);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>unsupported<sp/>image<sp/>file<sp/>name<sp/>extension,<sp/>expected<sp/>.tif<sp/>or<sp/>.cbf,<sp/>fileName=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>fileName);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>file<sp/>extension,<sp/>expected<sp/>.tif<sp/>or<sp/>.cbf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal">asynStatus<sp/>pilatusDetector::readCbf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/>epicsTimeStamp<sp/>*pStartTime,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeStamp<sp/>tStart,<sp/>tCheck;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaTime;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status=-1;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;readCbf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>cbf_handle<sp/>cbf;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*file=NULL;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cbfCompression;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cbfBinaryId;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cbfElSize;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cbfElSigned;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cbfElUnsigned;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cbfElements;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cbfMinElement;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cbfMaxElement;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cbfByteOrder;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cbfDimFast;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cbfDimMid;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cbfDimSlow;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cbfPadding;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cbfElementsRead;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaTime<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;tStart);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>waitForFileToExist(fileName,<sp/>pStartTime,<sp/>timeout,<sp/>pImage);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((asynStatus)status);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>cbf_set_warning_messages_enabled(0);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>cbf_set_error_messages_enabled(0);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(deltaTime<sp/>&lt;=<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>this<sp/>point<sp/>we<sp/>know<sp/>the<sp/>file<sp/>exists,<sp/>but<sp/>it<sp/>may<sp/>not<sp/>be<sp/>completely</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>written<sp/>yet.<sp/><sp/>If<sp/>we<sp/>get<sp/>errors<sp/>then<sp/>try<sp/>again.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>cbf_make_handle(&amp;cbf);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>failed<sp/>to<sp/>make<sp/>CBF<sp/>handle,<sp/>error<sp/>code<sp/>%#x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>status);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>cbf_set_cbf_logfile(cbf,<sp/>NULL);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>failed<sp/>to<sp/>disable<sp/>CBF<sp/>logging,<sp/>error<sp/>code<sp/>%#x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>status);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>=<sp/>fopen(fileName,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>failed<sp/>to<sp/>open<sp/>CBF<sp/>file<sp/>\&quot;%s\&quot;<sp/>for<sp/>reading:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>fileName,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbf_free_handle(cbf);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>cbf_read_widefile(cbf,<sp/>file,<sp/>MSG_DIGESTNOW);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>cbf_find_tag(cbf,<sp/></highlight><highlight class="stringliteral">&quot;_array_data.data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>some<sp/>basic<sp/>checking<sp/>that<sp/>the<sp/>image<sp/>size<sp/>is<sp/>what<sp/>we<sp/>expect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>cbf_get_integerarrayparameters_wdims_fs(cbf,<sp/>&amp;cbfCompression,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cbfBinaryId,<sp/>&amp;cbfElSize,<sp/>&amp;cbfElSigned,<sp/>&amp;cbfElUnsigned,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cbfElements,<sp/>&amp;cbfMinElement,<sp/>&amp;cbfMaxElement,<sp/>&amp;cbfByteOrder,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cbfDimFast,<sp/>&amp;cbfDimMid,<sp/>&amp;cbfDimSlow,<sp/>&amp;cbfPadding);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cbfDimFast<sp/>!=<sp/>pImage-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>image<sp/>width<sp/>incorrect<sp/>=%lu,<sp/>should<sp/>be<sp/>%lu\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)cbfDimFast,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)pImage-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbf_free_handle(cbf);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cbfDimMid<sp/>!=<sp/>pImage-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[1].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>image<sp/>height<sp/>incorrect<sp/>=%lu,<sp/>should<sp/>be<sp/>%lu\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)cbfDimMid,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)pImage-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[1].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbf_free_handle(cbf);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>the<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>cbf_get_integerarray(cbf,<sp/>&amp;cbfBinaryId,<sp/>pImage-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(epicsInt32),<sp/>1,<sp/>cbfElements,<sp/>&amp;cbfElementsRead);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cbfElements<sp/>!=<sp/>cbfElementsRead)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sucesss!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>cbf_free_handle(cbf);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>failed<sp/>to<sp/>free<sp/>CBF<sp/>handle,<sp/>error<sp/>code<sp/>%#x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>status);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry:</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>cbf_free_handle(cbf);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>failed<sp/>to<sp/>free<sp/>CBF<sp/>handle,<sp/>error<sp/>code<sp/>%#x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>status);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sleep,<sp/>but<sp/>check<sp/>for<sp/>stop<sp/>event,<sp/>which<sp/>can<sp/>be<sp/>used<sp/>to<sp/>abort<sp/>a<sp/>long</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>acquisition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>epicsEventWaitWithTimeout(this-&gt;stopEventId,<sp/><ref refid="pilatus_detector_8cpp_1ae2292935ae37cd9f1c9d49837a74a793" kindref="member">FILE_READ_DELAY</ref>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>epicsEventWaitOK)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;tCheck);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaTime<sp/>=<sp/>epicsTimeDiffInSeconds(&amp;tCheck,<sp/>&amp;tStart);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>correctBadPixels(pImage);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynSuccess);</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal">asynStatus<sp/>pilatusDetector::readTiff(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/>epicsTimeStamp<sp/>*pStartTime,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage)</highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeStamp<sp/>tStart,<sp/>tCheck;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaTime;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status=-1;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;readTiff&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>totalSize;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numStrips,<sp/>strip;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*imageDescription;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tempBuffer[2048];</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>TIFF<sp/>*tiff=NULL;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsUInt32<sp/>uval;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_n_d_array_info" kindref="compound">NDArrayInfo</ref><sp/>arrayInfo;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1a47af97c0e2b8255d756207908f6b470d" kindref="member">getInfo</ref>(&amp;arrayInfo);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaTime<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;tStart);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Suppress<sp/>error<sp/>messages<sp/>from<sp/>the<sp/>TIFF<sp/>library<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>TIFFSetErrorHandler(NULL);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>TIFFSetWarningHandler(NULL);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>waitForFileToExist(fileName,<sp/>pStartTime,<sp/>timeout,<sp/>pImage);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((asynStatus)status);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(deltaTime<sp/>&lt;=<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>this<sp/>point<sp/>we<sp/>know<sp/>the<sp/>file<sp/>exists,<sp/>but<sp/>it<sp/>may<sp/>not<sp/>be<sp/>completely<sp/>written<sp/>yet.</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>we<sp/>get<sp/>errors<sp/>then<sp/>try<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tiff<sp/>=<sp/>TIFFOpen(fileName,<sp/></highlight><highlight class="stringliteral">&quot;rc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tiff<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>some<sp/>basic<sp/>checking<sp/>that<sp/>the<sp/>image<sp/>size<sp/>is<sp/>what<sp/>we<sp/>expect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>TIFFGetField(tiff,<sp/>TIFFTAG_IMAGEWIDTH,<sp/>&amp;uval);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uval<sp/>!=<sp/>(epicsUInt32)pImage-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>image<sp/>width<sp/>incorrect<sp/>=%u,<sp/>should<sp/>be<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>uval,<sp/>(epicsUInt32)pImage-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>TIFFGetField(tiff,<sp/>TIFFTAG_IMAGELENGTH,<sp/>&amp;uval);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uval<sp/>!=<sp/>(epicsUInt32)pImage-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[1].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>image<sp/>length<sp/>incorrect<sp/>=%u,<sp/>should<sp/>be<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>uval,<sp/>(epicsUInt32)pImage-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[1].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numStrips=<sp/>TIFFNumberOfStrips(tiff);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pImage-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(strip=0;<sp/>(strip<sp/>&lt;<sp/>numStrips)<sp/>&amp;&amp;<sp/>(totalSize<sp/>&lt;<sp/>arrayInfo.<ref refid="struct_n_d_array_info_1af8f050c2c099f07311a39cc544693d00" kindref="member">totalBytes</ref>);<sp/>strip++)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>TIFFReadEncodedStrip(tiff,<sp/>0,<sp/>buffer,<sp/>arrayInfo.<ref refid="struct_n_d_array_info_1af8f050c2c099f07311a39cc544693d00" kindref="member">totalBytes</ref>-totalSize);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>was<sp/>an<sp/>error<sp/>reading<sp/>the<sp/>file.<sp/><sp/>Most<sp/>commonly<sp/>this<sp/>is<sp/>because<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>was<sp/>not<sp/>yet<sp/>completely<sp/>written.<sp/><sp/>Try<sp/>again.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_FLOW,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>error<sp/>reading<sp/>TIFF<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>fileName);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalSize<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalSize<sp/>!=<sp/>arrayInfo.<ref refid="struct_n_d_array_info_1af8f050c2c099f07311a39cc544693d00" kindref="member">totalBytes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s,<sp/>file<sp/>size<sp/>incorrect<sp/>=%lu,<sp/>should<sp/>be<sp/>%lu\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)totalSize,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)arrayInfo.<ref refid="struct_n_d_array_info_1af8f050c2c099f07311a39cc544693d00" kindref="member">totalBytes</ref>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sucesss!<sp/>Read<sp/>the<sp/>IMAGEDESCRIPTION<sp/>tag<sp/>if<sp/>it<sp/>exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>TIFFGetField(tiff,<sp/>TIFFTAG_IMAGEDESCRIPTION,<sp/>&amp;imageDescription);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>string<sp/>is<sp/>null<sp/>terminated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(tempBuffer,<sp/>imageDescription,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tempBuffer));</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>string<sp/>is<sp/>null<sp/>terminated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempBuffer[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tempBuffer)-1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1af5aad7b41118f465621cf045ed957469" kindref="member">pAttributeList</ref>-&gt;<ref refid="class_n_d_attribute_list_1aa86fbdd59e20b734b86b2464f470d752" kindref="member">add</ref>(</highlight><highlight class="stringliteral">&quot;TIFFImageDescription&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TIFFImageDescription&quot;</highlight><highlight class="normal">,<sp/><ref refid="_n_d_attribute_8h_1a8a795995acde8458f43ac9b01376ef07a5d41bd9ecc9dc999c488965442f7502a" kindref="member">NDAttrString</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry:</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tiff<sp/>!=<sp/>NULL)<sp/>TIFFClose(tiff);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tiff<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sleep,<sp/>but<sp/>check<sp/>for<sp/>stop<sp/>event,<sp/>which<sp/>can<sp/>be<sp/>used<sp/>to<sp/>abort<sp/>a<sp/>long<sp/>acquisition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>epicsEventWaitWithTimeout(this-&gt;stopEventId,<sp/><ref refid="pilatus_detector_8cpp_1ae2292935ae37cd9f1c9d49837a74a793" kindref="member">FILE_READ_DELAY</ref>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>epicsEventWaitOK)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;tCheck);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaTime<sp/>=<sp/>epicsTimeDiffInSeconds(&amp;tCheck,<sp/>&amp;tStart);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tiff<sp/>!=<sp/>NULL)<sp/>TIFFClose(tiff);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>correctBadPixels(pImage);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynSuccess);</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal">asynStatus<sp/>pilatusDetector::setAcquireParams()</highlight></codeline>
<codeline lineno="749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ival;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dval;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>triggerMode;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*substr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixelCutOff<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>getIntegerParam(<ref refid="class_a_d_driver_1ae191abe1436e6dd02510fcbbac59dbc1" kindref="member">ADTriggerMode</ref>,<sp/>&amp;triggerMode);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess)<sp/>triggerMode<sp/>=<sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47acda9ee85028a22f342355d14bd5d4956" kindref="member">TMInternal</ref>;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>we<sp/>change<sp/>modes<sp/>download<sp/>all<sp/>exposure<sp/>parameters,<sp/>since<sp/>some<sp/>modes</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>replace<sp/>values<sp/>with<sp/>new<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(triggerMode<sp/>==<sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a45aa30189155eb9f2a229b73fe9f65f7" kindref="member">TMAlignment</ref>)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>getIntegerParam(<ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>,<sp/>&amp;ival);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((status<sp/>!=<sp/>asynSuccess)<sp/>||<sp/>(ival<sp/>&lt;<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ival<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>,<sp/>ival);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;nimages<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>ival);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);<sp/></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>getIntegerParam(<ref refid="class_a_d_driver_1a25e11dff81ea84715fc8fe5ca290bacb" kindref="member">ADNumExposures</ref>,<sp/>&amp;ival);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((status<sp/>!=<sp/>asynSuccess)<sp/>||<sp/>(ival<sp/>&lt;<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ival<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a25e11dff81ea84715fc8fe5ca290bacb" kindref="member">ADNumExposures</ref>,<sp/>ival);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;nexpframe<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>ival);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);<sp/></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>getDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref>,<sp/>&amp;dval);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((status<sp/>!=<sp/>asynSuccess)<sp/>||<sp/>(dval<sp/>&lt;<sp/>0.))<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dval<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref>,<sp/>dval);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;exptime<sp/>%11.8f&quot;</highlight><highlight class="normal">,<sp/>dval);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>getDoubleParam(<ref refid="class_a_d_driver_1a8d5333aa86509cbd8f5fd824e79b2799" kindref="member">ADAcquirePeriod</ref>,<sp/>&amp;dval);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((status<sp/>!=<sp/>asynSuccess)<sp/>||<sp/>(dval<sp/>&lt;<sp/>0.))<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dval<sp/>=<sp/>2.;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_a_d_driver_1a8d5333aa86509cbd8f5fd824e79b2799" kindref="member">ADAcquirePeriod</ref>,<sp/>dval);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;expperiod<sp/>%11.8f&quot;</highlight><highlight class="normal">,<sp/>dval);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>getDoubleParam(<ref refid="classpilatus_detector_1a9417cd52ce7d978f1a383b76fce1aa9c" kindref="member">PilatusDelayTime</ref>,<sp/>&amp;dval);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((status<sp/>!=<sp/>asynSuccess)<sp/>||<sp/>(dval<sp/>&lt;<sp/>0.))<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dval<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a9417cd52ce7d978f1a383b76fce1aa9c" kindref="member">PilatusDelayTime</ref>,<sp/>dval);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;delay<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>dval);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>getIntegerParam(<ref refid="classpilatus_detector_1aba84bfa780f1f6a8e93728c237ae1552" kindref="member">PilatusGapFill</ref>,<sp/>&amp;ival);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((status<sp/>!=<sp/>asynSuccess)<sp/>||<sp/>(ival<sp/>&lt;<sp/>-2)<sp/>||<sp/>(ival<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ival<sp/>=<sp/>-2;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1aba84bfa780f1f6a8e93728c237ae1552" kindref="member">PilatusGapFill</ref>,<sp/>ival);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-2<sp/>is<sp/>used<sp/>to<sp/>indicate<sp/>that<sp/>GapFill<sp/>is<sp/>not<sp/>supported<sp/>because<sp/>it<sp/>is<sp/>a<sp/>single<sp/>element<sp/>detector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ival<sp/>!=<sp/>-2)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;gapfill<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>ival);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);<sp/></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>back<sp/>the<sp/>pixel<sp/>count<sp/>rate<sp/>cut<sp/>off<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;Tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>status=writeReadCamserver(5.0);<sp/></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Response<sp/>contains<sp/>the<sp/>string<sp/>&quot;cutoff<sp/>=<sp/>1221026<sp/>counts&quot;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status)<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((substr<sp/>=<sp/>strstr(this-&gt;fromCamserver,<sp/></highlight><highlight class="stringliteral">&quot;cutoff&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(substr,<sp/></highlight><highlight class="stringliteral">&quot;cutoff<sp/>=<sp/>%d<sp/>counts&quot;</highlight><highlight class="normal">,<sp/>&amp;pixelCutOff);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1a2c809831fea29896b9c3ef1d8e579624" kindref="member">PilatusPixelCutOff</ref>,<sp/>pixelCutOff);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynSuccess);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal">asynStatus<sp/>pilatusDetector::setThreshold()</highlight></codeline>
<codeline lineno="834"><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>igain,<sp/>status;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold,<sp/>dgain,<sp/>energy;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*substr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threshold_readback<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>energy_readback<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1af7a169a1ab5a9069c5d556bf5c7ac387" kindref="member">ADGain</ref>,<sp/>&amp;dgain);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>igain<sp/>=<sp/>(int)(dgain<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(igain<sp/>&lt;<sp/>0)<sp/>igain<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(igain<sp/>&gt;<sp/>3)<sp/>igain<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold<sp/>=<sp/>this-&gt;demandedThreshold;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>energy<sp/>=<sp/>this-&gt;demandedEnergy;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(energy<sp/>==<sp/>0.)<sp/>energy<sp/>=<sp/>threshold<sp/>*<sp/>2.;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;SetThreshold<sp/>energy<sp/>%.0f<sp/>%s<sp/>%.0f&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy*1000.,<sp/>gainStrings[igain],<sp/>threshold*1000.);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>status<sp/>to<sp/>waiting<sp/>so<sp/>we<sp/>can<sp/>be<sp/>notified<sp/>when<sp/>it<sp/>has<sp/>finished<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5f0661ab013affe1ec15bf297bcf40f" kindref="member">ADStatusWaiting</ref>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>threshold&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>status=writeReadCamserver(110.0);<sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>command<sp/>can<sp/>take<sp/>96<sp/>seconds<sp/>on<sp/>a<sp/>6M<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref>);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5aabf2281b95d16f607f1a7b1c5a8bd" kindref="member">ADStatusIdle</ref>);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1a91f9cd10a889a2d33541d5313caa6503" kindref="member">PilatusThresholdApply</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>back<sp/>the<sp/>actual<sp/>threshold<sp/>setting,<sp/>in<sp/>case<sp/>we<sp/>are<sp/>out<sp/>of<sp/>bounds.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;SetThreshold&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>status=writeReadCamserver(5.0);<sp/></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Response<sp/>should<sp/>contain<sp/>&quot;threshold:<sp/>9000<sp/>eV;<sp/>vcmp:&quot;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((substr<sp/>=<sp/>strstr(this-&gt;fromCamserver,<sp/></highlight><highlight class="stringliteral">&quot;threshold:<sp/>&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(strtok(substr,<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;threshold:<sp/>%d<sp/>eV&quot;</highlight><highlight class="normal">,<sp/>&amp;threshold_readback);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1aff068b875061c1db19bc428a303f0004" kindref="member">PilatusThreshold</ref>,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)threshold_readback/1000.0);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>back<sp/>the<sp/>actual<sp/>energy<sp/>setting.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;SetEnergy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>status=writeReadCamserver(5.0);<sp/></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Response<sp/>should<sp/>contain<sp/>&quot;threshold:<sp/>9000<sp/>eV;<sp/>vcmp:&quot;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(this-&gt;fromCamserver,<sp/></highlight><highlight class="stringliteral">&quot;15<sp/>OK<sp/>Energy<sp/>setting:<sp/>%d<sp/>eV&quot;</highlight><highlight class="normal">,<sp/>&amp;energy_readback);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a5b347e6c7d2a82b6fe63dee28f3fbb23" kindref="member">PilatusEnergy</ref>,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)energy_readback/1000.0);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>SetThreshold<sp/>command<sp/>resets<sp/>numimages<sp/>to<sp/>1<sp/>and<sp/>gapfill<sp/>to<sp/>0,<sp/>so<sp/>re-send<sp/>current</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>acquisition<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>setAcquireParams();</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynSuccess);</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal">asynStatus<sp/>pilatusDetector::resetModulePower()</highlight></codeline>
<codeline lineno="894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resetTime;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName=</highlight><highlight class="stringliteral">&quot;resetModulePower&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>command<sp/>only<sp/>exists<sp/>on<sp/>camserver<sp/>7.9.0<sp/>and<sp/>higher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((camserverMajor<sp/>&lt;<sp/>7)<sp/>||<sp/>((camserverMajor<sp/>==<sp/>7)<sp/>&amp;&amp;<sp/>(camserverMinor<sp/>&lt;<sp/>9)))<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>ResetModulePower<sp/>not<sp/>supported<sp/>on<sp/>version<sp/>%d.%d.%d<sp/>of<sp/>camserver\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>camserverMajor,<sp/>camserverMinor,<sp/>camserverPatch);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Resetting<sp/>module<sp/>power&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpilatus_detector_1a66b08dbbe3dfc9680d033b80c2563b5b" kindref="member">PilatusResetPowerTime</ref>,<sp/>&amp;resetTime);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;ResetModulePower<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>resetTime);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1a1b93c34902dd8b7b05bc40b5ab4c9044" kindref="member">CAMSERVER_RESET_POWER_TIMEOUT</ref><sp/>+<sp/>resetTime);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>set<sp/>the<sp/>threshold<sp/>after<sp/>resetting<sp/>module<sp/>power</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>setThreshold();</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal">asynStatus<sp/>pilatusDetector::writeCamserver(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="916"><highlight class="normal">{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nwrite;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName=</highlight><highlight class="stringliteral">&quot;writeCamserver&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>any<sp/>stale<sp/>input,<sp/>since<sp/>the<sp/>next<sp/>operation<sp/>is<sp/>likely<sp/>to<sp/>be<sp/>a<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pasynOctetSyncIO-&gt;flush(this-&gt;pasynUserCamserver);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pasynOctetSyncIO-&gt;write(this-&gt;pasynUserCamserver,<sp/>this-&gt;toCamserver,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strlen(this-&gt;toCamserver),<sp/>timeout,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nwrite);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s,<sp/>status=%d,<sp/>sent\n%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>status,<sp/>this-&gt;toCamserver);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>output<sp/>string<sp/>so<sp/>it<sp/>can<sp/>get<sp/>back<sp/>to<sp/>EPICS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1a9f521abfc93c9ccba2b0e83acace6d0e" kindref="member">ADStringToServer</ref>,<sp/>this-&gt;toCamserver);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(status);</highlight></codeline>
<codeline lineno="935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal">asynStatus<sp/>pilatusDetector::readCamserver(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nread;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status=asynSuccess;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eventStatus;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>asynUser<sp/>*pasynUser<sp/>=<sp/>this-&gt;pasynUserCamserver;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eomReason;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeStamp<sp/>tStart,<sp/>tCheck;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaTime;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName=</highlight><highlight class="stringliteral">&quot;readCamserver&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>implement<sp/>the<sp/>timeout<sp/>with<sp/>a<sp/>loop<sp/>so<sp/>that<sp/>the<sp/>port<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>block<sp/>during<sp/>the<sp/>entire<sp/>read.<sp/><sp/>If<sp/>we<sp/>don&apos;t<sp/>do<sp/>this<sp/>then<sp/>it<sp/>is<sp/>not<sp/>possible</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>abort<sp/>a<sp/>long<sp/>exposure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;tStart);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(deltaTime<sp/>&lt;=<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pasynOctetSyncIO-&gt;read(pasynUser,<sp/>this-&gt;fromCamserver,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;fromCamserver),<sp/><ref refid="pilatus_detector_8cpp_1a5eaca2ba2c7e7c7bfca7166ab3124758" kindref="member">ASYN_POLL_TIME</ref>,</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nread,<sp/>&amp;eomReason);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>an<sp/>abort<sp/>event<sp/>sent<sp/>during<sp/>a<sp/>read.<sp/>Otherwise<sp/>we<sp/>can<sp/>miss<sp/>it<sp/>and<sp/>mess<sp/>up<sp/>the<sp/>next<sp/>acqusition.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventStatus<sp/>=<sp/>epicsEventWaitWithTimeout(this-&gt;stopEventId,<sp/>0.001);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eventStatus<sp/>==<sp/>epicsEventWaitOK)<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Acquisition<sp/>aborted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref>);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynTimeout)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sleep,<sp/>but<sp/>check<sp/>for<sp/>stop<sp/>event,<sp/>which<sp/>can<sp/>be<sp/>used<sp/>to<sp/>abort<sp/>a<sp/>long<sp/>acquisition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventStatus<sp/>=<sp/>epicsEventWaitWithTimeout(this-&gt;stopEventId,<sp/><ref refid="pilatus_detector_8cpp_1a5eaca2ba2c7e7c7bfca7166ab3124758" kindref="member">ASYN_POLL_TIME</ref>);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eventStatus<sp/>==<sp/>epicsEventWaitOK)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Acquisition<sp/>aborted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref>);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;tCheck);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaTime<sp/>=<sp/>epicsTimeDiffInSeconds(&amp;tCheck,<sp/>&amp;tStart);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>got<sp/>asynTimeout,<sp/>and<sp/>timeout=0<sp/>then<sp/>this<sp/>is<sp/>not<sp/>an<sp/>error,<sp/>it<sp/>is<sp/>a<sp/>poll<sp/>checking<sp/>for<sp/>possible<sp/>reply<sp/>and<sp/>we<sp/>are<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((status<sp/>==<sp/>asynTimeout)<sp/>&amp;&amp;<sp/>(timeout<sp/>==<sp/>0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynSuccess);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess)</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s,<sp/>timeout=%f,<sp/>status=%d<sp/>received<sp/>%lu<sp/>bytes\n%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>timeout,<sp/>status,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)nread,<sp/>this-&gt;fromCamserver);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>the<sp/>string<sp/>OK<sp/>in<sp/>the<sp/>response<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strstr(this-&gt;fromCamserver,<sp/></highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s<sp/>unexpected<sp/>response<sp/>from<sp/>camserver,<sp/>no<sp/>OK,<sp/>response=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>this-&gt;fromCamserver);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>from<sp/>camserver&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Camserver<sp/>returned<sp/>OK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>output<sp/>string<sp/>so<sp/>it<sp/>can<sp/>get<sp/>back<sp/>to<sp/>EPICS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1adb837da5ddf5ba868ea2dea316254c41" kindref="member">ADStringFromServer</ref>,<sp/>this-&gt;fromCamserver);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(status);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal">asynStatus<sp/>pilatusDetector::writeReadCamserver(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeCamserver(timeout);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>readCamserver(timeout);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pilatusTaskC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*drvPvt)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpilatus_detector" kindref="compound">pilatusDetector</ref><sp/>*pPvt<sp/>=<sp/>(<ref refid="classpilatus_detector" kindref="compound">pilatusDetector</ref><sp/>*)drvPvt;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="classpilatus_detector_1a16e0b53f2f9d509f585c93989e4add96" kindref="member">pilatusTask</ref>();</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1a16e0b53f2f9d509f585c93989e4add96" kindref="member">pilatusDetector::pilatusTask</ref>()</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageCounter;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numImages;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numExposures;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multipleFileNextImage=0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>next<sp/>image<sp/>number,<sp/>starting<sp/>at<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>acquire;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72e" kindref="member">ADStatus_t</ref><sp/>acquiring;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startAngle;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acquireTime,<sp/>acquirePeriod;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>readImageFileTimeout,<sp/>timeout;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>triggerMode;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeStamp<sp/>startTime;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pilatusTask&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>headerString[<ref refid="pilatus_detector_8cpp_1ae85fa292fde183a9e7e0afbf1dd728b5" kindref="member">MAX_HEADER_STRING_LEN</ref>];</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fullFileName[<ref refid="pilatus_detector_8cpp_1acc9794f655f61a3246ba3fd5c9c67e14" kindref="member">MAX_FILENAME_LEN</ref>];</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>filePath[<ref refid="pilatus_detector_8cpp_1acc9794f655f61a3246ba3fd5c9c67e14" kindref="member">MAX_FILENAME_LEN</ref>];</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>statusMessage[<ref refid="pilatus_detector_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dims[2];</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itemp;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arrayCallbacks;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flatFieldValid;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aborted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>statusParam<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>forever<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>acquisition<sp/>active?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>&amp;acquire);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>are<sp/>not<sp/>acquiring<sp/>then<sp/>wait<sp/>for<sp/>a<sp/>semaphore<sp/>that<sp/>is<sp/>given<sp/>when<sp/>acquisition<sp/>is<sp/>started<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((aborted)<sp/>||<sp/>(!acquire))<sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>set<sp/>the<sp/>status<sp/>message<sp/>if<sp/>we<sp/>didn&apos;t<sp/>encounter<sp/>any<sp/>errors<sp/>last<sp/>time,<sp/>so<sp/>we<sp/>don&apos;t<sp/>overwrite<sp/>the<sp/></highlight></codeline>
<codeline lineno="1062"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>acquire<sp/>command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>the<sp/>lock<sp/>while<sp/>we<sp/>wait<sp/>for<sp/>an<sp/>event<sp/>that<sp/>says<sp/>acquire<sp/>has<sp/>started,<sp/>then<sp/>lock<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_FLOW,<sp/></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>waiting<sp/>for<sp/>acquire<sp/>to<sp/>start\n&quot;</highlight><highlight class="normal">,<sp/>driverName,<sp/>functionName);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>epicsEventWait(this-&gt;startEventId);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aborted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquire<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>acquiring.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>current<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;startTime);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>exposure<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref>,<sp/>&amp;acquireTime);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1a8d5333aa86509cbd8f5fd824e79b2799" kindref="member">ADAcquirePeriod</ref>,<sp/>&amp;acquirePeriod);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpilatus_detector_1a10c5bbd2c3538f95dd89c832d22d30b8" kindref="member">PilatusImageFileTmot</ref>,<sp/>&amp;readImageFileTimeout);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>acquisition<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1ae191abe1436e6dd02510fcbbac59dbc1" kindref="member">ADTriggerMode</ref>,<sp/>&amp;triggerMode);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>,<sp/>&amp;numImages);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a25e11dff81ea84715fc8fe5ca290bacb" kindref="member">ADNumExposures</ref>,<sp/>&amp;numExposures);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquiring<sp/>=<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea197b4bb1a794d6799db204a5dec4fbd2" kindref="member">ADStatusAcquire</ref>;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/>acquiring);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>MX<sp/>settings<sp/>start<sp/>angle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpilatus_detector_1a70c8b3d21e8fbcd7c78eb60a66162987" kindref="member">PilatusStartAngle</ref>,<sp/>&amp;startAngle);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Start_angle<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>startAngle);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>header<sp/>string.<sp/><sp/>This<sp/>needs<sp/>to<sp/>be<sp/>sent<sp/>for<sp/>each<sp/>exposure<sp/>command.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(<ref refid="classpilatus_detector_1a5935548bc3b4d58f74d9deba3d1cf91b" kindref="member">PilatusHeaderString</ref>,<sp/><ref refid="pilatus_detector_8cpp_1ae85fa292fde183a9e7e0afbf1dd728b5" kindref="member">MAX_HEADER_STRING_LEN</ref>,<sp/>headerString);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;HeaderString<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/>headerString);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>full<sp/>filename<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1a813f6c84e96329cd89653a3b0497f8a9" kindref="member">createFileName</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fullFileName),<sp/>fullFileName);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(triggerMode)<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47acda9ee85028a22f342355d14bd5d4956" kindref="member">TMInternal</ref>:</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Exposure<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>fullFileName);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a553172af0e9d5df0dd5e0b3d5d6fa7a3" kindref="member">TMExternalEnable</ref>:</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ExtEnable<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>fullFileName);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a3e91843218a66b417febea94696fabff" kindref="member">TMExternalTrigger</ref>:</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ExtTrigger<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>fullFileName);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a02e7c3822dd1e2c630b0a99edaea977d" kindref="member">TMMultipleExternalTrigger</ref>:</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ExtMTrigger<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>fullFileName);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a45aa30189155eb9f2a229b73fe9f65f7" kindref="member">TMAlignment</ref>:</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getStringParam(<ref refid="classasyn_n_d_array_driver_1ac511e9800761d6cb070d3540940b24c3" kindref="member">NDFilePath</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(filePath),<sp/>filePath);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(fullFileName,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fullFileName),<sp/></highlight><highlight class="stringliteral">&quot;%salignment.tif&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filePath);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Exposure<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>fullFileName);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>exposure&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>acquire<sp/>command<sp/>to<sp/>camserver<sp/>and<sp/>wait<sp/>for<sp/>the<sp/>15OK<sp/>response<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(2.0);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>another<sp/>read<sp/>in<sp/>case<sp/>there<sp/>is<sp/>an<sp/>ERR<sp/>string<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>input<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status=readCamserver(0.0);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>status<sp/>wasn&apos;t<sp/>asynSuccess<sp/>or<sp/>asynTimeout,<sp/>report<sp/>the<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status&gt;1)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquire<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>status<sp/>back<sp/>to<sp/>asynSuccess<sp/>as<sp/>the<sp/>timeout<sp/>was<sp/>expected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>the<sp/>shutter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_d_driver_1ac05bfd5d3c6bc63910d6fbd4fb909d50" kindref="member">setShutter</ref>(1);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>armed<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1a1a590ab953e612cb889621987330108a" kindref="member">PilatusArmed</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>format<sp/>string<sp/>for<sp/>constructing<sp/>file<sp/>names<sp/>for<sp/>multi-image<sp/>collection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makeMultipleFileFormat(fullFileName);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multipleFileNextImage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>callbacks<sp/>to<sp/>update<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1ad109404880a23929fc17dea1f09e0775" kindref="member">NDFullFileName</ref>,<sp/>fullFileName);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(acquire)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numImages<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>single<sp/>frame<sp/>or<sp/>alignment<sp/>mode<sp/>need<sp/>to<sp/>wait<sp/>for<sp/>7OK<sp/>response<sp/>from<sp/>camserver</highlight></codeline>
<codeline lineno="1159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>saying<sp/>acquisition<sp/>is<sp/>complete<sp/>before<sp/>trying<sp/>to<sp/>read<sp/>file,<sp/>else<sp/>we<sp/>get<sp/>a</highlight></codeline>
<codeline lineno="1160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>recent<sp/>but<sp/>stale<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>7OK<sp/>response&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>((numExposures-1)<sp/>*<sp/>acquirePeriod)<sp/>+<sp/>acquireTime;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>readCamserver(timeout<sp/>+<sp/><ref refid="pilatus_detector_8cpp_1a2a1c574af35da5ef9e409906d878e370" kindref="member">CAMSERVER_ACQUIRE_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>was<sp/>an<sp/>error<sp/>jump<sp/>to<sp/>bottom<sp/>of<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquire<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aborted<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status==asynTimeout)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Timeout<sp/>waiting<sp/>for<sp/>camserver<sp/>response&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;camcmd<sp/>k&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>a<sp/>multi-file<sp/>acquisition<sp/>the<sp/>file<sp/>name<sp/>is<sp/>built<sp/>differently<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(fullFileName,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fullFileName),<sp/>multipleFileFormat,<sp/></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multipleFileNumber);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1ad109404880a23929fc17dea1f09e0775" kindref="member">NDFullFileName</ref>,<sp/>fullFileName);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1af2354f73acece6ee2427f5069b16fdb5" kindref="member">NDArrayCallbacks</ref>,<sp/>&amp;arrayCallbacks);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arrayCallbacks)<sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>an<sp/>image<sp/>buffer<sp/>from<sp/>the<sp/>pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a535f4c7d03e30b1efe4f7dad854cfc3f" kindref="member">ADMaxSizeX</ref>,<sp/>&amp;itemp);<sp/>dims[0]<sp/>=<sp/>itemp;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a93caa26e32c3765ba19e1ac74a2f50cc" kindref="member">ADMaxSizeY</ref>,<sp/>&amp;itemp);<sp/>dims[1]<sp/>=<sp/>itemp;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage<sp/>=<sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1ad3969854a37329ef4061cc560e9022dc" kindref="member">pNDArrayPool</ref>-&gt;<ref refid="class_n_d_array_pool_1a26b4360694655c4af6c853c2f3d2ce5e" kindref="member">alloc</ref>(2,<sp/>dims,<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a460cbd8f43b3531669bc85cc3a4e9a80" kindref="member">NDInt32</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(statusMessage,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(statusMessage),<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>image<sp/>file<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>fullFileName);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/>statusMessage);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>release<sp/>the<sp/>mutex<sp/>when<sp/>calling<sp/>readImageFile,<sp/>because<sp/>this<sp/>takes<sp/>a<sp/>long<sp/>time<sp/>and</highlight></codeline>
<codeline lineno="1195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>need<sp/>to<sp/>allow<sp/>abort<sp/>operations<sp/>to<sp/>get<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>readImageFile(fullFileName,<sp/>&amp;startTime,<sp/></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(numExposures<sp/>*<sp/>acquireTime)<sp/>+<sp/>readImageFileTimeout,<sp/></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage);<sp/></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>was<sp/>an<sp/>error<sp/>jump<sp/>to<sp/>bottom<sp/>of<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquire<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aborted<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1a0c4c61ea4d44ce97db979d24305c996e" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>successfully<sp/>read<sp/>an<sp/>image<sp/>-<sp/>increment<sp/>the<sp/>array<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1abec5f5fc9922549d745d7dc7f19243ea" kindref="member">NDArrayCounter</ref>,<sp/>&amp;imageCounter);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageCounter++;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1abec5f5fc9922549d745d7dc7f19243ea" kindref="member">NDArrayCounter</ref>,<sp/>imageCounter);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>callbacks<sp/>to<sp/>update<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>assemble<sp/>the<sp/>NDArray<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpilatus_detector_1a16fc0bc6a1c360e1f377663b520748d6" kindref="member">PilatusFlatFieldValid</ref>,<sp/>&amp;flatFieldValid);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flatFieldValid)<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsInt32<sp/>*pData,<sp/>*pFlat;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0,<sp/>pData<sp/>=<sp/>(epicsInt32<sp/>*)pImage-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>,<sp/>pFlat<sp/>=<sp/>(epicsInt32<sp/>*)this-&gt;pFlatField-&gt;pData;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;dims[0]*dims[1];<sp/></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++,<sp/>pData++,<sp/>pFlat++)<sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pData<sp/>=<sp/>(epicsInt32)((this-&gt;averageFlatField<sp/>*<sp/>*pData)<sp/>/<sp/>*pFlat);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>frame<sp/>number<sp/>and<sp/>time<sp/>stamp<sp/>into<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1a62f165653bd0099f31b3d276bdb81d3c" kindref="member">uniqueId</ref><sp/>=<sp/>imageCounter;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1aae633d40e7b086edf7e1e8998b6e9a01" kindref="member">updateTimeStamps</ref>(pImage);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>any<sp/>attributes<sp/>that<sp/>have<sp/>been<sp/>defined<sp/>for<sp/>this<sp/>driver<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1a7492ba858d885e2ba226a1c7ef9dcf72" kindref="member">getAttributes</ref>(pImage-&gt;<ref refid="class_n_d_array_1af5aad7b41118f465621cf045ed957469" kindref="member">pAttributeList</ref>);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>NDArray<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_FLOW,<sp/></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>calling<sp/>NDArray<sp/>callback\n&quot;</highlight><highlight class="normal">,<sp/>driverName,<sp/>functionName);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doCallbacksGenericPointer(pImage,<sp/><ref refid="classasyn_n_d_array_driver_1a2b2fe51fba9a6ee4146813eac0c47fd1" kindref="member">NDArrayData</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>the<sp/>image<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1a0c4c61ea4d44ce97db979d24305c996e" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numImages<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(triggerMode<sp/>==<sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47a45aa30189155eb9f2a229b73fe9f65f7" kindref="member">TMAlignment</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Exposure<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>fullFileName);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>acquire<sp/>command<sp/>to<sp/>camserver<sp/>and<sp/>wait<sp/>for<sp/>the<sp/>15OK<sp/>response<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(2.0);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquire<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numImages<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multipleFileNextImage++;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multipleFileNumber++;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multipleFileNextImage<sp/>==<sp/>numImages)<sp/>acquire<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>done<sp/>acquiring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>the<sp/>7OK<sp/>response<sp/>from<sp/>camserver<sp/>in<sp/>the<sp/>case<sp/>of<sp/>multiple<sp/>images<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((numImages<sp/>&gt;<sp/>1)<sp/>&amp;&amp;<sp/>(status<sp/>==<sp/>asynSuccess))<sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>arrayCallbacks<sp/>is<sp/>0<sp/>we<sp/>will<sp/>have<sp/>gone<sp/>through<sp/>the<sp/>above<sp/>loop<sp/>without<sp/>waiting</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>each<sp/>image<sp/>file<sp/>to<sp/>be<sp/>written.<sp/><sp/>Thus,<sp/>we<sp/>may<sp/>need<sp/>to<sp/>wait<sp/>a<sp/>long<sp/>time<sp/>for</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>7OK<sp/>response.<sp/><sp/></highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>arrayCallbacks<sp/>is<sp/>1<sp/>then<sp/>the<sp/>response<sp/>should<sp/>arrive<sp/>fairly<sp/>soon.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arrayCallbacks)<sp/></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>readImageFileTimeout;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>(numImages<sp/>*<sp/>numExposures<sp/>*<sp/>acquirePeriod)<sp/>+<sp/><ref refid="pilatus_detector_8cpp_1a2a1c574af35da5ef9e409906d878e370" kindref="member">CAMSERVER_ACQUIRE_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>7OK<sp/>response&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>readCamserver(timeout);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>case<sp/>of<sp/>a<sp/>timeout,<sp/>camserver<sp/>could<sp/>still<sp/>be<sp/>acquiring.<sp/>So<sp/>we<sp/>need<sp/>to<sp/>send<sp/>a<sp/>stop.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynTimeout)<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Timeout<sp/>waiting<sp/>for<sp/>camserver<sp/>response&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;camcmd<sp/>k&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aborted<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>everything<sp/>was<sp/>ok,<sp/>set<sp/>the<sp/>status<sp/>back<sp/>to<sp/>idle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/>&amp;statusParam);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status)<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5aabf2281b95d16f607f1a7b1c5a8bd" kindref="member">ADStatusIdle</ref>);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(statusParam<sp/>!=<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref>);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>callbacks<sp/>to<sp/>update<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_d_driver_1ac05bfd5d3c6bc63910d6fbd4fb909d50" kindref="member">setShutter</ref>(0);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1a1a590ab953e612cb889621987330108a" kindref="member">PilatusArmed</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>callbacks<sp/>to<sp/>update<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal">asynStatus<sp/>pilatusDetector::pilatusStatus()</highlight></codeline>
<codeline lineno="1305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>humid<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*substr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>the<sp/>camserver<sp/>version<sp/>once.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstStatusCall)<sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>status=writeReadCamserver(1.0);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status)<sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Old<sp/>versions<sp/>return<sp/>strings<sp/>like<sp/>&quot;Code<sp/>release:<sp/><sp/>tvx-7.3.13-121212&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>versions<sp/>return<sp/>strings<sp/>like<sp/>&quot;Code<sp/>release:<sp/>7.9.0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>start<sp/>of<sp/>the<sp/>firmware<sp/>version<sp/>is<sp/>1<sp/>character<sp/>past<sp/>the<sp/>last<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>substr<sp/>=<sp/>strrchr(this-&gt;fromCamserver,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classpilatus_detector_1ac345c7c2a53c4aebc860a09e7f014882" kindref="member">PilatusTvxVersion</ref>,<sp/>substr);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1a89d5bd570163bd569bc6d2a2163da9c2" kindref="member">ADSDKVersion</ref>,<sp/>substr);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(substr[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">)<sp/>substr<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(substr,<sp/></highlight><highlight class="stringliteral">&quot;%d.%d.%d&quot;</highlight><highlight class="normal">,<sp/>&amp;camserverMajor,<sp/>&amp;camserverMinor,<sp/>&amp;camserverPatch);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5aabf2281b95d16f607f1a7b1c5a8bd" kindref="member">ADStatusIdle</ref>);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref>);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>firstStatusCall<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>temp<sp/>and<sp/>humidity.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>status=writeReadCamserver(1.0);<sp/></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Response<sp/>should<sp/>contain:<sp/></highlight></codeline>
<codeline lineno="1335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Channel<sp/>0:<sp/>Temperature<sp/>=<sp/>31.4C,<sp/>Rel.<sp/>Humidity<sp/>=<sp/>22.1%;\n</highlight></codeline>
<codeline lineno="1336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Channel<sp/>1:<sp/>Temperature<sp/>=<sp/>25.8C,<sp/>Rel.<sp/>Humidity<sp/>=<sp/>33.5%;\n</highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Channel<sp/>2:<sp/>Temperature<sp/>=<sp/>28.6C,<sp/>Rel.<sp/>Humidity<sp/>=<sp/>2.0%</highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>However,<sp/>not<sp/>every<sp/>detector<sp/>has<sp/>all<sp/>3<sp/>channels.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status)<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((substr<sp/>=<sp/>strstr(this-&gt;fromCamserver,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>0&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(substr,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>0:<sp/>Temperature<sp/>=<sp/>%fC,<sp/>Rel.<sp/>Humidity<sp/>=<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>&amp;temp,<sp/>&amp;humid);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a7f7f4d8d9c82679ae089482a66a16a5d" kindref="member">PilatusThTemp0</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a50c0a9997b78000285a65540d546eecc" kindref="member">PilatusThHumid0</ref>,<sp/>humid);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_a_d_driver_1aef042b68b6b77d7b39dfaeceaa097a38" kindref="member">ADTemperature</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((substr<sp/>=<sp/>strstr(this-&gt;fromCamserver,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>1&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(substr,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>1:<sp/>Temperature<sp/>=<sp/>%fC,<sp/>Rel.<sp/>Humidity<sp/>=<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>&amp;temp,<sp/>&amp;humid);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a2896ab82b5f081ca1f64fbbc863023de" kindref="member">PilatusThTemp1</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a1f23438bd6da602b2967e098b2813d88" kindref="member">PilatusThHumid1</ref>,<sp/>humid);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((substr<sp/>=<sp/>strstr(this-&gt;fromCamserver,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>2&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(substr,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>2:<sp/>Temperature<sp/>=<sp/>%fC,<sp/>Rel.<sp/>Humidity<sp/>=<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>&amp;temp,<sp/>&amp;humid);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a565e9ecca99b492989932fe9f3268b55" kindref="member">PilatusThTemp2</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a13ce63a83d173db6fcbec4052f19178c" kindref="member">PilatusThHumid2</ref>,<sp/>humid);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((substr<sp/>=<sp/>strstr(this-&gt;fromCamserver,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>3&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(substr,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>3:<sp/>Temperature<sp/>=<sp/>%fC,<sp/>Rel.<sp/>Humidity<sp/>=<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>&amp;temp,<sp/>&amp;humid);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a7f7f4d8d9c82679ae089482a66a16a5d" kindref="member">PilatusThTemp0</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a50c0a9997b78000285a65540d546eecc" kindref="member">PilatusThHumid0</ref>,<sp/>humid);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref>);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp value="12"/></highlight></codeline>
<codeline lineno="1378"><highlight class="normal">asynStatus<sp/><ref refid="classpilatus_detector_1a620954e1f1e8abad82f81570406aae63" kindref="member">pilatusDetector::writeInt32</ref>(asynUser<sp/>*pasynUser,<sp/>epicsInt32<sp/>value)</highlight></codeline>
<codeline lineno="1379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>function<sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adstatus;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;writeInt32&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>that<sp/>ADStatus<sp/>is<sp/>set<sp/>correctly<sp/>before<sp/>we<sp/>set<sp/>ADAcquire.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/>&amp;adstatus);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&amp;&amp;<sp/>((adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5aabf2281b95d16f607f1a7b1c5a8bd" kindref="member">ADStatusIdle</ref>)<sp/>||<sp/>adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref><sp/>||<sp/>adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Acquiring<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea197b4bb1a794d6799db204a5dec4fbd2" kindref="member">ADStatusAcquire</ref>);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value<sp/>&amp;&amp;<sp/>(adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea197b4bb1a794d6799db204a5dec4fbd2" kindref="member">ADStatusAcquire</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Acquisition<sp/>aborted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref>);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(function,<sp/>value);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&amp;&amp;<sp/>(adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5aabf2281b95d16f607f1a7b1c5a8bd" kindref="member">ADStatusIdle</ref><sp/>||<sp/>adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref><sp/>||<sp/>adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>an<sp/>event<sp/>to<sp/>wake<sp/>up<sp/>the<sp/>Pilatus<sp/>task.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsEventSignal(this-&gt;startEventId);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value<sp/>&amp;&amp;<sp/>(adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea197b4bb1a794d6799db204a5dec4fbd2" kindref="member">ADStatusAcquire</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>was<sp/>a<sp/>command<sp/>to<sp/>stop<sp/>acquisition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsEventSignal(this-&gt;stopEventId);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;camcmd<sp/>k&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sleep<sp/>for<sp/>two<sp/>seconds<sp/>to<sp/>allow<sp/>acqusition<sp/>to<sp/>stop<sp/>in<sp/>camserver.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadSleep(2);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Acquisition<sp/>aborted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((function<sp/>==<sp/><ref refid="class_a_d_driver_1ae191abe1436e6dd02510fcbbac59dbc1" kindref="member">ADTriggerMode</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(function<sp/>==<sp/><ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(function<sp/>==<sp/><ref refid="class_a_d_driver_1a25e11dff81ea84715fc8fe5ca290bacb" kindref="member">ADNumExposures</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1aba84bfa780f1f6a8e93728c237ae1552" kindref="member">PilatusGapFill</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAcquireParams();</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a91f9cd10a889a2d33541d5313caa6503" kindref="member">PilatusThresholdApply</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setThreshold();</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1abcdc79c0085fc0439ebb0f0aac39a3ff" kindref="member">PilatusResetPower</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resetModulePower();</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a2f2ad7a7665dda405bf540d725fe5b99" kindref="member">PilatusNumOscill</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>N_oscillations<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="class_a_d_driver_1adbd8c8af9cf7a17913f16ecd0252eaba" kindref="member">ADReadStatus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adstatus<sp/>!=<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea197b4bb1a794d6799db204a5dec4fbd2" kindref="member">ADStatusAcquire</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pilatusStatus();</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>parameter<sp/>belongs<sp/>to<sp/>a<sp/>base<sp/>class<sp/>call<sp/>its<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>&lt;<sp/><ref refid="pilatus_detector_8cpp_1a7494cbc68a6ae561231e9a6f48f7a15a" kindref="member">FIRST_PILATUS_PARAM</ref>)<sp/>status<sp/>=<sp/><ref refid="class_a_d_driver_1abef6916bb90d032a1aeb6894adef12a6" kindref="member">ADDriver::writeInt32</ref>(pasynUser,<sp/>value);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>callbacks<sp/>so<sp/>higher<sp/>layers<sp/>see<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>error,<sp/>status=%d<sp/>function=%d,<sp/>value=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>status,<sp/>function,<sp/>value);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACEIO_DRIVER,<sp/></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>function=%d,<sp/>value=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>function,<sp/>value);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal">asynStatus<sp/><ref refid="classpilatus_detector_1a28ec23a70492c14aeff13435396a6eb7" kindref="member">pilatusDetector::writeFloat64</ref>(asynUser<sp/>*pasynUser,<sp/>epicsFloat64<sp/>value)</highlight></codeline>
<codeline lineno="1459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>function<sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>energyLow,<sp/>energyHigh;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beamX,<sp/>beamY;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdAutoApply;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;writeFloat64&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oldValue;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>parameter<sp/>and<sp/>readback<sp/>in<sp/>the<sp/>parameter<sp/>library.<sp/><sp/>This<sp/>may<sp/>be<sp/>overwritten<sp/>when<sp/>we<sp/>read<sp/>back<sp/>the</highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>status<sp/>at<sp/>the<sp/>end,<sp/>but<sp/>that&apos;s<sp/>OK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(function,<sp/>&amp;oldValue);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setDoubleParam(function,<sp/>value);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Changing<sp/>any<sp/>of<sp/>the<sp/>following<sp/>parameters<sp/>requires<sp/>recomputing<sp/>the<sp/>base<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((function<sp/>==<sp/><ref refid="class_a_d_driver_1af7a169a1ab5a9069c5d556bf5c7ac387" kindref="member">ADGain</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a5b347e6c7d2a82b6fe63dee28f3fbb23" kindref="member">PilatusEnergy</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1aff068b875061c1db19bc428a303f0004" kindref="member">PilatusThreshold</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpilatus_detector_1a050afcbb1d5ff8fd2e352a6c179bd1a7" kindref="member">PilatusThresholdAutoApply</ref>,<sp/>&amp;thresholdAutoApply);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1aff068b875061c1db19bc428a303f0004" kindref="member">PilatusThreshold</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;demandedThreshold<sp/>=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a5b347e6c7d2a82b6fe63dee28f3fbb23" kindref="member">PilatusEnergy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;demandedEnergy<sp/>=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thresholdAutoApply)<sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1aff068b875061c1db19bc428a303f0004" kindref="member">PilatusThreshold</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setDoubleParam(function,<sp/>this-&gt;demandedThreshold);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a5b347e6c7d2a82b6fe63dee28f3fbb23" kindref="member">PilatusEnergy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setDoubleParam(function,<sp/>this-&gt;demandedEnergy);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setThreshold();</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>old<sp/>value<sp/>back<sp/>if<sp/>we<sp/>are<sp/>deferring<sp/>setting<sp/>the<sp/>threshold.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1aff068b875061c1db19bc428a303f0004" kindref="member">PilatusThreshold</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setDoubleParam(function,<sp/>oldValue);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a5b347e6c7d2a82b6fe63dee28f3fbb23" kindref="member">PilatusEnergy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setDoubleParam(function,<sp/>oldValue);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((function<sp/>==<sp/><ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(function<sp/>==<sp/><ref refid="class_a_d_driver_1a8d5333aa86509cbd8f5fd824e79b2799" kindref="member">ADAcquirePeriod</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a9417cd52ce7d978f1a383b76fce1aa9c" kindref="member">PilatusDelayTime</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAcquireParams();</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a1de98ceeb47db7bf2ea1937f6ee0f9ab" kindref="member">PilatusWavelength</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Wavelength<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((function<sp/>==<sp/><ref refid="classpilatus_detector_1a69ea37779a3b5edd1ddc9d7d441325d2" kindref="member">PilatusEnergyLow</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a0b502aeb2a9e63cea5f536763ec96f79" kindref="member">PilatusEnergyHigh</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpilatus_detector_1a69ea37779a3b5edd1ddc9d7d441325d2" kindref="member">PilatusEnergyLow</ref>,<sp/>&amp;energyLow);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpilatus_detector_1a0b502aeb2a9e63cea5f536763ec96f79" kindref="member">PilatusEnergyHigh</ref>,<sp/>&amp;energyHigh);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Energy_range<sp/>%f,%f&quot;</highlight><highlight class="normal">,<sp/>energyLow,<sp/>energyHigh);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a79bb10b16167ae5380bbb27c36d021e5" kindref="member">PilatusDetDist</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Detector_distance<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value<sp/>/<sp/>1000.0);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a9ee751845282d1b1152a527e8cf63abe" kindref="member">PilatusDetVOffset</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Detector_Voffset<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value<sp/>/<sp/>1000.0);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((function<sp/>==<sp/><ref refid="classpilatus_detector_1a358daa61dc28f31f6494623807fc4c80" kindref="member">PilatusBeamX</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a5a0951a081e22ab72ab6e96bb86c5a20" kindref="member">PilatusBeamY</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpilatus_detector_1a358daa61dc28f31f6494623807fc4c80" kindref="member">PilatusBeamX</ref>,<sp/>&amp;beamX);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpilatus_detector_1a5a0951a081e22ab72ab6e96bb86c5a20" kindref="member">PilatusBeamY</ref>,<sp/>&amp;beamY);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Beam_xy<sp/>%f,%f&quot;</highlight><highlight class="normal">,<sp/>beamX,<sp/>beamY);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1ac4e783c59df84d271edf53eb11ba8a2c" kindref="member">PilatusFlux</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Flux<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a2dc7106f4787dd6704e8bce3c23b23d7" kindref="member">PilatusFilterTransm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Filter_transmission<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a70c8b3d21e8fbcd7c78eb60a66162987" kindref="member">PilatusStartAngle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Start_angle<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1abf4893826726d481d08c3b5d9f19a200" kindref="member">PilatusAngleIncr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Angle_increment<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1aa5680ed4ce91e3169ab2135d9934e8f0" kindref="member">PilatusDet2theta</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Detector_2theta<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a5ee2197ef767aca15a0da7dbb8452d97" kindref="member">PilatusPolarization</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Polarization<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1add43c782d19048c7240dc407fff9221b" kindref="member">PilatusAlpha</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Alpha<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a33bc0452a13e0c2e2d3f0d556b21a919" kindref="member">PilatusKappa</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Kappa<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1ab70320b2eb2a70ab686305cfb35e9a9f" kindref="member">PilatusPhi</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Phi<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a8f51f400a0355a58fafbab822b28f55b" kindref="member">PilatusPhiIncr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Phi_increment<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a18d1c1a9ac896facc37415e68af00d5c" kindref="member">PilatusChi</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Chi<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a77173e6d2c34b6b19239b617af87d622" kindref="member">PilatusChiIncr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Chi_increment<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1ab7161c19c682d430cdc1d8f8fdb80d93" kindref="member">PilatusOmega</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Omega<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a3fa76b38d49102f4744d0a9b694ac98d" kindref="member">PilatusOmegaIncr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Omega_increment<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>parameter<sp/>belongs<sp/>to<sp/>a<sp/>base<sp/>class<sp/>call<sp/>its<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>&lt;<sp/><ref refid="pilatus_detector_8cpp_1a7494cbc68a6ae561231e9a6f48f7a15a" kindref="member">FIRST_PILATUS_PARAM</ref>)<sp/>status<sp/>=<sp/>ADDriver::writeFloat64(pasynUser,<sp/>value);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Something<sp/>went<sp/>wrong<sp/>so<sp/>we<sp/>set<sp/>the<sp/>old<sp/>value<sp/>back<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(function,<sp/>oldValue);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s<sp/>error,<sp/>status=%d<sp/>function=%d,<sp/>value=%f\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>status,<sp/>function,<sp/>value);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACEIO_DRIVER,<sp/></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>function=%d,<sp/>value=%f\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>function,<sp/>value);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>callbacks<sp/>so<sp/>higher<sp/>layers<sp/>see<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal">asynStatus<sp/><ref refid="classpilatus_detector_1aa4e8186a7199e3228695b7612acc25a1" kindref="member">pilatusDetector::writeOctet</ref>(asynUser<sp/>*pasynUser,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,<sp/></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nChars,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*nActual)</highlight></codeline>
<codeline lineno="1600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>function<sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;writeOctet&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>parameter<sp/>in<sp/>the<sp/>parameter<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>(asynStatus)setStringParam(function,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a45d5021fcd01cd061c9eebfe26b023d7" kindref="member">PilatusBadPixelFile</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;readBadPixelFile(value);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a7e06c78b28217471b39123f9ae0682b9" kindref="member">PilatusFlatFieldFile</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;readFlatFieldFile(value);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classasyn_n_d_array_driver_1ac511e9800761d6cb070d3540940b24c3" kindref="member">NDFilePath</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;imgpath<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1aba7309da5e7c5571fc693b1998c9d236" kindref="member">checkPath</ref>();</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a90e16229d6b89465b931a786f0d80627" kindref="member">PilatusOscillAxis</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>Oscillation_axis<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strlen(value)<sp/>==<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;(nil)&quot;</highlight><highlight class="normal"><sp/>:<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>==<sp/><ref refid="classpilatus_detector_1a79fa971ac1bd9eae89c5dfb015c73931" kindref="member">PilatusCbfTemplateFile</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(this-&gt;toCamserver,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;toCamserver),<sp/></highlight><highlight class="stringliteral">&quot;mxsettings<sp/>cbf_template_file<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strlen(value)<sp/>==<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>:<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReadCamserver(<ref refid="pilatus_detector_8cpp_1aaab802763b460474f576cc11646a2e3e" kindref="member">CAMSERVER_DEFAULT_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>parameter<sp/>belongs<sp/>to<sp/>a<sp/>base<sp/>class<sp/>call<sp/>its<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function<sp/>&lt;<sp/><ref refid="pilatus_detector_8cpp_1a7494cbc68a6ae561231e9a6f48f7a15a" kindref="member">FIRST_PILATUS_PARAM</ref>)<sp/>status<sp/>=<sp/><ref refid="classasyn_n_d_array_driver_1a84d981f8995d984035bb9feff727d520" kindref="member">ADDriver::writeOctet</ref>(pasynUser,<sp/>value,<sp/>nChars,<sp/>nActual);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>callbacks<sp/>so<sp/>higher<sp/>layers<sp/>see<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>(asynStatus)callParamCallbacks();</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(pasynUser-&gt;errorMessage,<sp/>pasynUser-&gt;errorMessageSize,<sp/></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>status=%d,<sp/>function=%d,<sp/>value=%s&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>status,<sp/>function,<sp/>value);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACEIO_DRIVER,<sp/></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>function=%d,<sp/>value=%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName,<sp/>function,<sp/>value);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/>*nActual<sp/>=<sp/>nChars;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp value="12"/></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector_1aaab6e0ee8f7d3df9489ce35d85fd1d6d" kindref="member">pilatusDetector::report</ref>(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>details)</highlight></codeline>
<codeline lineno="1653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Pilatus<sp/>detector<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>this-&gt;portName);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(details<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a3c7364e67c0570681ac29158f738bff6" kindref="member">nx</ref>,<sp/>ny,<sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/>&amp;nx);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>,<sp/>&amp;ny);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1af71358738ff1dbe4c9185f105807f799" kindref="member">NDDataType</ref>,<sp/>&amp;<ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>NX,<sp/>NY:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d<sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nx,<sp/>ny);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Data<sp/>type:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invoke<sp/>the<sp/>base<sp/>class<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1ac3f2d73a05eb54357ec3f052e1b000f2" kindref="member">ADDriver::report</ref>(fp,<sp/>details);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pilatus_detector_8cpp_1ac0b86ba9e37d57ab9550acec6e6a4216" kindref="member">pilatusDetectorConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*camserverPort,<sp/></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeY,</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="1672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classpilatus_detector" kindref="compound">pilatusDetector</ref>(portName,<sp/>camserverPort,<sp/>maxSizeX,<sp/>maxSizeY,<sp/>maxBuffers,<sp/>maxMemory,</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority,<sp/>stackSize);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynSuccess);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><ref refid="classpilatus_detector_1abb8942a3f9c2b41ce5f721143771abe7" kindref="member">pilatusDetector::pilatusDetector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*camserverPort,</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeY,</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_a_d_driver" kindref="compound">ADDriver</ref>(portName,<sp/>1,<sp/>0,<sp/>maxBuffers,<sp/>maxMemory,</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>interfaces<sp/>beyond<sp/>those<sp/>set<sp/>in<sp/>ADDriver.cpp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASYN_CANBLOCK,<sp/>1,<sp/></highlight><highlight class="comment">/*<sp/>ASYN_CANBLOCK=1,<sp/>ASYN_MULTIDEVICE=0,<sp/>autoConnect=1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority,<sp/>stackSize),</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imagesRemaining(0),<sp/>firstStatusCall(1)</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>versionString[20];</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pilatusDetector&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dims[2];</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>epicsEvents<sp/>for<sp/>signaling<sp/>to<sp/>the<sp/>pilatus<sp/>task<sp/>when<sp/>acquisition<sp/>starts<sp/>and<sp/>stops<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;startEventId<sp/>=<sp/>epicsEventCreate(epicsEventEmpty);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;startEventId)<sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s:%s<sp/>epicsEventCreate<sp/>failure<sp/>for<sp/>start<sp/>event\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;stopEventId<sp/>=<sp/>epicsEventCreate(epicsEventEmpty);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;stopEventId)<sp/>{</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s:%s<sp/>epicsEventCreate<sp/>failure<sp/>for<sp/>stop<sp/>event\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>the<sp/>raw<sp/>buffer<sp/>we<sp/>use<sp/>to<sp/>read<sp/>image<sp/>files.<sp/><sp/>Only<sp/>do<sp/>this<sp/>once<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>dims[0]<sp/>=<sp/>maxSizeX;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/>dims[1]<sp/>=<sp/>maxSizeY;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>the<sp/>raw<sp/>buffer<sp/>we<sp/>use<sp/>for<sp/>flat<sp/>fields.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pFlatField<sp/>=<sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1ad3969854a37329ef4061cc560e9022dc" kindref="member">pNDArrayPool</ref>-&gt;<ref refid="class_n_d_array_pool_1a26b4360694655c4af6c853c2f3d2ce5e" kindref="member">alloc</ref>(2,<sp/>dims,<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a0492c093c2dcd6eebcaf15f57a2f359a" kindref="member">NDUInt32</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Connect<sp/>to<sp/>camserver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pasynOctetSyncIO-&gt;connect(camserverPort,<sp/>0,<sp/>&amp;this-&gt;pasynUserCamserver,<sp/>NULL);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a7e361d66962a459d627b9a2737d26400" kindref="member">PilatusDelayTimeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a9417cd52ce7d978f1a383b76fce1aa9c" kindref="member">PilatusDelayTime</ref>);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a669c114cc8892492c60b2280c842f411" kindref="member">PilatusThresholdString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1aff068b875061c1db19bc428a303f0004" kindref="member">PilatusThreshold</ref>);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1afa03c590b4a17913d577352d49c8069c" kindref="member">PilatusThresholdApplyString</ref>,<sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a91f9cd10a889a2d33541d5313caa6503" kindref="member">PilatusThresholdApply</ref>);</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1afc97861a65a49a361b82a40d2b290746" kindref="member">PilatusThresholdAutoApplyString</ref>,<sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a050afcbb1d5ff8fd2e352a6c179bd1a7" kindref="member">PilatusThresholdAutoApply</ref>);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1ab0737d347cca4701c251f2cf2a991b4a" kindref="member">PilatusEnergyString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a5b347e6c7d2a82b6fe63dee28f3fbb23" kindref="member">PilatusEnergy</ref>);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a04747d7a8294a1f653e10584980cdcff" kindref="member">PilatusArmedString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a1a590ab953e612cb889621987330108a" kindref="member">PilatusArmed</ref>);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1aa8720775862823cccd775d6d24e2d5e7" kindref="member">PilatusResetPowerString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1abcdc79c0085fc0439ebb0f0aac39a3ff" kindref="member">PilatusResetPower</ref>);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a43d7e5e3be476f68c00243dc7587133d" kindref="member">PilatusResetPowerTimeString</ref>,<sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a66b08dbbe3dfc9680d033b80c2563b5b" kindref="member">PilatusResetPowerTime</ref>);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1abc13131636e428094a787a61627d75fe" kindref="member">PilatusImageFileTmotString</ref>,<sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a10c5bbd2c3538f95dd89c832d22d30b8" kindref="member">PilatusImageFileTmot</ref>);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a8013a9b2f93c20aab2e92152727c91d6" kindref="member">PilatusBadPixelFileString</ref>,<sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a45d5021fcd01cd061c9eebfe26b023d7" kindref="member">PilatusBadPixelFile</ref>);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a47c7ad384fdf819059200c12cafd6105" kindref="member">PilatusNumBadPixelsString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a050b3d9e5782b4df14803c7c2dd7ef73" kindref="member">PilatusNumBadPixels</ref>);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1ab9491d1a236f6e574dd552609e254c8f" kindref="member">PilatusFlatFieldFileString</ref>,<sp/><sp/>asynParamOctet,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a7e06c78b28217471b39123f9ae0682b9" kindref="member">PilatusFlatFieldFile</ref>);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a38458a47ba1bc14e5aef243c25415c49" kindref="member">PilatusMinFlatFieldString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1ad771907d824e3efd05120d8721f71abf" kindref="member">PilatusMinFlatField</ref>);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a040404884d53ef0550df483a9d9143a9" kindref="member">PilatusFlatFieldValidString</ref>,<sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a16fc0bc6a1c360e1f377663b520748d6" kindref="member">PilatusFlatFieldValid</ref>);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a1bb73af70a75d74a02f6116de69f0579" kindref="member">PilatusGapFillString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1aba84bfa780f1f6a8e93728c237ae1552" kindref="member">PilatusGapFill</ref>);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1adda9a256b408f9b6e792533844b51d15" kindref="member">PilatusWavelengthString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a1de98ceeb47db7bf2ea1937f6ee0f9ab" kindref="member">PilatusWavelength</ref>);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a5248406704625fe2a7d6e2ef4da5acda" kindref="member">PilatusEnergyLowString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a69ea37779a3b5edd1ddc9d7d441325d2" kindref="member">PilatusEnergyLow</ref>);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a68133a94ce81379f425cd8ab9a89ace0" kindref="member">PilatusEnergyHighString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a0b502aeb2a9e63cea5f536763ec96f79" kindref="member">PilatusEnergyHigh</ref>);</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a2f282c12a975b65077eab7c5c60bc349" kindref="member">PilatusDetDistString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a79bb10b16167ae5380bbb27c36d021e5" kindref="member">PilatusDetDist</ref>);</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a5adffc07135b85e9f0cb4526a1821646" kindref="member">PilatusDetVOffsetString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a9ee751845282d1b1152a527e8cf63abe" kindref="member">PilatusDetVOffset</ref>);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a4315b9091a85b0ca3b7a60ef599c90ce" kindref="member">PilatusBeamXString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a358daa61dc28f31f6494623807fc4c80" kindref="member">PilatusBeamX</ref>);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a1c5d83dff695c548c62c1d571d2a278f" kindref="member">PilatusBeamYString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a5a0951a081e22ab72ab6e96bb86c5a20" kindref="member">PilatusBeamY</ref>);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a1b362df0feedb7a402dfc00759b4175e" kindref="member">PilatusFluxString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1ac4e783c59df84d271edf53eb11ba8a2c" kindref="member">PilatusFlux</ref>);</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1aedce5913870fb8db5d3205f9b271137d" kindref="member">PilatusFilterTransmString</ref>,<sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a2dc7106f4787dd6704e8bce3c23b23d7" kindref="member">PilatusFilterTransm</ref>);</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1ad5e9225bb955a44a800457791323ee44" kindref="member">PilatusStartAngleString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a70c8b3d21e8fbcd7c78eb60a66162987" kindref="member">PilatusStartAngle</ref>);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a2313f6ec2fbdf3810c36464f268fe4ae" kindref="member">PilatusAngleIncrString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1abf4893826726d481d08c3b5d9f19a200" kindref="member">PilatusAngleIncr</ref>);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1afcb75abc7fe8a5cebc33ef88fa3fba9a" kindref="member">PilatusDet2thetaString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1aa5680ed4ce91e3169ab2135d9934e8f0" kindref="member">PilatusDet2theta</ref>);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a49dd06856679e289b56b8b5493bdc2ce" kindref="member">PilatusPolarizationString</ref>,<sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a5ee2197ef767aca15a0da7dbb8452d97" kindref="member">PilatusPolarization</ref>);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a0974070dfed203f5ba3cf9e7845398a5" kindref="member">PilatusAlphaString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1add43c782d19048c7240dc407fff9221b" kindref="member">PilatusAlpha</ref>);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1af12cf3d47b49ae1d93a8fad520b4e4c9" kindref="member">PilatusKappaString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a33bc0452a13e0c2e2d3f0d556b21a919" kindref="member">PilatusKappa</ref>);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1af39a6deeb28c199117a62894bf3978de" kindref="member">PilatusPhiString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1ab70320b2eb2a70ab686305cfb35e9a9f" kindref="member">PilatusPhi</ref>);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1aec5a5c96879e8a91cfe3356c1b19084d" kindref="member">PilatusPhiIncrString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a8f51f400a0355a58fafbab822b28f55b" kindref="member">PilatusPhiIncr</ref>);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a73317d56668cae561e29ac8c0a915cad" kindref="member">PilatusChiString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a18d1c1a9ac896facc37415e68af00d5c" kindref="member">PilatusChi</ref>);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a4d64dce4a50e6a4cf19f0630f0f5d0f9" kindref="member">PilatusChiIncrString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a77173e6d2c34b6b19239b617af87d622" kindref="member">PilatusChiIncr</ref>);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a30b4432f866a685b3b9e854679acd467" kindref="member">PilatusOmegaString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1ab7161c19c682d430cdc1d8f8fdb80d93" kindref="member">PilatusOmega</ref>);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a450b4763a3541576949db8e48cc44510" kindref="member">PilatusOmegaIncrString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a3fa76b38d49102f4744d0a9b694ac98d" kindref="member">PilatusOmegaIncr</ref>);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a60120c519321ca95791f0ff18357e9ce" kindref="member">PilatusOscillAxisString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a90e16229d6b89465b931a786f0d80627" kindref="member">PilatusOscillAxis</ref>);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a481493857e916eec8cbf81e6b05054cb" kindref="member">PilatusNumOscillString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a2f2ad7a7665dda405bf540d725fe5b99" kindref="member">PilatusNumOscill</ref>);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a43b0455b7e93a16b2e66af3bcdfc4c19" kindref="member">PilatusPixelCutOffString</ref>,<sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a2c809831fea29896b9c3ef1d8e579624" kindref="member">PilatusPixelCutOff</ref>);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1ab6956b8576f152c9789f1a3a7ad1f504" kindref="member">PilatusThTemp0String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a7f7f4d8d9c82679ae089482a66a16a5d" kindref="member">PilatusThTemp0</ref>);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a1f0ed778763889ea617771fb9298e791" kindref="member">PilatusThTemp1String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a2896ab82b5f081ca1f64fbbc863023de" kindref="member">PilatusThTemp1</ref>);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1ace37b7a6df89d45deff03edefa3a28cb" kindref="member">PilatusThTemp2String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a565e9ecca99b492989932fe9f3268b55" kindref="member">PilatusThTemp2</ref>);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a2f19413ff7f226d2851554f999be9699" kindref="member">PilatusThHumid0String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a50c0a9997b78000285a65540d546eecc" kindref="member">PilatusThHumid0</ref>);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a9ab2368f242197dd3ff0093b62cef39f" kindref="member">PilatusThHumid1String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a1f23438bd6da602b2967e098b2813d88" kindref="member">PilatusThHumid1</ref>);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a9ee23e91cd9f3166240832f217c8b288" kindref="member">PilatusThHumid2String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpilatus_detector_1a13ce63a83d173db6fcbec4052f19178c" kindref="member">PilatusThHumid2</ref>);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1adcf20c79fc99af24a1bef37a86000658" kindref="member">PilatusTvxVersionString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1ac345c7c2a53c4aebc860a09e7f014882" kindref="member">PilatusTvxVersion</ref>);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a1d65deeec3351103f2dc99376cd4e527" kindref="member">PilatusCbfTemplateFileString</ref>,asynParamOctet,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a79fa971ac1bd9eae89c5dfb015c73931" kindref="member">PilatusCbfTemplateFile</ref>);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pilatus_detector_8cpp_1a415895762879d6647217dd227c3d286d" kindref="member">PilatusHeaderStringString</ref>,<sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/>&amp;<ref refid="classpilatus_detector_1a5935548bc3b4d58f74d9deba3d1cf91b" kindref="member">PilatusHeaderString</ref>);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>some<sp/>default<sp/>values<sp/>for<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><sp/>setStringParam<sp/>(<ref refid="classasyn_n_d_array_driver_1a2deb25acd798e9e0da6c52741a07b915" kindref="member">ADManufacturer</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Dectris&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>setStringParam<sp/>(<ref refid="classasyn_n_d_array_driver_1a4c15720b7002ec1ff9278058240d82da" kindref="member">ADModel</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Pilatus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(versionString,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(versionString),<sp/></highlight><highlight class="stringliteral">&quot;%d.%d.%d&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pilatus_detector_8cpp_1ae578001fe043b4cca7a0edd801cfe9c4" kindref="member">DRIVER_VERSION</ref>,<sp/><ref refid="pilatus_detector_8cpp_1a09d8a9e616d09d45e8f4c3ad80849872" kindref="member">DRIVER_REVISION</ref>,<sp/><ref refid="pilatus_detector_8cpp_1a00a7ebec19bc60e5ee0344109af2fd82" kindref="member">DRIVER_MODIFICATION</ref>);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1a2be0f672f139c59f942bedfd7d94ff0f" kindref="member">NDDriverVersion</ref>,<sp/>versionString);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a535f4c7d03e30b1efe4f7dad854cfc3f" kindref="member">ADMaxSizeX</ref>,<sp/>maxSizeX);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a93caa26e32c3765ba19e1ac74a2f50cc" kindref="member">ADMaxSizeY</ref>,<sp/>maxSizeY);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/>maxSizeX);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/>maxSizeX);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>,<sp/>maxSizeY);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1a79c89c00ea62734d82c89e09ea8aa47b" kindref="member">NDArraySizeX</ref>,<sp/>maxSizeX);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1a75753778fe16182d0771e924f05bde33" kindref="member">NDArraySizeY</ref>,<sp/>maxSizeY);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1abf6f05821c7d1a9ab6aef60c9374281e" kindref="member">NDArraySize</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1af71358738ff1dbe4c9185f105807f799" kindref="member">NDDataType</ref>,<sp/><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a0492c093c2dcd6eebcaf15f57a2f359a" kindref="member">NDUInt32</ref>);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a7dcba273d750e726bb3f5e4b7a38f53a" kindref="member">ADImageMode</ref>,<sp/><ref refid="_a_d_driver_8h_1a4e304cb4683f0862cc3ca9b5fff213e2a09274bf54e26793fae63922fee5c603b" kindref="member">ADImageContinuous</ref>);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1ae191abe1436e6dd02510fcbbac59dbc1" kindref="member">ADTriggerMode</ref>,<sp/><ref refid="pilatus_detector_8cpp_1aa005b1a2b5e19defa727038f1f6d4e47acda9ee85028a22f342355d14bd5d4956" kindref="member">TMInternal</ref>);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1a1a590ab953e612cb889621987330108a" kindref="member">PilatusArmed</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1abcdc79c0085fc0439ebb0f0aac39a3ff" kindref="member">PilatusResetPower</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1a66b08dbbe3dfc9680d033b80c2563b5b" kindref="member">PilatusResetPowerTime</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>setStringParam<sp/>(<ref refid="classpilatus_detector_1a45d5021fcd01cd061c9eebfe26b023d7" kindref="member">PilatusBadPixelFile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1a050b3d9e5782b4df14803c7c2dd7ef73" kindref="member">PilatusNumBadPixels</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>setStringParam<sp/>(<ref refid="classpilatus_detector_1a7e06c78b28217471b39123f9ae0682b9" kindref="member">PilatusFlatFieldFile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpilatus_detector_1a16fc0bc6a1c360e1f377663b520748d6" kindref="member">PilatusFlatFieldValid</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a7f7f4d8d9c82679ae089482a66a16a5d" kindref="member">PilatusThTemp0</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a2896ab82b5f081ca1f64fbbc863023de" kindref="member">PilatusThTemp1</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a565e9ecca99b492989932fe9f3268b55" kindref="member">PilatusThTemp2</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a50c0a9997b78000285a65540d546eecc" kindref="member">PilatusThHumid0</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a1f23438bd6da602b2967e098b2813d88" kindref="member">PilatusThHumid1</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpilatus_detector_1a13ce63a83d173db6fcbec4052f19178c" kindref="member">PilatusThHumid2</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classpilatus_detector_1ac345c7c2a53c4aebc860a09e7f014882" kindref="member">PilatusTvxVersion</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classpilatus_detector_1a5935548bc3b4d58f74d9deba3d1cf91b" kindref="member">PilatusHeaderString</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s:<sp/>unable<sp/>to<sp/>set<sp/>camera<sp/>parameters\n&quot;</highlight><highlight class="normal">,<sp/>functionName);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>thread<sp/>that<sp/>updates<sp/>the<sp/>images<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>(epicsThreadCreate(</highlight><highlight class="stringliteral">&quot;PilatusDetTask&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadPriorityMedium,</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadGetStackSize(epicsThreadStackMedium),</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(EPICSTHREADFUNC)pilatusTaskC,</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s:%s<sp/>epicsThreadCreate<sp/>failure<sp/>for<sp/>image<sp/>task\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverName,<sp/>functionName);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>call<sp/>the<sp/>pilatusStatus()<sp/>function<sp/>once<sp/>to<sp/>get<sp/>TVX<sp/>version,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>must<sp/>be<sp/>done<sp/>with<sp/>the<sp/>lock<sp/>taken</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>pilatusStatus();</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Code<sp/>for<sp/>iocsh<sp/>registration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pilatusDetectorConfigArg0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Port<sp/>name&quot;</highlight><highlight class="normal">,<sp/>iocshArgString};</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pilatusDetectorConfigArg1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;camserver<sp/>port<sp/>name&quot;</highlight><highlight class="normal">,<sp/>iocshArgString};</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pilatusDetectorConfigArg2<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;maxSizeX&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pilatusDetectorConfigArg3<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;maxSizeY&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pilatusDetectorConfigArg4<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;maxBuffers&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pilatusDetectorConfigArg5<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;maxMemory&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pilatusDetectorConfigArg6<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;priority&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pilatusDetectorConfigArg7<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;stackSize&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pilatusDetectorConfigArgs[]<sp/>=<sp/><sp/>{&amp;pilatusDetectorConfigArg0,</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pilatusDetectorConfigArg1,</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pilatusDetectorConfigArg2,</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pilatusDetectorConfigArg3,</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pilatusDetectorConfigArg4,</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pilatusDetectorConfigArg5,</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pilatusDetectorConfigArg6,</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pilatusDetectorConfigArg7};</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshFuncDef<sp/>configPilatusDetector<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;pilatusDetectorConfig&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>pilatusDetectorConfigArgs};</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>configPilatusDetectorCallFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArgBuf<sp/>*args)</highlight></codeline>
<codeline lineno="1861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pilatus_detector_8cpp_1ac0b86ba9e37d57ab9550acec6e6a4216" kindref="member">pilatusDetectorConfig</ref>(args[0].sval,<sp/>args[1].sval,<sp/>args[2].ival,<sp/><sp/>args[3].ival,<sp/><sp/></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[4].ival,<sp/>args[5].ival,<sp/>args[6].ival,<sp/><sp/>args[7].ival);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pilatusDetectorRegister(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/>iocshRegister(&amp;configPilatusDetector,<sp/>configPilatusDetectorCallFunc);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><ref refid="pilatus_detector_8cpp_1abdd4e0d9b273670c239017ea76671cf5" kindref="member">epicsExportRegistrar</ref>(pilatusDetectorRegister);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADPilatus/pilatusApp/src/pilatusDetector.cpp"/>
  </compounddef>
</doxygen>
