<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_a_d_lambda_8h" kind="file" language="C++">
    <compoundname>ADLambda.h</compoundname>
    <includes local="no">epicsString.h</includes>
    <includes local="no">epicsEvent.h</includes>
    <includes local="no">epicsThread.h</includes>
    <includes refid="_a_d_driver_8h" local="yes">ADDriver.h</includes>
    <includedby refid="_a_d_lambda_8cpp" local="yes">/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>epicsTypes.h</label>
      </node>
      <node id="12">
        <label>NDArray.h</label>
        <link refid="_n_d_array_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>NDAttributeList.h</label>
        <link refid="_n_d_attribute_list_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>epicsMutex.h</label>
      </node>
      <node id="20">
        <label>epicsVersion.h</label>
      </node>
      <node id="16">
        <label>string</label>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h</label>
        <link refid="_a_d_lambda_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>epicsThread.h</label>
      </node>
      <node id="5">
        <label>ADDriver.h</label>
        <link refid="_a_d_driver_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ADCoreVersion.h</label>
        <link refid="_a_d_core_version_8h"/>
      </node>
      <node id="19">
        <label>ADCoreAPI.h</label>
        <link refid="_a_d_core_a_p_i_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>asynNDArrayDriver.h</label>
        <link refid="asyn_n_d_array_driver_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>epicsString.h</label>
      </node>
      <node id="14">
        <label>ellLib.h</label>
      </node>
      <node id="15">
        <label>NDAttribute.h</label>
        <link refid="_n_d_attribute_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>asynDriver.h</label>
      </node>
      <node id="22">
        <label>Codec.h</label>
        <link refid="_codec_8h"/>
      </node>
      <node id="8">
        <label>epicsTime.h</label>
      </node>
      <node id="11">
        <label>asynPortDriver.h</label>
      </node>
      <node id="13">
        <label>set</label>
      </node>
      <node id="7">
        <label>epicsMessageQueue.h</label>
      </node>
      <node id="17">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>epicsEvent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h</label>
        <link refid="_a_d_lambda_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.cpp</label>
        <link refid="_a_d_lambda_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_a_d_lambda" prot="public">ADLambda</innerclass>
    <innernamespace refid="namespace_det_common_n_s">DetCommonNS</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_a_d_lambda_8h_1a169761aa7b605c18bd81fdd1f66f3bf1" prot="public" static="no">
        <name>LAMBDA_FIRST_PARAM</name>
        <initializer>LAMBDA_VersionNumber</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" line="57" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_lambda_8h_1ac8c438df4d1b49a6cace598016e5beb3" prot="public" static="no">
        <name>LAMBDA_LAST_PARAM</name>
        <initializer>LAMBDA_BadImage</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" line="66" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_lambda_8h_1a249813cb80dcc9a8f9fefc63f32c82ef" prot="public" static="no">
        <name>LAMBDA_VersionNumberString</name>
        <initializer>&quot;LAMBDA_VERSION_NUMBER&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" line="89" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_lambda_8h_1a77d39053bd494399ef6a7ff02bfbfcc9" prot="public" static="no">
        <name>LAMBDA_ConfigFilePathString</name>
        <initializer>&quot;LAMBDA_CONFIG_FILE_PATH&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" line="90" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_lambda_8h_1a724a7b024258f05c8cd992148964fa9b" prot="public" static="no">
        <name>LAMBDA_EnergyThresholdString</name>
        <initializer>&quot;LAMBDA_ENERGY_THRESHOLD&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" line="91" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_lambda_8h_1a9dbb0b6e3d59043b39b28a3e3b0c9aaa" prot="public" static="no">
        <name>LAMBDA_DecodedQueueDepthString</name>
        <initializer>&quot;LAMBDA_DECODED_QUEUE_DEPTH&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" line="92" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_lambda_8h_1ab2e63546bdbaa47ff2e9eb9ef3b785d5" prot="public" static="no">
        <name>LAMBDA_OperatingModeString</name>
        <initializer>&quot;LAMBDA_OPERATING_MODE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" line="93" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_lambda_8h_1aa1565498ba6aa98241e2793c6cf56e37" prot="public" static="no">
        <name>LAMBDA_DetectorStateString</name>
        <initializer>&quot;LAMBDA_DETECTOR_STATE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" line="94" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_lambda_8h_1a54c22f0f88cf62fde8db863cb816e9b1" prot="public" static="no">
        <name>LAMBDA_BadFrameCounterString</name>
        <initializer>&quot;LAMBDA_BAD_FRAME_COUNTER&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" line="95" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_lambda_8h_1a01bdd6423c1bec810548fac8b5479fe5" prot="public" static="no">
        <name>LAMBDA_BadImageString</name>
        <initializer>&quot;LAMBDA_BAD_IMAGE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" line="96" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_lambda_8h_1a68c8737c0d52bb3818d62d93bbf706a5" prot="public" static="no">
        <name>NUM_LAMBDA_PARAMS</name>
        <initializer>((int)(&amp;<ref refid="_a_d_lambda_8h_1ac8c438df4d1b49a6cace598016e5beb3" kindref="member">LAMBDA_LAST_PARAM</ref> - &amp;<ref refid="_a_d_lambda_8h_1a169761aa7b605c18bd81fdd1f66f3bf1" kindref="member">LAMBDA_FIRST_PARAM</ref> + 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" line="99" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADLambda.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>an<sp/>areaDetector<sp/>driver<sp/>for<sp/>cameras<sp/>that<sp/>communicate</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>X-Spectrum<sp/>Lambda<sp/>driver<sp/>library</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ADLAMBDA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADLAMBDA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="namespace_det_common_n_s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_det_common_n_s" kindref="compound">DetCommonNS</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LambdaSysImpl;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LambdaInterface;}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_det_common_n_s" kindref="compound">DetCommonNS</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsString.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsEvent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsThread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_d_driver_8h" kindref="compound">ADDriver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_a_d_lambda" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">epicsShareClass<sp/><ref refid="class_a_d_lambda" kindref="compound">ADLambda</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_a_d_driver" kindref="compound">ADDriver</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30" refid="class_a_d_lambda_1a99ce6b087b1085f5feb5adc3f928d74e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_a_d_lambda_1a99ce6b087b1085f5feb5adc3f928d74e" kindref="member">driverName</ref>;</highlight></codeline>
<codeline lineno="31" refid="class_a_d_lambda_1a62a9b42cc7d68bb401c7ccf9b1db9354" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_a_d_lambda_1a62a9b42cc7d68bb401c7ccf9b1db9354" kindref="member">TWELVE_BIT</ref>,<sp/>TWENTY_FOUR_BIT;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_d_lambda" kindref="compound">ADLambda</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*configPath,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_a_d_lambda" kindref="compound">ADLambda</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/>disconnect(asynUser*<sp/>paasynUser);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/>connect(asynUser*<sp/>pasynUser);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>createImageHandlerThread();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>killImageHandlerThread();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getImageDepth();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>getQueueDepth();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>getDecodedImageShort(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&amp;<sp/>lFrameNo,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">&amp;<sp/>shErrCode);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>getDecodedImageInt(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&amp;<sp/>lFrameNo,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">&amp;<sp/>shErrCode);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>getImageFormat(int&amp;<sp/>nX,<sp/>int&amp;<sp/>nY,<sp/>int&amp;<sp/>nImgDepth);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleNewImageTask(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>report(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>details);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><sp/>readInt32<sp/>(asynUser<sp/>*pasynUser,<sp/>epicsInt32<sp/>*<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/>writeFloat64(asynUser<sp/>*pasynUser,<sp/>epicsFloat64<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/>writeInt32(asynUser<sp/>*pasynUser,<sp/>epicsInt32<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/>writeOctet(asynUser<sp/>*pasynUser,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nChars,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*nActual);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><sp/>readOctet<sp/>(asynUser<sp/>*pasynUser,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxChars,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*nActual,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*eomReason);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>reference<sp/>to<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_a_d_lambda_1a1e5b0d1f54459adbeb2b98b2d18d195f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_a_d_lambda_1a1e5b0d1f54459adbeb2b98b2d18d195f" kindref="member">LAMBDA_VersionNumber</ref>;</highlight></codeline>
<codeline lineno="57" refid="_a_d_lambda_8h_1a169761aa7b605c18bd81fdd1f66f3bf1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAMBDA_FIRST_PARAM<sp/>LAMBDA_VersionNumber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_a_d_lambda_1a091601e7cbb0da051fa51e8762d9c79c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_a_d_lambda_1a091601e7cbb0da051fa51e8762d9c79c" kindref="member">LAMBDA_ConfigFilePath</ref>;</highlight></codeline>
<codeline lineno="60" refid="class_a_d_lambda_1a8b9041616880e03d2b9635409a710269" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_a_d_lambda_1a8b9041616880e03d2b9635409a710269" kindref="member">LAMBDA_EnergyThreshold</ref>;</highlight></codeline>
<codeline lineno="61" refid="class_a_d_lambda_1a9ee7e6f2d35ae0f3f241c63e2b9dcfc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_a_d_lambda_1a9ee7e6f2d35ae0f3f241c63e2b9dcfc6" kindref="member">LAMBDA_DecodedQueueDepth</ref>;</highlight></codeline>
<codeline lineno="62" refid="class_a_d_lambda_1af74f2473a424ea66871a3e5e97e05826" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_a_d_lambda_1af74f2473a424ea66871a3e5e97e05826" kindref="member">LAMBDA_OperatingMode</ref>;</highlight></codeline>
<codeline lineno="63" refid="class_a_d_lambda_1a4e8ab2f5adfc5f7c1b89aae9d0f91ad5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_a_d_lambda_1a4e8ab2f5adfc5f7c1b89aae9d0f91ad5" kindref="member">LAMBDA_DetectorState</ref>;</highlight></codeline>
<codeline lineno="64" refid="class_a_d_lambda_1a1dd37faa49ea724a978d18d96c503137" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_a_d_lambda_1a1dd37faa49ea724a978d18d96c503137" kindref="member">LAMBDA_BadFrameCounter</ref>;</highlight></codeline>
<codeline lineno="65" refid="class_a_d_lambda_1a66fc459ad189fc77f57ae038bd93d9c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_a_d_lambda_1a66fc459ad189fc77f57ae038bd93d9c4" kindref="member">LAMBDA_BadImage</ref>;</highlight></codeline>
<codeline lineno="66" refid="_a_d_lambda_8h_1ac8c438df4d1b49a6cace598016e5beb3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAMBDA_LAST_PARAM<sp/>LAMBDA_BadImage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>imageThreadKeepAlive;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>acquireStart();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>acquireStop();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>initializeDetector();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>LambdaSysImpl*<sp/>lambdaInstance;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>acquiredImages;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageHeight;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageWidth;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageDepth;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queueDepth;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>acquiringData;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameNumbersRead;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>totalLossFramesRead;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>latestImageNumberRead;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>imageDims[2];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>configFileName[256];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16" kindref="member">NDDataType_t</ref><sp/>imageDataType;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="_a_d_lambda_8h_1a249813cb80dcc9a8f9fefc63f32c82ef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAMBDA_VersionNumberString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;LAMBDA_VERSION_NUMBER&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="_a_d_lambda_8h_1a77d39053bd494399ef6a7ff02bfbfcc9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAMBDA_ConfigFilePathString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;LAMBDA_CONFIG_FILE_PATH&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="_a_d_lambda_8h_1a724a7b024258f05c8cd992148964fa9b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAMBDA_EnergyThresholdString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;LAMBDA_ENERGY_THRESHOLD&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="_a_d_lambda_8h_1a9dbb0b6e3d59043b39b28a3e3b0c9aaa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAMBDA_DecodedQueueDepthString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;LAMBDA_DECODED_QUEUE_DEPTH&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="_a_d_lambda_8h_1ab2e63546bdbaa47ff2e9eb9ef3b785d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAMBDA_OperatingModeString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;LAMBDA_OPERATING_MODE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="_a_d_lambda_8h_1aa1565498ba6aa98241e2793c6cf56e37" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAMBDA_DetectorStateString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;LAMBDA_DETECTOR_STATE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="_a_d_lambda_8h_1a54c22f0f88cf62fde8db863cb816e9b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAMBDA_BadFrameCounterString<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;LAMBDA_BAD_FRAME_COUNTER&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="_a_d_lambda_8h_1a01bdd6423c1bec810548fac8b5479fe5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAMBDA_BadImageString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;LAMBDA_BAD_IMAGE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="_a_d_lambda_8h_1a68c8737c0d52bb3818d62d93bbf706a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_LAMBDA_PARAMS<sp/>((int)(&amp;LAMBDA_LAST_PARAM<sp/>-<sp/>&amp;LAMBDA_FIRST_PARAM<sp/>+<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADLambda/LambdaApp/src/ADLambda.h"/>
  </compounddef>
</doxygen>
