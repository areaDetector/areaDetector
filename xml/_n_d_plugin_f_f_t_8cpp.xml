<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_n_d_plugin_f_f_t_8cpp" kind="file" language="C++">
    <compoundname>NDPluginFFT.cpp</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">iocsh.h</includes>
    <includes refid="_n_d_plugin_f_f_t_8h" local="yes">NDPluginFFT.h</includes>
    <includes refid="fft_8h" local="yes">fft.h</includes>
    <includes local="no">epicsExport.h</includes>
    <incdepgraph>
      <node id="25">
        <label>ADCoreAPI.h</label>
        <link refid="_a_d_core_a_p_i_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ADCoreVersion.h</label>
        <link refid="_a_d_core_version_8h"/>
      </node>
      <node id="27">
        <label>Codec.h</label>
        <link refid="_codec_8h"/>
      </node>
      <node id="20">
        <label>NDArray.h</label>
        <link refid="_n_d_array_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>NDAttribute.h</label>
        <link refid="_n_d_attribute_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>NDAttributeList.h</label>
        <link refid="_n_d_attribute_list_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>asynNDArrayDriver.h</label>
        <link refid="asyn_n_d_array_driver_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>NDPluginAPI.h</label>
        <link refid="_n_d_plugin_a_p_i_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>NDPluginDriver.h</label>
        <link refid="_n_d_plugin_driver_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp</label>
        <link refid="_n_d_plugin_f_f_t_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>NDPluginFFT.h</label>
        <link refid="_n_d_plugin_f_f_t_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>fft.h</label>
        <link refid="fft_8h"/>
      </node>
      <node id="24">
        <label>asynDriver.h</label>
      </node>
      <node id="19">
        <label>asynPortDriver.h</label>
      </node>
      <node id="21">
        <label>ellLib.h</label>
      </node>
      <node id="18">
        <label>epicsEvent.h</label>
      </node>
      <node id="30">
        <label>epicsExport.h</label>
      </node>
      <node id="11">
        <label>epicsMessageQueue.h</label>
      </node>
      <node id="17">
        <label>epicsMutex.h</label>
      </node>
      <node id="12">
        <label>epicsThread.h</label>
      </node>
      <node id="13">
        <label>epicsTime.h</label>
      </node>
      <node id="10">
        <label>epicsTypes.h</label>
      </node>
      <node id="15">
        <label>epicsVersion.h</label>
      </node>
      <node id="6">
        <label>iocsh.h</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="9">
        <label>set</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="23">
        <label>string</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="_n_d_plugin_f_f_t_8cpp_1adcd021ac91d43a62b2cdecf9a5b971a7" prot="public" static="no">
        <name>MIN</name>
        <param><defname>A</defname></param>
        <param><defname>B</defname></param>
        <initializer>((A &lt;= B) ? A : B)</initializer>
        <briefdescription>
<para><ref refid="_n_d_plugin_f_f_t_8cpp" kindref="compound">NDPluginFFT.cpp</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Plugin that computes 1-D and 2-D FFTs</para>
<para><simplesect kind="author"><para>Mark Rivers </para>
</simplesect>
<simplesect kind="date"><para>February 2016 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="22" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_n_d_plugin_f_f_t_8cpp_1a13021e744179110a6114bf84e9d47f32" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg0</definition>
        <argsstring></argsstring>
        <name>initArg0</name>
        <initializer>= { &quot;portName&quot;,iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="391" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="391" bodyend="391"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_f_f_t_8cpp_1a85f312f39f3c368a5fa10d1039dc40b2" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg1</definition>
        <argsstring></argsstring>
        <name>initArg1</name>
        <initializer>= { &quot;frame queue size&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="392" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="392" bodyend="392"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_f_f_t_8cpp_1a645a7d7d0d71a7522373e2af4008b520" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg2</definition>
        <argsstring></argsstring>
        <name>initArg2</name>
        <initializer>= { &quot;blocking callbacks&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="393" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="393" bodyend="393"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_f_f_t_8cpp_1aaa425474fd6655fa6347e1933b29038a" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg3</definition>
        <argsstring></argsstring>
        <name>initArg3</name>
        <initializer>= { &quot;NDArrayPort&quot;,iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="394" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="394" bodyend="394"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_f_f_t_8cpp_1a945c4d0bc0e2bc869aeaf5c6a815368a" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg4</definition>
        <argsstring></argsstring>
        <name>initArg4</name>
        <initializer>= { &quot;NDArrayAddr&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="395" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="395" bodyend="395"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_f_f_t_8cpp_1ac7e214be38a3b3bface5e0370ae97db0" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg5</definition>
        <argsstring></argsstring>
        <name>initArg5</name>
        <initializer>= { &quot;maxBuffers&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="396" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="396" bodyend="396"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_f_f_t_8cpp_1a43397205694aec859f3b5cb14a85edc3" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg6</definition>
        <argsstring></argsstring>
        <name>initArg6</name>
        <initializer>= { &quot;maxMemory&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="397" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="397" bodyend="397"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_f_f_t_8cpp_1a36049b095d9ed1f56a41821a2c8fc661" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg7</definition>
        <argsstring></argsstring>
        <name>initArg7</name>
        <initializer>= { &quot;priority&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="398" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="398" bodyend="398"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_f_f_t_8cpp_1a62a0c5258a2c1049720be5c31729f76d" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg8</definition>
        <argsstring></argsstring>
        <name>initArg8</name>
        <initializer>= { &quot;stackSize&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="399" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="399" bodyend="399"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_f_f_t_8cpp_1a310f7847b682c968669300db5550d9fa" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg9</definition>
        <argsstring></argsstring>
        <name>initArg9</name>
        <initializer>= { &quot;maxThreads&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="400" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="400" bodyend="400"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_f_f_t_8cpp_1ac0d7f455ac7138e5bcb473b630294718" prot="public" static="yes" mutable="no">
        <type>const iocshArg *const</type>
        <definition>const iocshArg* const initArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>initArgs</name>
        <initializer>= {&amp;initArg0,
                                            &amp;initArg1,
                                            &amp;initArg2,
                                            &amp;initArg3,
                                            &amp;initArg4,
                                            &amp;initArg5,
                                            &amp;initArg6,
                                            &amp;initArg7,
                                            &amp;initArg8,
                                            &amp;initArg9}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="401" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="401" bodyend="410"/>
      </memberdef>
      <memberdef kind="variable" id="_n_d_plugin_f_f_t_8cpp_1a469a3ecf9fff33f8f388acddffc8db6a" prot="public" static="yes" mutable="no">
        <type>const iocshFuncDef</type>
        <definition>const iocshFuncDef initFuncDef</definition>
        <argsstring></argsstring>
        <name>initFuncDef</name>
        <initializer>= {&quot;NDFFTConfigure&quot;, 10, initArgs}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="411" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="411" bodyend="411"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_n_d_plugin_f_f_t_8cpp_1af933708bd1fc775cc79f6f80aec2bdf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NDFFTConfigure</definition>
        <argsstring>(const char *portName, int queueSize, int blockingCallbacks, const char *NDArrayPort, int NDArrayAddr, int maxBuffers, size_t maxMemory, int priority, int stackSize, int maxThreads)</argsstring>
        <name>NDFFTConfigure</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>queueSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blockingCallbacks</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>NDArrayPort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NDArrayAddr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxBuffers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxMemory</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stackSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxThreads</declname>
        </param>
        <briefdescription>
<para>Configuration command. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="380" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="380" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="_n_d_plugin_f_f_t_8cpp_1aeeec53c20b81d2e7f49be49509087df5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void initCallFunc</definition>
        <argsstring>(const iocshArgBuf *args)</argsstring>
        <name>initCallFunc</name>
        <param>
          <type>const iocshArgBuf *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="412" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="412" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="_n_d_plugin_f_f_t_8cpp_1ab80de8d8caa9aec8d20d251aabf59b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NDFFTRegister</definition>
        <argsstring>(void)</argsstring>
        <name>NDFFTRegister</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="420" column="17" bodyfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" bodystart="420" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="_n_d_plugin_f_f_t_8cpp_1a43ab02b3c281cb772867474b5fbf7efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>epicsExportRegistrar</definition>
        <argsstring>(NDFFTRegister)</argsstring>
        <name>epicsExportRegistrar</name>
        <param>
          <type><ref refid="_n_d_plugin_f_f_t_8cpp_1ab80de8d8caa9aec8d20d251aabf59b44" kindref="member">NDFFTRegister</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" line="426" column="1" declfile="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp" declline="426" declcolumn="1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iocsh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_n_d_plugin_f_f_t_8h" kindref="compound">NDPluginFFT.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fft_8h" kindref="compound">fft.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsExport.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN(A,B)<sp/>((A<sp/>&lt;=<sp/>B)<sp/>?<sp/>A<sp/>:<sp/>B)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>const<sp/>char<sp/>*driverName<sp/>=<sp/>&quot;NDPluginFFT&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="class_n_d_plugin_f_f_t_1afd5a6c255bea607a18b0198dd01bb172" kindref="member">NDPluginFFT::NDPluginFFT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queueSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockingCallbacks,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*NDArrayPort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NDArrayAddr,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxThreads)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invoke<sp/>the<sp/>base<sp/>class<sp/>constructor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_n_d_plugin_driver" kindref="compound">NDPluginDriver</ref>(portName,<sp/>queueSize,<sp/>blockingCallbacks,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NDArrayPort,<sp/>NDArrayAddr,<sp/>1,<sp/>maxBuffers,<sp/>maxMemory,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynFloat64Mask<sp/>|<sp/>asynFloat64ArrayMask<sp/>|<sp/>asynGenericPointerMask,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynFloat64Mask<sp/>|<sp/>asynFloat64ArrayMask<sp/>|<sp/>asynGenericPointerMask,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>priority,<sp/>stackSize,<sp/>maxThreads),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>numAverage_(0),<sp/>uniqueId_(0),<sp/>nTimeXIn_(0),<sp/>nTimeYIn_(0),<sp/>FFTAbsValue_(0),<sp/>timePerPoint_(0),<sp/>timeAxis_(0),<sp/>freqAxis_(0)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//const<sp/>char<sp/>*functionName<sp/>=<sp/>&quot;NDPluginFFT::NDPluginFFT&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>createParam(<ref refid="_n_d_plugin_f_f_t_8h_1a311dc757ed6e459cc2962d5fb63fa310" kindref="member">FFTTimeAxisString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64Array,<sp/>&amp;P_FFTTimeAxis);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>createParam(<ref refid="_n_d_plugin_f_f_t_8h_1a026971e1536dcc1a8763fa201a021b25" kindref="member">FFTFreqAxisString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64Array,<sp/>&amp;P_FFTFreqAxis);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>createParam(<ref refid="_n_d_plugin_f_f_t_8h_1a30bcaf0d42e2b4fd492dfe6a779191f3" kindref="member">FFTTimePerPointString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;P_FFTTimePerPoint);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>createParam(<ref refid="_n_d_plugin_f_f_t_8h_1aa5aab58e0915361b765bd48b0ba284bf" kindref="member">FFTDirectionString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;P_FFTDirection);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>createParam(<ref refid="_n_d_plugin_f_f_t_8h_1ad869409eaf98c41eeca4f036279b8fc6" kindref="member">FFTSuppressDCString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;P_FFTSuppressDC);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>createParam(<ref refid="_n_d_plugin_f_f_t_8h_1aa2a05d87189550cf979675e6f568eb41" kindref="member">FFTNumAverageString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;P_FFTNumAverage);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>createParam(<ref refid="_n_d_plugin_f_f_t_8h_1a70c758bb6e88aae38a0ef42c3b380443" kindref="member">FFTNumAveragedString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;P_FFTNumAveraged);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>createParam(<ref refid="_n_d_plugin_f_f_t_8h_1a60c9f05f287e772b97fb7699de444f44" kindref="member">FFTResetAverageString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;P_FFTResetAverage);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>createParam(<ref refid="_n_d_plugin_f_f_t_8h_1a836ed127c51a3fe602b16b7aafc73cef" kindref="member">FFTTimeSeriesString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64Array,<sp/>&amp;P_FFTTimeSeries);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>createParam(<ref refid="_n_d_plugin_f_f_t_8h_1a8fc7398c2f4ca3dd38e4c60d3c2d398c" kindref="member">FFTRealString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64Array,<sp/>&amp;P_FFTReal);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>createParam(<ref refid="_n_d_plugin_f_f_t_8h_1a7af6576229ad34ecdced3582331ea687" kindref="member">FFTImaginaryString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64Array,<sp/>&amp;P_FFTImaginary);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>createParam(<ref refid="_n_d_plugin_f_f_t_8h_1ac36af7f53500cb28839ed2ed1c8eef63" kindref="member">FFTAbsValueString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64Array,<sp/>&amp;P_FFTAbsValue);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>plugin<sp/>type<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>setStringParam(NDPluginDriverPluginType,<sp/></highlight><highlight class="stringliteral">&quot;NDPluginFFT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>connect<sp/>to<sp/>the<sp/>array<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>connectToArrayPort();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NDPluginFFT::nextPow2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>v--;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>v<sp/>|=<sp/>v<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>v<sp/>|=<sp/>v<sp/>&gt;&gt;<sp/>2;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>v<sp/>|=<sp/>v<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>v<sp/>|=<sp/>v<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>v<sp/>|=<sp/>v<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>v++;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NDPluginFFT::allocateArrays(<ref refid="structfft_pvt__t" kindref="compound">fftPvt_t</ref><sp/>*pPvt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sizeChanged)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Round<sp/>dimensions<sp/>up<sp/>to<sp/>next<sp/>power<sp/>of<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref><sp/>=<sp/>nextPow2(pPvt-&gt;<ref refid="structfft_pvt__t_1ac549f61c7fb17ad3b83a8cae6736d3c4" kindref="member">nTimeXIn</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a2918c14ecd134cbc3801fc1e70333561" kindref="member">nTimeY</ref><sp/>=<sp/>nextPow2(pPvt-&gt;<ref refid="structfft_pvt__t_1ad3c6c03da144eb96be294f6b34707db2" kindref="member">nTimeYIn</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref><sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a8b5e42f5bd537de14e2f84b3dd6620ea" kindref="member">nFreqY</ref><sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a2918c14ecd134cbc3801fc1e70333561" kindref="member">nTimeY</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pPvt-&gt;<ref refid="structfft_pvt__t_1a8b5e42f5bd537de14e2f84b3dd6620ea" kindref="member">nFreqY</ref><sp/>&lt;<sp/>1)<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a8b5e42f5bd537de14e2f84b3dd6620ea" kindref="member">nFreqY</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>timeSize<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref><sp/>*<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a2918c14ecd134cbc3801fc1e70333561" kindref="member">nTimeY</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>freqSize<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref><sp/>*<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a8b5e42f5bd537de14e2f84b3dd6620ea" kindref="member">nFreqY</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a1d5dab47704acdf6a936be256068affa" kindref="member">timeSeries</ref><sp/><sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)calloc(timeSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref><sp/><sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)calloc(timeSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>*<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>Complex<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a937fb78547d4f8bb588dc1742cf9781b" kindref="member">FFTReal</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)calloc(freqSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a2c6eb8721a7e34742e9a0dcdd881a453" kindref="member">FFTImaginary</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)calloc(freqSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a309b2a49c114eb2395be011b95146789" kindref="member">FFTAbsValue</ref><sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)calloc(freqSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeChanged)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FFTAbsValue_)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(FFTAbsValue_);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>FFTAbsValue_<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)calloc(freqSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>nFreqX_<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>nFreqY_<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a8b5e42f5bd537de14e2f84b3dd6620ea" kindref="member">nFreqY</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>createAxisArrays(pPvt);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NDPluginFFT::computeFFT_1D(<ref refid="structfft_pvt__t" kindref="compound">fftPvt_t</ref><sp/>*pPvt)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>[2*j]<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a1d5dab47704acdf6a936be256068affa" kindref="member">timeSeries</ref>[j];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>[2*j+1]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="fft_8c_1af8fbdc158ca7a4c5c0547f0cfa6994bb" kindref="member">fft_1D</ref>(pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>,<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a937fb78547d4f8bb588dc1742cf9781b" kindref="member">FFTReal</ref><sp/><sp/><sp/><sp/><sp/>[j]<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>[2*j];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a2c6eb8721a7e34742e9a0dcdd881a453" kindref="member">FFTImaginary</ref>[j]<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>[2*j+1];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a309b2a49c114eb2395be011b95146789" kindref="member">FFTAbsValue</ref><sp/>[j]<sp/>=<sp/>sqrt((pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>[2*j]<sp/><sp/><sp/>*<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>[2*j]<sp/>+</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>[2*j+1]<sp/>*<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>[2*j+1]))<sp/>/<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pPvt-&gt;<ref refid="structfft_pvt__t_1af1bf469ef6a724e02f7ae1b744c6917e" kindref="member">suppressDC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a937fb78547d4f8bb588dc1742cf9781b" kindref="member">FFTReal</ref><sp/><sp/><sp/><sp/><sp/><sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a2c6eb8721a7e34742e9a0dcdd881a453" kindref="member">FFTImaginary</ref><sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a309b2a49c114eb2395be011b95146789" kindref="member">FFTAbsValue</ref><sp/><sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NDPluginFFT::computeFFT_2D(<ref refid="structfft_pvt__t" kindref="compound">fftPvt_t</ref><sp/>*pPvt)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,j,<sp/>k;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pIn;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dims[2];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref>*pPvt-&gt;<ref refid="structfft_pvt__t_1a2918c14ecd134cbc3801fc1e70333561" kindref="member">nTimeY</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>[2*j]<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a1d5dab47704acdf6a936be256068affa" kindref="member">timeSeries</ref>[j];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>[2*j+1]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>dims[0]<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>dims[1]<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a2918c14ecd134cbc3801fc1e70333561" kindref="member">nTimeY</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="fft_8c_1a32b08af213a19d655dbac8197989a5c4" kindref="member">fft_ND</ref>(pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>,<sp/>dims,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0,<sp/>k=0,<sp/>pIn=pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;pPvt-&gt;<ref refid="structfft_pvt__t_1a8b5e42f5bd537de14e2f84b3dd6620ea" kindref="member">nFreqY</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++,<sp/>pIn+=pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref>*2)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref>;<sp/>j++,<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a937fb78547d4f8bb588dc1742cf9781b" kindref="member">FFTReal</ref><sp/><sp/><sp/><sp/><sp/>[k]<sp/>=<sp/>pIn[j*2];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a2c6eb8721a7e34742e9a0dcdd881a453" kindref="member">FFTImaginary</ref>[k]<sp/>=<sp/>pIn[j*2+1];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a309b2a49c114eb2395be011b95146789" kindref="member">FFTAbsValue</ref><sp/>[k]=<sp/>sqrt((pPvt-&gt;<ref refid="structfft_pvt__t_1a937fb78547d4f8bb588dc1742cf9781b" kindref="member">FFTReal</ref>[k]<sp/>*<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a937fb78547d4f8bb588dc1742cf9781b" kindref="member">FFTReal</ref>[k])<sp/>+<sp/>(pPvt-&gt;<ref refid="structfft_pvt__t_1a2c6eb8721a7e34742e9a0dcdd881a453" kindref="member">FFTImaginary</ref>[k]<sp/>*<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a2c6eb8721a7e34742e9a0dcdd881a453" kindref="member">FFTImaginary</ref>[k]))<sp/>/<sp/>(pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref><sp/>*<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a2918c14ecd134cbc3801fc1e70333561" kindref="member">nTimeY</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pPvt-&gt;<ref refid="structfft_pvt__t_1af1bf469ef6a724e02f7ae1b744c6917e" kindref="member">suppressDC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a937fb78547d4f8bb588dc1742cf9781b" kindref="member">FFTReal</ref><sp/><sp/><sp/><sp/><sp/><sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a2c6eb8721a7e34742e9a0dcdd881a453" kindref="member">FFTImaginary</ref><sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a309b2a49c114eb2395be011b95146789" kindref="member">FFTAbsValue</ref><sp/><sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NDPluginFFT::doArrayCallbacks(<ref refid="structfft_pvt__t" kindref="compound">fftPvt_t</ref><sp/>*pPvt)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dims[2];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>epicsTimeStamp<sp/>now;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pOut;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oldFraction,<sp/>newFraction;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numAverage;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numAveraged;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resetAverage;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freqSize;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arrayCallbacks;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pArrayOut;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1af2354f73acece6ee2427f5069b16fdb5" kindref="member">NDArrayCallbacks</ref>,<sp/>&amp;arrayCallbacks);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_n_d_plugin_f_f_t_1a0b3335e32b29702a963f36b2e1c726de" kindref="member">P_FFTResetAverage</ref>,<sp/>&amp;resetAverage);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_n_d_plugin_f_f_t_1a061016232b19e8363b2eb74a2a02d78b" kindref="member">P_FFTNumAverage</ref>,<sp/><sp/><sp/>&amp;numAverage);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_n_d_plugin_f_f_t_1ae3de3bbe760733396c1525cb15e84a0c" kindref="member">P_FFTNumAveraged</ref>,<sp/><sp/>&amp;numAveraged);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resetAverage)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_n_d_plugin_f_f_t_1a0b3335e32b29702a963f36b2e1c726de" kindref="member">P_FFTResetAverage</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>numAveraged<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numAverage<sp/>!=<sp/>numAverage_)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>numAverage_<sp/>=<sp/>numAverage;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>numAveraged<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>oldFraction<sp/>=<sp/>1.<sp/>-<sp/>1./numAveraged;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>newFraction<sp/>=<sp/>1./numAveraged;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numAveraged<sp/>&lt;<sp/>numAverage)<sp/>numAveraged++;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_n_d_plugin_f_f_t_1ae3de3bbe760733396c1525cb15e84a0c" kindref="member">P_FFTNumAveraged</ref>,<sp/>numAveraged);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>use<sp/>the<sp/>smaller<sp/>of<sp/>FFTAbsValue_<sp/>and<sp/>this<sp/>array<sp/>in<sp/>case<sp/>it<sp/>changed<sp/>when<sp/>we<sp/>were<sp/>computing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>freqSize<sp/>=<sp/><ref refid="_n_d_plugin_f_f_t_8cpp_1adcd021ac91d43a62b2cdecf9a5b971a7" kindref="member">MIN</ref>(pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref><sp/>*<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a8b5e42f5bd537de14e2f84b3dd6620ea" kindref="member">nFreqY</ref>,<sp/>nFreqX_<sp/>*<sp/>nFreqY_);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>freqSize;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>FFTAbsValue_[j]<sp/>=<sp/>FFTAbsValue_[j]<sp/>*<sp/>oldFraction<sp/>+<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a309b2a49c114eb2395be011b95146789" kindref="member">FFTAbsValue</ref>[j]<sp/>*<sp/>newFraction;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arrayCallbacks)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>dims[0]<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>dims[1]<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a8b5e42f5bd537de14e2f84b3dd6620ea" kindref="member">nFreqY</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>pArrayOut<sp/>=<sp/><ref refid="classasyn_n_d_array_driver_1ad3969854a37329ef4061cc560e9022dc" kindref="member">pNDArrayPool</ref>-&gt;<ref refid="class_n_d_array_pool_1a26b4360694655c4af6c853c2f3d2ce5e" kindref="member">alloc</ref>(pPvt-&gt;<ref refid="structfft_pvt__t_1a8082708ffdb45fd99eac8b96f6e72b20" kindref="member">rank</ref>,<sp/>dims,<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a623c10faaa72cf1b79d5ab4916941298" kindref="member">NDFloat64</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>pOut=(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)pArrayOut-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(pOut,<sp/>FFTAbsValue_,<sp/>freqSize<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1a7492ba858d885e2ba226a1c7ef9dcf72" kindref="member">getAttributes</ref>(pArrayOut-&gt;<ref refid="class_n_d_array_1af5aad7b41118f465621cf045ed957469" kindref="member">pAttributeList</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>getTimeStamp(&amp;pArrayOut-&gt;<ref refid="class_n_d_array_1a107537f0e084674fbec9225cf63c3979" kindref="member">epicsTS</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;now);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>pArrayOut-&gt;<ref refid="class_n_d_array_1ac449943846ba4c5c18aa1ca5559470c2" kindref="member">timeStamp</ref><sp/>=<sp/>now.secPastEpoch<sp/>+<sp/>now.nsec<sp/>/<sp/>1.e9;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>pArrayOut-&gt;<ref refid="class_n_d_array_1a62f165653bd0099f31b3d276bdb81d3c" kindref="member">uniqueId</ref><sp/>=<sp/>uniqueId_++;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_plugin_driver_1ad2a1210161a2f542f347482aa93f3797" kindref="member">NDPluginDriver::endProcessCallbacks</ref>(pArrayOut,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>waveform<sp/>callbacks.<sp/><sp/>This<sp/>only<sp/>does<sp/>the<sp/>first<sp/>row<sp/>for<sp/>2-D<sp/>FFTs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>doCallbacksFloat64Array(pPvt-&gt;<ref refid="structfft_pvt__t_1a1d5dab47704acdf6a936be256068affa" kindref="member">timeSeries</ref>,<sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref>,<sp/><ref refid="class_n_d_plugin_f_f_t_1a7dd842b1aeaf1c6d35cdca1ba022f7f3" kindref="member">P_FFTTimeSeries</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>doCallbacksFloat64Array(pPvt-&gt;<ref refid="structfft_pvt__t_1a937fb78547d4f8bb588dc1742cf9781b" kindref="member">FFTReal</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref>,<sp/><ref refid="class_n_d_plugin_f_f_t_1a5776649ceb37fc00f420a68b3a9e13dd" kindref="member">P_FFTReal</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>doCallbacksFloat64Array(pPvt-&gt;<ref refid="structfft_pvt__t_1a2c6eb8721a7e34742e9a0dcdd881a453" kindref="member">FFTImaginary</ref>,<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref>,<sp/><ref refid="class_n_d_plugin_f_f_t_1a6132f78c7314c3bc7fa2b4d13ee680e8" kindref="member">P_FFTImaginary</ref>,<sp/><sp/>0);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>doCallbacksFloat64Array(FFTAbsValue_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_n_d_plugin_f_f_t_8cpp_1adcd021ac91d43a62b2cdecf9a5b971a7" kindref="member">MIN</ref>(pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref>,<sp/>nFreqX_),<sp/><ref refid="class_n_d_plugin_f_f_t_1a548a4472d16923a85e7e4e4150c59572" kindref="member">P_FFTAbsValue</ref>,<sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>free(pPvt-&gt;<ref refid="structfft_pvt__t_1a1d5dab47704acdf6a936be256068affa" kindref="member">timeSeries</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>free(pPvt-&gt;<ref refid="structfft_pvt__t_1ac8f8662097175689a66033e143d0d957" kindref="member">FFTComplex</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>free(pPvt-&gt;<ref refid="structfft_pvt__t_1a937fb78547d4f8bb588dc1742cf9781b" kindref="member">FFTReal</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>free(pPvt-&gt;<ref refid="structfft_pvt__t_1a2c6eb8721a7e34742e9a0dcdd881a453" kindref="member">FFTImaginary</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>free(pPvt-&gt;<ref refid="structfft_pvt__t_1a309b2a49c114eb2395be011b95146789" kindref="member">FFTAbsValue</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NDPluginFFT::createAxisArrays(<ref refid="structfft_pvt__t" kindref="compound">fftPvt_t</ref><sp/>*pPvt)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freqStep;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeAxis_)<sp/>free(timeAxis_);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freqAxis_)<sp/>free(freqAxis_);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>timeAxis_<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)calloc(pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>freqAxis_<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)calloc(pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref>;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>timeAxis_[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>*<sp/>timePerPoint_;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>this<sp/>-<sp/>are<sp/>the<sp/>frequencies<sp/>correct,<sp/>or<sp/>off-by-one?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>freqStep<sp/>=<sp/>0.5<sp/>/<sp/>timePerPoint_<sp/>/<sp/>(pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref>;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>freqAxis_[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>*<sp/>freqStep;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>doCallbacksFloat64Array(timeAxis_,<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref>,<sp/><ref refid="class_n_d_plugin_f_f_t_1aa0c87376317f862df2679f0ff679f7d0" kindref="member">P_FFTTimeAxis</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>doCallbacksFloat64Array(freqAxis_,<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a74ea3f68dfc25d5550a497b03847d728" kindref="member">nFreqX</ref>,<sp/><ref refid="class_n_d_plugin_f_f_t_1ad91c226f1b4add9fed1cc1f3e39d613c" kindref="member">P_FFTFreqAxis</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>epicsType&gt;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NDPluginFFT::convertToDoubleT(<ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pArray,<sp/><ref refid="structfft_pvt__t" kindref="compound">fftPvt_t</ref><sp/>*pPvt)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>epicsType<sp/>*pIn;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pOut;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0,<sp/>pIn=(epicsType<sp/>*)pArray-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>,<sp/>pOut=pPvt-&gt;<ref refid="structfft_pvt__t_1a1d5dab47704acdf6a936be256068affa" kindref="member">timeSeries</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;pPvt-&gt;<ref refid="structfft_pvt__t_1ad3c6c03da144eb96be294f6b34707db2" kindref="member">nTimeYIn</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++,<sp/>pOut+=pPvt-&gt;<ref refid="structfft_pvt__t_1a1be1e623d647b2d55a653fb8308fc14e" kindref="member">nTimeX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;pPvt-&gt;<ref refid="structfft_pvt__t_1ac549f61c7fb17ad3b83a8cae6736d3c4" kindref="member">nTimeXIn</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pOut[j]<sp/>=<sp/>(epicsFloat64)*pIn++;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_d_plugin_f_f_t_1a7895f0a9df03318aef5681c32752372c" kindref="member">NDPluginFFT::processCallbacks</ref>(<ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pArray)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//This<sp/>function<sp/>is<sp/>called<sp/>with<sp/>the<sp/>mutex<sp/>already<sp/>locked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//It<sp/>unlocks<sp/>it<sp/>during<sp/>long<sp/>calculations<sp/>when<sp/>private<sp/>structures<sp/>don&apos;t<sp/>need<sp/>to<sp/>be<sp/>protected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timePerPoint;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="structfft_pvt__t" kindref="compound">fftPvt_t</ref><sp/>*pPvt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structfft_pvt__t" kindref="compound">fftPvt_t</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sizeChanged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NDPluginFFT::processCallbacks&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>base<sp/>class<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="class_n_d_plugin_driver_1a1aef91c358b7b8bde97fc1a01eb7c00d" kindref="member">NDPluginDriver::beginProcessCallbacks</ref>(pArray);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>plugin<sp/>only<sp/>works<sp/>with<sp/>1-D<sp/>or<sp/>2-D<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pArray-&gt;<ref refid="class_n_d_array_1a4769c6ebb8275710a58bd88dba086b71" kindref="member">ndims</ref>)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a8082708ffdb45fd99eac8b96f6e72b20" kindref="member">rank</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac549f61c7fb17ad3b83a8cae6736d3c4" kindref="member">nTimeXIn</ref><sp/>=<sp/>(int)pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ad3c6c03da144eb96be294f6b34707db2" kindref="member">nTimeYIn</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1a8082708ffdb45fd99eac8b96f6e72b20" kindref="member">rank</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac549f61c7fb17ad3b83a8cae6736d3c4" kindref="member">nTimeXIn</ref><sp/>=<sp/>(int)pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ad3c6c03da144eb96be294f6b34707db2" kindref="member">nTimeYIn</ref><sp/>=<sp/>(int)pArray-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[1].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>error,<sp/>number<sp/>of<sp/>array<sp/>dimensions<sp/>must<sp/>be<sp/>1<sp/>or<sp/>2\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functionName);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pPvt-&gt;<ref refid="structfft_pvt__t_1ac549f61c7fb17ad3b83a8cae6736d3c4" kindref="member">nTimeXIn</ref><sp/>!=<sp/>nTimeXIn_)<sp/>||</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(pPvt-&gt;<ref refid="structfft_pvt__t_1ad3c6c03da144eb96be294f6b34707db2" kindref="member">nTimeYIn</ref><sp/>!=<sp/>nTimeYIn_))<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>sizeChanged<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>nTimeXIn_<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ac549f61c7fb17ad3b83a8cae6736d3c4" kindref="member">nTimeXIn</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>nTimeYIn_<sp/>=<sp/>pPvt-&gt;<ref refid="structfft_pvt__t_1ad3c6c03da144eb96be294f6b34707db2" kindref="member">nTimeYIn</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_n_d_plugin_f_f_t_1a936c196bc1ffe5d56f8abca3673847b0" kindref="member">P_FFTSuppressDC</ref>,<sp/>&amp;pPvt-&gt;<ref refid="structfft_pvt__t_1af1bf469ef6a724e02f7ae1b744c6917e" kindref="member">suppressDC</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>allocateArrays(pPvt,<sp/>sizeChanged);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_n_d_plugin_f_f_t_1a2d9b6bcd271bbed2fb0f0095a1989b62" kindref="member">P_FFTTimePerPoint</ref>,<sp/>&amp;timePerPoint);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timePerPoint<sp/>!=<sp/>timePerPoint_)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>timePerPoint_<sp/>=<sp/>timePerPoint;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>createAxisArrays(pPvt);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>the<sp/>lock,<sp/>things<sp/>below<sp/>don&apos;t<sp/>access<sp/>shared<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(pArray-&gt;<ref refid="class_n_d_array_1ad3757e8e6a87bc8a5889f60a3d0cdb59" kindref="member">dataType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16aa4bc4803d2c1a0073497f0b4b4d2243f" kindref="member">NDInt8</ref>:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>convertToDoubleT&lt;epicsInt8&gt;(pArray,<sp/>pPvt);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16aa5f7c86d8f7853be5eb27c00481f93de" kindref="member">NDUInt8</ref>:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>convertToDoubleT&lt;epicsUInt8&gt;(pArray,<sp/>pPvt);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a92d371d7b532347d945fba329d356cd1" kindref="member">NDInt16</ref>:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>convertToDoubleT&lt;epicsInt16&gt;(pArray,<sp/>pPvt);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a174cfb9ba69c78761d4d9d25ec1bd8df" kindref="member">NDUInt16</ref>:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>convertToDoubleT&lt;epicsUInt16&gt;(pArray,<sp/>pPvt);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a460cbd8f43b3531669bc85cc3a4e9a80" kindref="member">NDInt32</ref>:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>convertToDoubleT&lt;epicsInt32&gt;(pArray,<sp/>pPvt);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a0492c093c2dcd6eebcaf15f57a2f359a" kindref="member">NDUInt32</ref>:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>convertToDoubleT&lt;epicsUInt32&gt;(pArray,<sp/>pPvt);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16ab3bb6ba9d7a837f0baa39d58842fe104" kindref="member">NDInt64</ref>:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>convertToDoubleT&lt;epicsInt64&gt;(pArray,<sp/>pPvt);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a2236b98df209c4bb5292348cc494726e" kindref="member">NDUInt64</ref>:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>convertToDoubleT&lt;epicsUInt64&gt;(pArray,<sp/>pPvt);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a9a2e64c19df36030bbd572addce4e835" kindref="member">NDFloat32</ref>:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>convertToDoubleT&lt;epicsFloat32&gt;(pArray,<sp/>pPvt);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a623c10faaa72cf1b79d5ab4916941298" kindref="member">NDFloat64</ref>:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>convertToDoubleT&lt;epicsFloat64&gt;(pArray,<sp/>pPvt);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pPvt-&gt;<ref refid="structfft_pvt__t_1a8082708ffdb45fd99eac8b96f6e72b20" kindref="member">rank</ref><sp/>==<sp/>1)<sp/>computeFFT_1D(pPvt);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pPvt-&gt;<ref refid="structfft_pvt__t_1a8082708ffdb45fd99eac8b96f6e72b20" kindref="member">rank</ref><sp/>==<sp/>2)<sp/>computeFFT_2D(pPvt);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>the<sp/>lock<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>doArrayCallbacks(pPvt);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pPvt;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_n_d_plugin_f_f_t_8cpp_1af933708bd1fc775cc79f6f80aec2bdf9" kindref="member">NDFFTConfigure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queueSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockingCallbacks,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*NDArrayPort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NDArrayAddr,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxThreads)</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_plugin_f_f_t" kindref="compound">NDPluginFFT</ref><sp/>*pPlugin<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_n_d_plugin_f_f_t" kindref="compound">NDPluginFFT</ref>(portName,<sp/>queueSize,<sp/>blockingCallbacks,<sp/>NDArrayPort,<sp/>NDArrayAddr,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxBuffers,<sp/>maxMemory,<sp/>priority,<sp/>stackSize,<sp/>maxThreads);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pPlugin-&gt;<ref refid="class_n_d_plugin_driver_1a085bcf8d331f7dedac92af07c94b2d15" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EPICS<sp/>iocsh<sp/>shell<sp/>commands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg0<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;portName&quot;</highlight><highlight class="normal">,iocshArgString};</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg1<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;frame<sp/>queue<sp/>size&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg2<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;blocking<sp/>callbacks&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg3<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;NDArrayPort&quot;</highlight><highlight class="normal">,iocshArgString};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg4<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;NDArrayAddr&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg5<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;maxBuffers&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg6<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;maxMemory&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg7<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;priority&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg8<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;stackSize&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg9<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;maxThreads&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>initArgs[]<sp/>=<sp/>{&amp;initArg0,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg1,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg2,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg3,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg4,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg5,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg6,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg7,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg8,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg9};</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshFuncDef<sp/>initFuncDef<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;NDFFTConfigure&quot;</highlight><highlight class="normal">,<sp/>10,<sp/>initArgs};</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initCallFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArgBuf<sp/>*args)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="_n_d_plugin_f_f_t_8cpp_1af933708bd1fc775cc79f6f80aec2bdf9" kindref="member">NDFFTConfigure</ref>(args[0].sval,<sp/>args[1].ival,<sp/>args[2].ival,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[3].sval,<sp/>args[4].ival,<sp/>args[5].ival,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[6].ival,<sp/>args[7].ival,<sp/>args[8].ival,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[9].ival);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_n_d_plugin_f_f_t_8cpp_1ab80de8d8caa9aec8d20d251aabf59b44" kindref="member">NDFFTRegister</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>iocshRegister(&amp;initFuncDef,initCallFunc);</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><ref refid="_n_d_plugin_f_f_t_8cpp_1a43ab02b3c281cb772867474b5fbf7efd" kindref="member">epicsExportRegistrar</ref>(<ref refid="_n_d_plugin_f_f_t_8cpp_1ab80de8d8caa9aec8d20d251aabf59b44" kindref="member">NDFFTRegister</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADCore/ADApp/pluginSrc/NDPluginFFT.cpp"/>
  </compounddef>
</doxygen>
