<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="pixirad_8cpp" kind="file" language="C++">
    <compoundname>pixirad.cpp</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">epicsTime.h</includes>
    <includes local="no">epicsThread.h</includes>
    <includes local="no">epicsEvent.h</includes>
    <includes local="no">epicsString.h</includes>
    <includes local="no">epicsStdio.h</includes>
    <includes local="no">epicsMutex.h</includes>
    <includes local="no">osiSock.h</includes>
    <includes local="no">iocsh.h</includes>
    <includes local="no">asynOctetSyncIO.h</includes>
    <includes local="no">asynCommonSyncIO.h</includes>
    <includes refid="_a_d_driver_8h" local="yes">ADDriver.h</includes>
    <includes refid="_p_i_x_i_e_i_i__data__utilities__v2_8h" local="yes">PIXIEII_data_utilities_v2.h</includes>
    <includes local="no">epicsExport.h</includes>
    <incdepgraph>
      <node id="16">
        <label>iocsh.h</label>
      </node>
      <node id="15">
        <label>osiSock.h</label>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="36">
        <label>pxrd2_interface_misc.h</label>
        <link refid="pxrd2__interface__misc_8h"/>
      </node>
      <node id="20">
        <label>epicsTypes.h</label>
      </node>
      <node id="24">
        <label>NDArray.h</label>
        <link refid="_n_d_array_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>NDAttributeList.h</label>
        <link refid="_n_d_attribute_list_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="14">
        <label>epicsMutex.h</label>
      </node>
      <node id="7">
        <label>errno.h</label>
      </node>
      <node id="31">
        <label>epicsVersion.h</label>
      </node>
      <node id="28">
        <label>string</label>
      </node>
      <node id="10">
        <label>epicsThread.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="37">
        <label>epicsExport.h</label>
      </node>
      <node id="19">
        <label>ADDriver.h</label>
        <link refid="_a_d_driver_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ADCoreVersion.h</label>
        <link refid="_a_d_core_version_8h"/>
      </node>
      <node id="30">
        <label>ADCoreAPI.h</label>
        <link refid="_a_d_core_a_p_i_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>asynNDArrayDriver.h</label>
        <link refid="asyn_n_d_array_driver_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp</label>
        <link refid="pixirad_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>epicsString.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="35">
        <label>PIXIEII_data_utilities_v2.h</label>
        <link refid="_p_i_x_i_e_i_i__data__utilities__v2_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ellLib.h</label>
      </node>
      <node id="27">
        <label>NDAttribute.h</label>
        <link refid="_n_d_attribute_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>asynDriver.h</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="33">
        <label>Codec.h</label>
        <link refid="_codec_8h"/>
      </node>
      <node id="9">
        <label>epicsTime.h</label>
      </node>
      <node id="23">
        <label>asynPortDriver.h</label>
      </node>
      <node id="13">
        <label>epicsStdio.h</label>
      </node>
      <node id="25">
        <label>set</label>
      </node>
      <node id="21">
        <label>epicsMessageQueue.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="17">
        <label>asynOctetSyncIO.h</label>
      </node>
      <node id="11">
        <label>epicsEvent.h</label>
      </node>
      <node id="18">
        <label>asynCommonSyncIO.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classpixirad" prot="public">pixirad</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pixirad_8cpp_1ae578001fe043b4cca7a0edd801cfe9c4" prot="public" static="no">
        <name>DRIVER_VERSION</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="40" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a09d8a9e616d09d45e8f4c3ad80849872" prot="public" static="no">
        <name>DRIVER_REVISION</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="41" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a00a7ebec19bc60e5ee0344109af2fd82" prot="public" static="no">
        <name>DRIVER_MODIFICATION</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="42" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1acb84a306ee37479f97cf0b476560f027" prot="public" static="no">
        <name>MAX_MESSAGE_SIZE</name>
        <initializer>256</initializer>
        <briefdescription>
<para>Messages to/from server. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="45" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ae0328f65d7c2dcde1d131cd74919f69b" prot="public" static="no">
        <name>SERVER_DEFAULT_TIMEOUT</name>
        <initializer>1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="46" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a7a2d9d537c45c2603169c0ceb2804874" prot="public" static="no">
        <name>DEW_POINT_WARNING</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="49" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a2c2776e2ec269dfc604fc1abe3581120" prot="public" static="no">
        <name>DEW_POINT_ERROR</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="50" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a8c39afd65e72a10167167317cdee25cc" prot="public" static="no">
        <name>THOT_WARNING</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="51" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a57817ad0671113e52a2efac49c727e7a" prot="public" static="no">
        <name>THOT_ERROR</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="52" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a0bb5ec7fc194919af4e1c456f94c3576" prot="public" static="no">
        <name>TCOLD_WARNING</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="53" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1aee74f490df151792e8f00d74bb4bc737" prot="public" static="no">
        <name>TCOLD_ERROR</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="54" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a07587c0dcf4f2a9767ca654950f23c52" prot="public" static="no">
        <name>DETECTOR_RESET_TIME</name>
        <initializer>5.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="56" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a36b8cfe87aa349b297612afdac56a7e5" prot="public" static="no">
        <name>MAX_UDP_DATA_BUFFER</name>
        <initializer>256217728</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="58" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ad1952d01dc581eccab71e4663eb00121" prot="public" static="no">
        <name>MAX_UDP_PACKET_LEN</name>
        <initializer>1448</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="59" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a636220b32fddc6a6d54e2ced1fc4e518" prot="public" static="no">
        <name>DAQ_PACKET_FRAGMENT</name>
        <initializer>45</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="60" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a5875a8d6be6d870e0dfcd1c337f28a13" prot="public" static="no">
        <name>AUTOCAL_DATA</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="61" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a6cb393e198717cd20c5174cc6e7ebd37" prot="public" static="no">
        <name>PACKET_ID_OFFSET</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="62" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1afda3c2f595b1197456622490bf9c0a33" prot="public" static="no">
        <name>PACKET_ID_BYTES</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="63" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a8f94a6e9c88a8a9b463bf2f6a1125f50" prot="public" static="no">
        <name>PACKET_CRC_BYTES</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="64" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1aca2411136789e47bad4ef1bef6b98bc2" prot="public" static="no">
        <name>PACKET_TAG_BYTES</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="65" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a0d3de2b8eb842c26669a4a6811e1a391" prot="public" static="no">
        <name>PACKET_TAG_OFFSET</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="66" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a9d2d3d7280b47dcfa889ec169ad04042" prot="public" static="no">
        <name>FRAME_HAS_ALIGN_ERRORS</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="67" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a2f56a191b7526ad5d92d330753e6cbe3" prot="public" static="no">
        <name>PACKET_SENSOR_DATA_OFFSET</name>
        <initializer>(<ref refid="udp__client__pixirad__single_8cpp_1aca2411136789e47bad4ef1bef6b98bc2" kindref="member">PACKET_TAG_BYTES</ref> + <ref refid="udp__client__pixirad__single_8cpp_1afda3c2f595b1197456622490bf9c0a33" kindref="member">PACKET_ID_BYTES</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="68" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ac61b14d25bc9ba322d917604cfb2ed72" prot="public" static="no">
        <name>PACKET_EXTRA_BYTES</name>
        <initializer>(<ref refid="udp__client__pixirad__single_8cpp_1afda3c2f595b1197456622490bf9c0a33" kindref="member">PACKET_ID_BYTES</ref> + <ref refid="udp__client__pixirad__single_8cpp_1aca2411136789e47bad4ef1bef6b98bc2" kindref="member">PACKET_TAG_BYTES</ref> + <ref refid="udp__client__pixirad__single_8cpp_1a8f94a6e9c88a8a9b463bf2f6a1125f50" kindref="member">PACKET_CRC_BYTES</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="69" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ad30f017b8afa69acce147e7d34b0f647" prot="public" static="no">
        <name>PACKET_SENSOR_DATA_BYTES</name>
        <initializer>(<ref refid="pixirad_8cpp_1ad1952d01dc581eccab71e4663eb00121" kindref="member">MAX_UDP_PACKET_LEN</ref> - <ref refid="udp__client__pixirad__single_8cpp_1ac61b14d25bc9ba322d917604cfb2ed72" kindref="member">PACKET_EXTRA_BYTES</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="70" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a00237b40045a90575fe3609d6ac0eb86" prot="public" static="no">
        <name>PIXIEII_MODULES</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="71" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1adf01265ec90c6edb8ef03effbc631869" prot="public" static="no">
        <name>PIXIE_THDAC_OFFSET</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="72" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a494232671ece88e9e4096ccf6bdabe4f" prot="public" static="no">
        <name>DUMMY_0_OFFSET</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="73" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a8a54dd946c2a8609f0cc2d3f56753039" prot="public" static="no">
        <name>PIXIE_THDAC_MASK</name>
        <initializer>0x1f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="74" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1adf01265ec90c6edb8ef03effbc631869" prot="public" static="no">
        <name>PIXIE_THDAC_OFFSET</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="75" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a30160464b5a74b2bdf8facae51d604cf" prot="public" static="no">
        <name>DUMMY_1_OFFSET</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="76" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a10290155a529ee095e61fe1c9e181293" prot="public" static="no">
        <name>NUM_THRESHOLDS</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="78" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a86b6e7b2ead9bfd9b0d3cf881db5a603" prot="public" static="no">
        <name>THRESH_B_COEFF</name>
        <initializer>39.3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="79" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1aab23561bcbe10a371cc0d1e39c1a0db2" prot="public" static="no">
        <name>THRESH_A_COEFF</name>
        <initializer>36.6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="80" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a8709e3173b9a9a058bdf24d6a41a3770" prot="public" static="no">
        <name>EXTDAC_LSB</name>
        <initializer>0.000781</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="81" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a12d808ccd239ad86783aee5f2f7affe0" prot="public" static="no">
        <name>VAGND</name>
        <initializer>0.6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="82" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a4a9ddd5eadbe295620ae4acad18975c2" prot="public" static="no">
        <name>VTHMAX_UPPER_LIMIT</name>
        <initializer>2200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="83" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ae7e7cd87190c6b2be8750f430a82132f" prot="public" static="no">
        <name>VTHMAX_LOWER_LIMIT</name>
        <initializer>1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="84" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a9af32e68c814e82d76592dc9dcbdf91e" prot="public" static="no">
        <name>VTHMAX_DECR_STEP</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="85" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1abe9ee4c1455fd08993a403185b6c60dc" prot="public" static="no">
        <name>VTHMAX_MAX_ITERATIONS</name>
        <initializer>2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="86" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a30f5dae3e0728eb2bfa9f7bd6eee922f" prot="public" static="no">
        <name>VTH1_ACCURACY</name>
        <initializer>0.001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="87" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a1e8895f613338a983d2d2dba0c87ac67" prot="public" static="no">
        <name>INT_DAC_STEPS</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="88" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a7dd4314fdb578e78714d21d4a54ce471" prot="public" static="no">
        <name>INITIAL_HV_VALUE</name>
        <initializer>350</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="90" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ad0d31cd3d5ed3aa3a41d597a236bae5b" prot="public" static="no">
        <name>INITIAL_HV_STATE</name>
        <initializer><ref refid="pixirad_8cpp_1a4a72763846c1030b53925adced8fea6fa0dd54d5423ff7efb853fb0873340e5be" kindref="member">HVOn</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="91" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a1e5a100b136c3e2ec038084ab07885bd" prot="public" static="no">
        <name>INITIAL_HV_MODE</name>
        <initializer><ref refid="pixirad_8cpp_1ae6d2353eb71139639cee667d11e1910ea72f124563518db2f0176fe308f2c0989" kindref="member">HVAuto</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="92" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1aaa9d625c7c8a45d1f8d1eea46c50e2db" prot="public" static="no">
        <name>INITIAL_COOLING_VALUE</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="93" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a2427940529fb74e896672d36f3bebec8" prot="public" static="no">
        <name>INITIAL_COOLING_STATE</name>
        <initializer><ref refid="pixirad_8cpp_1a6af373633746888fb831519e9cb4994ca93fc1b6620c3d3bd417a9d5d48f960f8" kindref="member">CoolingOn</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="94" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a8bf7c42d8b1615952e0f68ef56a174e8" prot="public" static="no">
        <name>PIII_P0</name>
        <initializer>494.70</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="97" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a0a7ed5bc721f5a426655d576c462c79c" prot="public" static="no">
        <name>PIII_P1</name>
        <initializer>19.36</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="98" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ac107aa865766dbae4b336a7ed99946c5" prot="public" static="no">
        <name>PixiradSystemResetString</name>
        <initializer>&quot;SYSTEM_RESET&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="182" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a17606d25beb19bfd6ea8150d25855ae7" prot="public" static="no">
        <name>PixiradSystemInfoString</name>
        <initializer>&quot;SYSTEM_INFO&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="183" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ad437196b81277180d8a2202d40b90f77" prot="public" static="no">
        <name>PixiradColorsCollectedString</name>
        <initializer>&quot;COLORS_COLLECTED&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="184" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a174c3b0403a6eb6cc7ee87336a4bfd12" prot="public" static="no">
        <name>PixiradUDPBuffersReadString</name>
        <initializer>&quot;UDP_BUFFERS_READ&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="185" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a0d67ee400b292959b8f0ebea57a44837" prot="public" static="no">
        <name>PixiradUDPBuffersMaxString</name>
        <initializer>&quot;UDP_BUFFERS_MAX&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="186" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a7fc323b17835a6ef746d7f28348ee9c9" prot="public" static="no">
        <name>PixiradUDPBuffersFreeString</name>
        <initializer>&quot;UDP_BUFFERS_FREE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="187" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a398d80c0d729b6a20e0e87fd59ea8e05" prot="public" static="no">
        <name>PixiradUDPSpeedString</name>
        <initializer>&quot;UDP_SPEED&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="188" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ae01fee5cf2725660069e41d03188a0bf" prot="public" static="no">
        <name>PixiradThresh1String</name>
        <initializer>&quot;THRESHOLD1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="189" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a9bebfc28dba271f2fde1978888bc552a" prot="public" static="no">
        <name>PixiradThresh2String</name>
        <initializer>&quot;THRESHOLD2&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="190" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1aa8138a16d7193c7015cfbfe38f24d64a" prot="public" static="no">
        <name>PixiradThresh3String</name>
        <initializer>&quot;THRESHOLD3&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="191" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a4c21e1bb520f08188308f79b9ebf2382" prot="public" static="no">
        <name>PixiradThresh4String</name>
        <initializer>&quot;THRESHOLD4&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="192" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a378042832503d8b467dc202935515244" prot="public" static="no">
        <name>PixiradHitThreshString</name>
        <initializer>&quot;HIT_THRESHOLD&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="193" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ada5f4d139c027e98b2f9ce2dcf87ab0e" prot="public" static="no">
        <name>PixiradThreshActual1String</name>
        <initializer>&quot;THRESHOLD_ACTUAL1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="194" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1adea981164cb60ded1fc2d79e73a1ec50" prot="public" static="no">
        <name>PixiradThreshActual2String</name>
        <initializer>&quot;THRESHOLD_ACTUAL2&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="195" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a5cf77d3b5ef7ba0f0699a27063bad421" prot="public" static="no">
        <name>PixiradThreshActual3String</name>
        <initializer>&quot;THRESHOLD_ACTUAL3&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="196" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1aec4f5d089de6013dc2fb4b7640f680ca" prot="public" static="no">
        <name>PixiradThreshActual4String</name>
        <initializer>&quot;THRESHOLD_ACTUAL4&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="197" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a1117c60c7366732241b5f182ffb9eaea" prot="public" static="no">
        <name>PixiradHitThreshActualString</name>
        <initializer>&quot;HIT_THRESHOLD_ACTUAL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="198" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a994575a4b9961aff277c8349d441c34d" prot="public" static="no">
        <name>PixiradCountModeString</name>
        <initializer>&quot;COUNT_MODE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="199" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ae49844ffa14cbded9097471fae7be3c9" prot="public" static="no">
        <name>PixiradAutoCalibrateString</name>
        <initializer>&quot;AUTO_CALIBRATE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="200" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a707d6d7e9f710ae79f70995c8aa4b626" prot="public" static="no">
        <name>PixiradHVValueString</name>
        <initializer>&quot;HV_VALUE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="201" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1af5c83f405b5976d0bfa7b38a8e4245a0" prot="public" static="no">
        <name>PixiradHVStateString</name>
        <initializer>&quot;HV_STATE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="202" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a1cba5b7ac16b9f4ed0c78592b328115e" prot="public" static="no">
        <name>PixiradHVModeString</name>
        <initializer>&quot;HV_MODE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="203" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a871ba374e26ef4c4af0adc9fef94450a" prot="public" static="no">
        <name>PixiradHVActualString</name>
        <initializer>&quot;HV_ACTUAL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="204" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1adb997f70b10d0aaeacd9158eb9b8325e" prot="public" static="no">
        <name>PixiradHVCurrentString</name>
        <initializer>&quot;HV_CURRENT&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="205" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ae7d43170fcd984d96a0926db28e6ec8b" prot="public" static="no">
        <name>PixiradSyncInPolarityString</name>
        <initializer>&quot;SYNC_IN_POLARITY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="206" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a06f80af89a2040bc097d3e60d9745097" prot="public" static="no">
        <name>PixiradSyncOutPolarityString</name>
        <initializer>&quot;SYNC_OUT_POLARITY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="207" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a1c5a6e8014ff98b471f300b86afb9fb9" prot="public" static="no">
        <name>PixiradSyncOutFunctionString</name>
        <initializer>&quot;SYNC_OUT_FUNCTION&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="208" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a51d5d812e6e794e7c00ac8982ddd186e" prot="public" static="no">
        <name>PixiradCoolingStateString</name>
        <initializer>&quot;COOLING_STATE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="209" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ac15e26e23407fac3e88676ae11a5c08c" prot="public" static="no">
        <name>PixiradHotTemperatureString</name>
        <initializer>&quot;HOT_TEMPERATURE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="210" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1aec26cb89821833819171370b3a325d65" prot="public" static="no">
        <name>PixiradBoxTemperatureString</name>
        <initializer>&quot;BOX_TEMPERATURE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="211" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a3cef9aface6180446bc76fa2637a251f" prot="public" static="no">
        <name>PixiradBoxHumidityString</name>
        <initializer>&quot;BOX_HUMIDITY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="212" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a2c8dfaf8d41f5dc82835482ae8630742" prot="public" static="no">
        <name>PixiradDewPointString</name>
        <initializer>&quot;DEW_POINT&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="213" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ae8d8cb259f5f619f62d0628a700aec86" prot="public" static="no">
        <name>PixiradCoolingStatusString</name>
        <initializer>&quot;COOLING_STATUS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="214" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a17879c47d550553d19763e683805f669" prot="public" static="no">
        <name>PixiradPeltierPowerString</name>
        <initializer>&quot;PELTIER_POWER&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="215" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1ae8ab4d3cce948178623c403dac9fac3d" prot="public" static="no">
        <name>FIRST_PIXIRAD_PARAM</name>
        <initializer>PixiradSystemReset</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="238" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1afe6ceec780799d478971303c811c00fc" prot="public" static="no">
        <name>LAST_PIXIRAD_PARAM</name>
        <initializer>PixiradPeltierPower</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="272" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1a4cda9b5c14fc8a781dcb62ff03adfcce" prot="public" static="no">
        <name>NUM_PIXIRAD_PARAMS</name>
        <initializer>((int)(&amp;<ref refid="pixirad_8cpp_1afe6ceec780799d478971303c811c00fc" kindref="member">LAST_PIXIRAD_PARAM</ref> - &amp;<ref refid="pixirad_8cpp_1ae8ab4d3cce948178623c403dac9fac3d" kindref="member">FIRST_PIXIRAD_PARAM</ref> + 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="301" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixirad_8cpp_1aa942dd4099d9f1c69e52305934621915" prot="public" static="no">
        <name>MAX_STATUS_PARAMS</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1274" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="pixirad_8cpp_1a0f95a556fa1140241d3c9394298d7eab" prot="public" static="no" strong="no">
        <type></type>
        <name>PixiradTriggerMode_t</name>
        <enumvalue id="pixirad_8cpp_1a0f95a556fa1140241d3c9394298d7eabacda9ee85028a22f342355d14bd5d4956" prot="public">
          <name>TMInternal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1a0f95a556fa1140241d3c9394298d7eaba4b7059a36ddbc3b1782404e07aba3003" prot="public">
          <name>TMExternal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1a0f95a556fa1140241d3c9394298d7eabac47b80fba96da6d400f40823a19f9d59" prot="public">
          <name>TMBulb</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Trigger modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="101" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="enum" id="pixirad_8cpp_1a6af373633746888fb831519e9cb4994c" prot="public" static="no" strong="no">
        <type></type>
        <name>PixiradCoolingState_t</name>
        <enumvalue id="pixirad_8cpp_1a6af373633746888fb831519e9cb4994cad14668d814c577213e2e9fd2764d90e5" prot="public">
          <name>CoolingOff</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1a6af373633746888fb831519e9cb4994ca93fc1b6620c3d3bd417a9d5d48f960f8" prot="public">
          <name>CoolingOn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Cooling state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="109" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="enum" id="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bf" prot="public" static="no" strong="no">
        <type></type>
        <name>PixiradCoolingStatus_t</name>
        <enumvalue id="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa88a0eff8ae7261c4b3fc66b851d9a295" prot="public">
          <name>TSOK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa3c295bc60dc0e71aec735b26c1e6eeea" prot="public">
          <name>TSDewPointWarning</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa3737841a4db91939b985380a98448b17" prot="public">
          <name>TSDewPointError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfad4f0584fb154e3ff8b83bae5491d03eb" prot="public">
          <name>TSTHotWarning</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa804b5f05786f0e5119392b18f9e5a348" prot="public">
          <name>TSTHotError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfacb2e7b074a7087cbc528a47021bc44fc" prot="public">
          <name>TSTColdWarning</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa88bab5367d89598d198bccd25c286ae0" prot="public">
          <name>TSTColdError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Temperature status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="115" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="115" bodyend="123"/>
      </memberdef>
      <memberdef kind="enum" id="pixirad_8cpp_1a4a72763846c1030b53925adced8fea6f" prot="public" static="no" strong="no">
        <type></type>
        <name>PixiradHVState_t</name>
        <enumvalue id="pixirad_8cpp_1a4a72763846c1030b53925adced8fea6fa4a2777ab082cf1e3754d43f688b6764e" prot="public">
          <name>HVOff</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1a4a72763846c1030b53925adced8fea6fa0dd54d5423ff7efb853fb0873340e5be" prot="public">
          <name>HVOn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>High voltage state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="126" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="enum" id="pixirad_8cpp_1ae6d2353eb71139639cee667d11e1910e" prot="public" static="no" strong="no">
        <type></type>
        <name>PixiradHVMode_t</name>
        <enumvalue id="pixirad_8cpp_1ae6d2353eb71139639cee667d11e1910ea2f248dde8b7ccd0a2eef4a1b08d5257a" prot="public">
          <name>HVManual</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1ae6d2353eb71139639cee667d11e1910ea72f124563518db2f0176fe308f2c0989" prot="public">
          <name>HVAuto</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>High voltage mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="132" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="enum" id="pixirad_8cpp_1ad1219ca802537cc551de22ac659dff0b" prot="public" static="no" strong="no">
        <type></type>
        <name>PixiradSyncPolarity_t</name>
        <enumvalue id="pixirad_8cpp_1ad1219ca802537cc551de22ac659dff0ba48134889f33bd1296de0cabc36b7b222" prot="public">
          <name>SyncPos</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1ad1219ca802537cc551de22ac659dff0bad30cdf1235ba7dd4f89f018449055d7e" prot="public">
          <name>SyncNeg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Sync in/out polarity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="139" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="enum" id="pixirad_8cpp_1a94dda801a8ff836beaa7b8e758f3ee76" prot="public" static="no" strong="no">
        <type></type>
        <name>PixiradSyncOutFunction_t</name>
        <enumvalue id="pixirad_8cpp_1a94dda801a8ff836beaa7b8e758f3ee76a42c085475f471e7df2983b12e06f017d" prot="public">
          <name>SyncOutShutter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1a94dda801a8ff836beaa7b8e758f3ee76afe09687bc8b38f69e5b1fb8fdb6c8406" prot="public">
          <name>SyncOutReadoutDone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1a94dda801a8ff836beaa7b8e758f3ee76a08fb27f91add4a1faf3052539a7617d1" prot="public">
          <name>SyncOutRead</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Sync out function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="146" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="enum" id="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91" prot="public" static="no" strong="no">
        <type></type>
        <name>PixiradFrameType_t</name>
        <enumvalue id="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91af76d592cfe4129b07820c683b8434ccf" prot="public">
          <name>FTOneColorLow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91aa2de6604e45740368c20e29258e96324" prot="public">
          <name>FTOneColorHigh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91a4b3a9208613ae851e055734fcbfc3f90" prot="public">
          <name>FTTwoColors</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91ae0661e7f135595532a90a537eede21ec" prot="public">
          <name>FTFourColors</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91a6aedc3c887f2939ef602422a27c90b7b" prot="public">
          <name>FTOneColorDTF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91a06007fef035d635f1152e717173c1bfc" prot="public">
          <name>FTTwoColorsDTF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Frame type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="154" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="154" bodyend="161"/>
      </memberdef>
      <memberdef kind="enum" id="pixirad_8cpp_1acd950c85d0667e56be331919040b4c49" prot="public" static="no" strong="no">
        <type></type>
        <name>PixiradCountModeType_t</name>
        <enumvalue id="pixirad_8cpp_1acd950c85d0667e56be331919040b4c49a9e72c838c59439c7514215dd070f9fc7" prot="public">
          <name>RM_Normal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1acd950c85d0667e56be331919040b4c49a038c24615c25ba049242e8230035fff9" prot="public">
          <name>RM_NPI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pixirad_8cpp_1acd950c85d0667e56be331919040b4c49a6d888c6339052aca834fa1399a5ac951" prot="public">
          <name>RM_NPI_SUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="165" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="165" bodyend="169"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pixirad_8cpp_1a93e5396e85bf5d4551162ac8523c0725" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* PixiradTriggerModeStrings[]</definition>
        <argsstring>[]</argsstring>
        <name>PixiradTriggerModeStrings</name>
        <initializer>= {&quot;INT&quot;, &quot;EXT1&quot;, &quot;EXT2&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="106" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1ad0d8ed9f1835d9a9cdc729102a31e8fc" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* PixiradHVModeStrings[]</definition>
        <argsstring>[]</argsstring>
        <name>PixiradHVModeStrings</name>
        <initializer>= {&quot;STDHV&quot;, &quot;<ref refid="pxrd2__interface__misc_8h_1a28c239da1ff27240ab75a9b85e604f40a1f5d4a778fb8dfc945666a42bee2e905" kindref="member">AUTOHV</ref>&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="136" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a56141f30be4063212d7ac41036f2c116" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* PixiradSyncPolarityStrings[]</definition>
        <argsstring>[]</argsstring>
        <name>PixiradSyncPolarityStrings</name>
        <initializer>= {&quot;POS&quot;, &quot;NEG&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="143" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a4a25a9faad42b533c48a46373e94ac17" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* PixiradSyncOutFunctionStrings[]</definition>
        <argsstring>[]</argsstring>
        <name>PixiradSyncOutFunctionStrings</name>
        <initializer>= {&quot;SHUTTER&quot;, &quot;RODONE&quot;, &quot;READ&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="151" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1acb8799c6329d4c1e120701c46a49bd3f" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* PixiradFrameTypeStrings[]</definition>
        <argsstring>[]</argsstring>
        <name>PixiradFrameTypeStrings</name>
        <initializer>= {&quot;1COL0&quot;, &quot;1COL1&quot;, &quot;2COL&quot;, &quot;4COL&quot;, &quot;DTF&quot;, &quot;2COLDTF&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="162" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1ae2442e3a612bad02ed8dd96915d3a5ec" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* PixiradCountModeStrings[]</definition>
        <argsstring>[]</argsstring>
        <name>PixiradCountModeStrings</name>
        <initializer>= {&quot;Normal&quot;, &quot;<ref refid="pxrd2__interface__misc_8h_1ae91fe72279f4baeb9a9c750e4f3f1669ab20b261e6d2298e4fc675fa29e701523" kindref="member">NPI</ref>&quot;, &quot;<ref refid="pxrd2__interface__misc_8h_1ae91fe72279f4baeb9a9c750e4f3f1669a5252ccba30927d5d857197c136040580" kindref="member">NPISUM</ref>&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="170" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1ae207392ddd1ab3064ea0adb9d44dcadb" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* PixiradModelNames[]</definition>
        <argsstring>[]</argsstring>
        <name>PixiradModelNames</name>
        <initializer>= {&quot;Pixirad-1&quot;, &quot;Pixirad-2&quot;, &quot;Pixirad-4&quot;, &quot;Pixrad-8&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="171" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1af0e94d13028051cd5339d204bfbb057d" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* driverName</definition>
        <argsstring></argsstring>
        <name>driverName</name>
        <initializer>= &quot;pixirad&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="173" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1afaa70bdabcb6cfcb24cf25965fd1efc1" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>double thresholdFractions[]</definition>
        <argsstring>[]</argsstring>
        <name>thresholdFractions</name>
        <initializer>= {
    0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,
    0.12,0.14,0.16,0.18,0.2,0.22,0.24,0.26,0.28,
    0.32,0.36,0.40,0.44,0.48,0.52,0.56,0.60,
    0.7,0.8,0.9,1.0
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="175" column="15" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a511dfa439a4555d462709186fcee9f9b" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradConfigArg0</definition>
        <argsstring></argsstring>
        <name>pixiradConfigArg0</name>
        <initializer>= {&quot;Port name&quot;, iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1532" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a491a132fda9feb7d7b41ef5a7536f3cb" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradConfigArg1</definition>
        <argsstring></argsstring>
        <name>pixiradConfigArg1</name>
        <initializer>= {&quot;command port name&quot;, iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1533" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1abeb0903516b37619146f98763928fe67" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradConfigArg2</definition>
        <argsstring></argsstring>
        <name>pixiradConfigArg2</name>
        <initializer>= {&quot;data port number&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1534" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1ad006b2b96ac55b443cf9e4ee71fffa55" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradConfigArg3</definition>
        <argsstring></argsstring>
        <name>pixiradConfigArg3</name>
        <initializer>= {&quot;status port number&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1535" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1aa585bd0520301e0d2a414610627dcc13" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradConfigArg4</definition>
        <argsstring></argsstring>
        <name>pixiradConfigArg4</name>
        <initializer>= {&quot;max data port buffers&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1536" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a93ff7d67d099257c3e425e65b8201958" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradConfigArg5</definition>
        <argsstring></argsstring>
        <name>pixiradConfigArg5</name>
        <initializer>= {&quot;maxSizeX&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1537" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a518561cb46638fd3ee97173bed0f97a4" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradConfigArg6</definition>
        <argsstring></argsstring>
        <name>pixiradConfigArg6</name>
        <initializer>= {&quot;maxSizeY&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1538" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1ac8a82fcbd84a71d22e2a7648004eb54b" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradConfigArg7</definition>
        <argsstring></argsstring>
        <name>pixiradConfigArg7</name>
        <initializer>= {&quot;maxBuffers&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1539" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a0e535948b27357cb4aca2ff6ae9aa4ec" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradConfigArg8</definition>
        <argsstring></argsstring>
        <name>pixiradConfigArg8</name>
        <initializer>= {&quot;maxMemory&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1540" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1aacfc9a2fa297bfe159c6d5c7a30043cf" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradConfigArg9</definition>
        <argsstring></argsstring>
        <name>pixiradConfigArg9</name>
        <initializer>= {&quot;priority&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1541" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1ad4148818664044842f856d024e46e885" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradConfigArg10</definition>
        <argsstring></argsstring>
        <name>pixiradConfigArg10</name>
        <initializer>= {&quot;stackSize&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1542" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a196fe562b688ac4d1785e3964717474d" prot="public" static="yes" mutable="no">
        <type>const iocshArg *const</type>
        <definition>const iocshArg* const pixiradConfigArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>pixiradConfigArgs</name>
        <initializer>=  {&amp;pixiradConfigArg0,
                                                      &amp;pixiradConfigArg1,
                                                      &amp;pixiradConfigArg2,
                                                      &amp;pixiradConfigArg3,
                                                      &amp;pixiradConfigArg4,
                                                      &amp;pixiradConfigArg5,
                                                      &amp;pixiradConfigArg6,
                                                      &amp;pixiradConfigArg7,
                                                      &amp;pixiradConfigArg8,
                                                      &amp;pixiradConfigArg9,
                                                      &amp;pixiradConfigArg10}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1543" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a57dcdc8ede165a1c6671007d6bba59f4" prot="public" static="yes" mutable="no">
        <type>const iocshFuncDef</type>
        <definition>const iocshFuncDef configPixirad</definition>
        <argsstring></argsstring>
        <name>configPixirad</name>
        <initializer>= {&quot;pixiradConfig&quot;, 11, pixiradConfigArgs}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1554" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1554" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1ae4b1af336c7840b2e5f8306477b0988b" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradAutoCalArg0</definition>
        <argsstring></argsstring>
        <name>pixiradAutoCalArg0</name>
        <initializer>= {&quot;Port name&quot;, iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1562" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a878e9100efe56ce0c834cbc02b7cb17d" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradAutoCalArg1</definition>
        <argsstring></argsstring>
        <name>pixiradAutoCalArg1</name>
        <initializer>= {&quot;ofs0&quot;,  iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1563" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a92a2fe75ccbbc10bd73de09056913be7" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradAutoCalArg2</definition>
        <argsstring></argsstring>
        <name>pixiradAutoCalArg2</name>
        <initializer>= {&quot;fs0&quot;,   iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1564" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1af76d70edaf40ce4dc0b028011d42afb7" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradAutoCalArg3</definition>
        <argsstring></argsstring>
        <name>pixiradAutoCalArg3</name>
        <initializer>= {&quot;ofs2&quot;,  iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1565" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1ad7f522a65d353b05efd03b488ee44697" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradAutoCalArg4</definition>
        <argsstring></argsstring>
        <name>pixiradAutoCalArg4</name>
        <initializer>= {&quot;fs1&quot;,   iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1566" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a23f51d2b5e824f411ffe93e52d0ad6b5" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradAutoCalArg5</definition>
        <argsstring></argsstring>
        <name>pixiradAutoCalArg5</name>
        <initializer>= {&quot;fs2&quot;,   iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1567" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1ac57f076527c382ace872b5e2e1c14c25" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradAutoCalArg6</definition>
        <argsstring></argsstring>
        <name>pixiradAutoCalArg6</name>
        <initializer>= {&quot;Ibias&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1568" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1aabf95a0eddb506cbe0b3c7bd06235628" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg pixiradAutoCalArg7</definition>
        <argsstring></argsstring>
        <name>pixiradAutoCalArg7</name>
        <initializer>= {&quot;vbgMcalDAC&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1569" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a1428d6cb808299b45bc4f5b29659a41c" prot="public" static="yes" mutable="no">
        <type>const iocshArg *const</type>
        <definition>const iocshArg* const pixiradAutoCalArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>pixiradAutoCalArgs</name>
        <initializer>=  {&amp;pixiradAutoCalArg0,
                                                       &amp;pixiradAutoCalArg1,
                                                       &amp;pixiradAutoCalArg2,
                                                       &amp;pixiradAutoCalArg3,
                                                       &amp;pixiradAutoCalArg4,
                                                       &amp;pixiradAutoCalArg5,
                                                       &amp;pixiradAutoCalArg6,
                                                       &amp;pixiradAutoCalArg7}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1570" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pixirad_8cpp_1a925416f20cbb6f39582bcb78490c2ced" prot="public" static="yes" mutable="no">
        <type>const iocshFuncDef</type>
        <definition>const iocshFuncDef autoCalPixirad</definition>
        <argsstring></argsstring>
        <name>autoCalPixirad</name>
        <initializer>= {&quot;pixiradAutoCal&quot;, 8, pixiradAutoCalArgs}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1578" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1578" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pixirad_8cpp_1a3c1f30ad79c5befe6807ac9f2337c9de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void statusTaskC</definition>
        <argsstring>(void *drvPvt)</argsstring>
        <name>statusTaskC</name>
        <param>
          <type>void *</type>
          <declname>drvPvt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="303" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="303" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="pixirad_8cpp_1afe835ab34c6add575c581932a4888075" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dataTaskC</definition>
        <argsstring>(void *drvPvt)</argsstring>
        <name>dataTaskC</name>
        <param>
          <type>void *</type>
          <declname>drvPvt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="310" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="310" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="pixirad_8cpp_1adb883c68a7324e672dacc8af9a7d9908" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void udpDataListenerTaskC</definition>
        <argsstring>(void *drvPvt)</argsstring>
        <name>udpDataListenerTaskC</name>
        <param>
          <type>void *</type>
          <declname>drvPvt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="317" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="317" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="pixirad_8cpp_1a51acd12fed84d7d676c06d02cfeb7066" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double get_vth_from_fit</definition>
        <argsstring>(double EnergyKev)</argsstring>
        <name>get_vth_from_fit</name>
        <param>
          <type>double</type>
          <declname>EnergyKev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="324" column="15" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="324" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="pixirad_8cpp_1a410496799896737721ebb373cc9adda5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double get_energy_from_fit</definition>
        <argsstring>(double Vth)</argsstring>
        <name>get_energy_from_fit</name>
        <param>
          <type>double</type>
          <declname>Vth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="330" column="15" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="330" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="pixirad_8cpp_1a784d9feaec3a56ffcc89cc46e086e5f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double get_Vth_from_settings</definition>
        <argsstring>(int VTHMAX, double fraction)</argsstring>
        <name>get_Vth_from_settings</name>
        <param>
          <type>int</type>
          <declname>VTHMAX</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fraction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="336" column="15" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="pixirad_8cpp_1a3ff550a4ed374f62085eac802f68a197" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int set_closest_Eth_DAC</definition>
        <argsstring>(double *allowedEth_ptr, double Eth, int *DAC, double *EthSet)</argsstring>
        <name>set_closest_Eth_DAC</name>
        <param>
          <type>double *</type>
          <declname>allowedEth_ptr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Eth</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>DAC</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>EthSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="342" column="12" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="342" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="pixirad_8cpp_1aedc1be32cfb228d23ff22db6545140d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pixiradConfig</definition>
        <argsstring>(const char *portName, const char *commandPort, int dataPortNumber, int statusPortNumber, int maxDataPortBuffers, int maxSizeX, int maxSizeY, int maxBuffers, size_t maxMemory, int priority, int stackSize)</argsstring>
        <name>pixiradConfig</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>commandPort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dataPortNumber</declname>
        </param>
        <param>
          <type>int</type>
          <declname>statusPortNumber</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxDataPortBuffers</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxSizeX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxSizeY</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxBuffers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxMemory</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stackSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1510" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1510" bodyend="1520"/>
      </memberdef>
      <memberdef kind="function" id="pixirad_8cpp_1aec8ed0f1b1b6824fa6849c4eccac9c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pixiradAutoCal</definition>
        <argsstring>(const char *portName, int ofs0, int fs0, int ofs2, int fs1, int fs2, int ibias, int vbgMcalDAC)</argsstring>
        <name>pixiradAutoCal</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ofs0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fs0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ofs2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fs1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fs2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibias</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vbgMcalDAC</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1522" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1522" bodyend="1529"/>
      </memberdef>
      <memberdef kind="function" id="pixirad_8cpp_1abb75982d3a3c4501e5cf3fe7264312ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void configPixiradCallFunc</definition>
        <argsstring>(const iocshArgBuf *args)</argsstring>
        <name>configPixiradCallFunc</name>
        <param>
          <type>const iocshArgBuf *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1555" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1555" bodyend="1560"/>
      </memberdef>
      <memberdef kind="function" id="pixirad_8cpp_1a4652b2c914da076081617906a9c1b111" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void autoCalPixiradCallFunc</definition>
        <argsstring>(const iocshArgBuf *args)</argsstring>
        <name>autoCalPixiradCallFunc</name>
        <param>
          <type>const iocshArgBuf *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1579" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1579" bodyend="1583"/>
      </memberdef>
      <memberdef kind="function" id="pixirad_8cpp_1a25207bc38f0f4ead0ce91980f8ae7879" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pixiradRegister</definition>
        <argsstring>(void)</argsstring>
        <name>pixiradRegister</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1587" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" bodystart="1587" bodyend="1591"/>
      </memberdef>
      <memberdef kind="function" id="pixirad_8cpp_1a99a5e6c941547c383d169d40812df756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>epicsExportRegistrar</definition>
        <argsstring>(pixiradRegister)</argsstring>
        <name>epicsExportRegistrar</name>
        <param>
          <type>pixiradRegister</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" line="1594" column="1" declfile="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp" declline="1594" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>pixirad.cpp</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>a<sp/>driver<sp/>for<sp/>the<sp/>PiXirad<sp/>pixel<sp/>array<sp/>detector.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>It<sp/>communicates<sp/>directly<sp/>with<sp/>the<sp/>PiXirad<sp/>box,<sp/>it<sp/>does<sp/>not<sp/>use<sp/>the<sp/>LabView<sp/>TCP/IP<sp/>server.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Mark<sp/>Rivers</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>University<sp/>of<sp/>Chicago</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/>January<sp/>11,<sp/>2014</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsTime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsThread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsEvent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsString.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsStdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsMutex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;osiSock.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iocsh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;asynOctetSyncIO.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;asynCommonSyncIO.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_d_driver_8h" kindref="compound">ADDriver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h" kindref="compound">PIXIEII_data_utilities_v2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsExport.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRIVER_VERSION<sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRIVER_REVISION<sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRIVER_MODIFICATION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_MESSAGE_SIZE<sp/>256<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVER_DEFAULT_TIMEOUT<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Environmental<sp/>warning<sp/>and<sp/>error<sp/>thresholds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEW_POINT_WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temperature<sp/>difference<sp/>of<sp/>TCold<sp/>and<sp/>DewPoint<sp/>for<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEW_POINT_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temperature<sp/>difference<sp/>of<sp/>TCold<sp/>and<sp/>DewPoint<sp/>for<sp/>error<sp/>and<sp/>shutoff<sp/>cooling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THOT_WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THOT_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCOLD_WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCOLD_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DETECTOR_RESET_TIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_UDP_DATA_BUFFER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256217728</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_UDP_PACKET_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1448</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAQ_PACKET_FRAGMENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>45</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AUTOCAL_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACKET_ID_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACKET_ID_BYTES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACKET_CRC_BYTES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACKET_TAG_BYTES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACKET_TAG_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAME_HAS_ALIGN_ERRORS<sp/><sp/><sp/><sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACKET_SENSOR_DATA_OFFSET<sp/><sp/><sp/>(PACKET_TAG_BYTES<sp/>+<sp/>PACKET_ID_BYTES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACKET_EXTRA_BYTES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PACKET_ID_BYTES<sp/>+<sp/>PACKET_TAG_BYTES<sp/>+<sp/>PACKET_CRC_BYTES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACKET_SENSOR_DATA_BYTES<sp/><sp/><sp/><sp/>(MAX_UDP_PACKET_LEN<sp/>-<sp/>PACKET_EXTRA_BYTES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIXIEII_MODULES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIXIE_THDAC_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DUMMY_0_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIXIE_THDAC_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIXIE_THDAC_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DUMMY_1_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_THRESHOLDS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/><sp/></highlight><highlight class="comment">//<sp/>Includes<sp/>Hit<sp/>Threshold<sp/>(VtHit)<sp/>for<sp/>PIII</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THRESH_B_COEFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>39.3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THRESH_A_COEFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>36.6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXTDAC_LSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.000781</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VAGND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VTHMAX_UPPER_LIMIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VTHMAX_LOWER_LIMIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VTHMAX_DECR_STEP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VTHMAX_MAX_ITERATIONS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VTH1_ACCURACY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_DAC_STEPS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITIAL_HV_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>350</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITIAL_HV_STATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HVOn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITIAL_HV_MODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HVAuto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITIAL_COOLING_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITIAL_COOLING_STATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoolingOn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Pixie-III<sp/>threshold<sp/>calibration<sp/>constants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIII_P0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>494.70</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIII_P1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>19.36</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a0f95a556fa1140241d3c9394298d7eabacda9ee85028a22f342355d14bd5d4956" kindref="member">TMInternal</ref>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a0f95a556fa1140241d3c9394298d7eaba4b7059a36ddbc3b1782404e07aba3003" kindref="member">TMExternal</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a0f95a556fa1140241d3c9394298d7eabac47b80fba96da6d400f40823a19f9d59" kindref="member">TMBulb</ref></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/><ref refid="pixirad_8cpp_1a0f95a556fa1140241d3c9394298d7eab" kindref="member">PixiradTriggerMode_t</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*PixiradTriggerModeStrings[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;INT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;EXT1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;EXT2&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a6af373633746888fb831519e9cb4994cad14668d814c577213e2e9fd2764d90e5" kindref="member">CoolingOff</ref>,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a6af373633746888fb831519e9cb4994ca93fc1b6620c3d3bd417a9d5d48f960f8" kindref="member">CoolingOn</ref></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}<sp/><ref refid="pixirad_8cpp_1a6af373633746888fb831519e9cb4994c" kindref="member">PixiradCoolingState_t</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa88a0eff8ae7261c4b3fc66b851d9a295" kindref="member">TSOK</ref>,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa3c295bc60dc0e71aec735b26c1e6eeea" kindref="member">TSDewPointWarning</ref>,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa3737841a4db91939b985380a98448b17" kindref="member">TSDewPointError</ref>,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfad4f0584fb154e3ff8b83bae5491d03eb" kindref="member">TSTHotWarning</ref>,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa804b5f05786f0e5119392b18f9e5a348" kindref="member">TSTHotError</ref>,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfacb2e7b074a7087cbc528a47021bc44fc" kindref="member">TSTColdWarning</ref>,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa88bab5367d89598d198bccd25c286ae0" kindref="member">TSTColdError</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal">}<sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bf" kindref="member">PixiradCoolingStatus_t</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a4a72763846c1030b53925adced8fea6fa4a2777ab082cf1e3754d43f688b6764e" kindref="member">HVOff</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a4a72763846c1030b53925adced8fea6fa0dd54d5423ff7efb853fb0873340e5be" kindref="member">HVOn</ref></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}<sp/><ref refid="pixirad_8cpp_1a4a72763846c1030b53925adced8fea6f" kindref="member">PixiradHVState_t</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1ae6d2353eb71139639cee667d11e1910ea2f248dde8b7ccd0a2eef4a1b08d5257a" kindref="member">HVManual</ref>,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1ae6d2353eb71139639cee667d11e1910ea72f124563518db2f0176fe308f2c0989" kindref="member">HVAuto</ref></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/><ref refid="pixirad_8cpp_1ae6d2353eb71139639cee667d11e1910e" kindref="member">PixiradHVMode_t</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*PixiradHVModeStrings[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;STDHV&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;AUTOHV&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1ad1219ca802537cc551de22ac659dff0ba48134889f33bd1296de0cabc36b7b222" kindref="member">SyncPos</ref>,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1ad1219ca802537cc551de22ac659dff0bad30cdf1235ba7dd4f89f018449055d7e" kindref="member">SyncNeg</ref></highlight></codeline>
<codeline lineno="142"><highlight class="normal">}<sp/><ref refid="pixirad_8cpp_1ad1219ca802537cc551de22ac659dff0b" kindref="member">PixiradSyncPolarity_t</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*PixiradSyncPolarityStrings[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;POS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NEG&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a94dda801a8ff836beaa7b8e758f3ee76a42c085475f471e7df2983b12e06f017d" kindref="member">SyncOutShutter</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a94dda801a8ff836beaa7b8e758f3ee76afe09687bc8b38f69e5b1fb8fdb6c8406" kindref="member">SyncOutReadoutDone</ref>,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1a94dda801a8ff836beaa7b8e758f3ee76a08fb27f91add4a1faf3052539a7617d1" kindref="member">SyncOutRead</ref></highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/><ref refid="pixirad_8cpp_1a94dda801a8ff836beaa7b8e758f3ee76" kindref="member">PixiradSyncOutFunction_t</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*PixiradSyncOutFunctionStrings[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;SHUTTER&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RODONE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91af76d592cfe4129b07820c683b8434ccf" kindref="member">FTOneColorLow</ref>,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91aa2de6604e45740368c20e29258e96324" kindref="member">FTOneColorHigh</ref>,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91a4b3a9208613ae851e055734fcbfc3f90" kindref="member">FTTwoColors</ref>,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91ae0661e7f135595532a90a537eede21ec" kindref="member">FTFourColors</ref>,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91a6aedc3c887f2939ef602422a27c90b7b" kindref="member">FTOneColorDTF</ref>,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91a06007fef035d635f1152e717173c1bfc" kindref="member">FTTwoColorsDTF</ref></highlight></codeline>
<codeline lineno="161"><highlight class="normal">}<sp/><ref refid="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91" kindref="member">PixiradFrameType_t</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*PixiradFrameTypeStrings[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;1COL0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1COL1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2COL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;4COL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DTF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2COLDTF&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>Readout<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1acd950c85d0667e56be331919040b4c49a9e72c838c59439c7514215dd070f9fc7" kindref="member">RM_Normal</ref>,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1acd950c85d0667e56be331919040b4c49a038c24615c25ba049242e8230035fff9" kindref="member">RM_NPI</ref>,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1acd950c85d0667e56be331919040b4c49a6d888c6339052aca834fa1399a5ac951" kindref="member">RM_NPI_SUM</ref></highlight></codeline>
<codeline lineno="169"><highlight class="normal">}<sp/><ref refid="pixirad_8cpp_1acd950c85d0667e56be331919040b4c49" kindref="member">PixiradCountModeType_t</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*PixiradCountModeStrings[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NPI&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NPISUM&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*PixiradModelNames[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Pixirad-1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Pixirad-2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Pixirad-4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Pixrad-8&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pixirad&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thresholdFractions[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>0.12,0.14,0.16,0.18,0.2,0.22,0.24,0.26,0.28,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>0.32,0.36,0.40,0.44,0.48,0.52,0.56,0.60,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>0.7,0.8,0.9,1.0</highlight></codeline>
<codeline lineno="180"><highlight class="normal">};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradSystemResetString<sp/><sp/><sp/><sp/><sp/>&quot;SYSTEM_RESET&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradSystemInfoString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;SYSTEM_INFO&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradColorsCollectedString<sp/>&quot;COLORS_COLLECTED&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradUDPBuffersReadString<sp/><sp/>&quot;UDP_BUFFERS_READ&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradUDPBuffersMaxString<sp/><sp/><sp/>&quot;UDP_BUFFERS_MAX&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradUDPBuffersFreeString<sp/><sp/>&quot;UDP_BUFFERS_FREE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradUDPSpeedString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;UDP_SPEED&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradThresh1String<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;THRESHOLD1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradThresh2String<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;THRESHOLD2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradThresh3String<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;THRESHOLD3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradThresh4String<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;THRESHOLD4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradHitThreshString<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;HIT_THRESHOLD&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradThreshActual1String<sp/><sp/><sp/>&quot;THRESHOLD_ACTUAL1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradThreshActual2String<sp/><sp/><sp/>&quot;THRESHOLD_ACTUAL2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradThreshActual3String<sp/><sp/><sp/>&quot;THRESHOLD_ACTUAL3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradThreshActual4String<sp/><sp/><sp/>&quot;THRESHOLD_ACTUAL4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradHitThreshActualString<sp/>&quot;HIT_THRESHOLD_ACTUAL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradCountModeString<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;COUNT_MODE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradAutoCalibrateString<sp/><sp/><sp/>&quot;AUTO_CALIBRATE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradHVValueString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;HV_VALUE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradHVStateString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;HV_STATE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradHVModeString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;HV_MODE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradHVActualString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;HV_ACTUAL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradHVCurrentString<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;HV_CURRENT&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradSyncInPolarityString<sp/><sp/>&quot;SYNC_IN_POLARITY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradSyncOutPolarityString<sp/>&quot;SYNC_OUT_POLARITY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradSyncOutFunctionString<sp/>&quot;SYNC_OUT_FUNCTION&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradCoolingStateString<sp/><sp/><sp/><sp/>&quot;COOLING_STATE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradHotTemperatureString<sp/><sp/>&quot;HOT_TEMPERATURE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradBoxTemperatureString<sp/><sp/>&quot;BOX_TEMPERATURE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradBoxHumidityString<sp/><sp/><sp/><sp/><sp/>&quot;BOX_HUMIDITY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradDewPointString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;DEW_POINT&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradCoolingStatusString<sp/><sp/><sp/>&quot;COOLING_STATUS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PixiradPeltierPowerString<sp/><sp/><sp/><sp/>&quot;PELTIER_POWER&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classpixirad" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpixirad" kindref="compound">pixirad</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_a_d_driver" kindref="compound">ADDriver</ref><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpixirad_1a408d5c00895964ff3735e77b8836a781" kindref="member">pixirad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*commandPortName,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataPortNumber,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>statusPortnumber,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxDataPortBuffers,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeY,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>the<sp/>methods<sp/>that<sp/>we<sp/>override<sp/>from<sp/>ADDriver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><ref refid="classpixirad_1a0e4a3d2e4c85cf199be95b4a5ccb4a6f" kindref="member">writeInt32</ref>(asynUser<sp/>*pasynUser,<sp/>epicsInt32<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><ref refid="classpixirad_1a4aed7a7a465c3e895ad4e004a6f5c296" kindref="member">writeFloat64</ref>(asynUser<sp/>*pasynUser,<sp/>epicsFloat64<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a463564bc46161c533f378ee1a76dd718" kindref="member">report</ref>(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>details);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>should<sp/>be<sp/>private<sp/>but<sp/>are<sp/>called<sp/>from<sp/>C<sp/>so<sp/>must<sp/>be<sp/>public<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1aa2589dfc1a30de45ffe140d015994313" kindref="member">statusTask</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1af0c3c9c2ff5d4d5895ebcd6b45ff8588" kindref="member">dataTask</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1af4269723eeb43f355b4a4bed8e3722df" kindref="member">udpDataListenerTask</ref>();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/><ref refid="classpixirad_1aaf4a33088fe941ebef2e53a4aa8608b8" kindref="member">setAutoCalParams</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fs0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fs1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fs2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibias,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vbgMcalDAC);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1ab3e5d9d2e77791b2a5797e969e22a6db" kindref="member">PixiradSystemReset</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FIRST_PIXIRAD_PARAM<sp/>PixiradSystemReset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a9feb80bb0636edd8dd572ece0b2e3159" kindref="member">PixiradSystemInfo</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a4a1e96eb22ec3ab1d9ed1980a1244492" kindref="member">PixiradColorsCollected</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a152f45e62fdc32f3e27c6dc86708469f" kindref="member">PixiradUDPBuffersRead</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a099043ad2fe1bad9401ee82193e36d08" kindref="member">PixiradUDPBuffersMax</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1aa3bb11e5ac3cadd4140c37bd3f7dffde" kindref="member">PixiradUDPBuffersFree</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a64fdb5505bd64d7f93dab3f237165975" kindref="member">PixiradUDPSpeed</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1aa05bf763eec6d2057286ece3827e093f" kindref="member">PixiradThresh1</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a3e5cb98210c380256377379919317a2f" kindref="member">PixiradThresh2</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a2112d9e9172bb4b921ee84f5ff8f943a" kindref="member">PixiradThresh3</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1ac817376c3ae535cc4592ed8daba721b0" kindref="member">PixiradThresh4</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a65b9c183509a72932f967014dba325db" kindref="member">PixiradHitThresh</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1ababaf9bf9be175f5bc25e4cf76692bc3" kindref="member">PixiradThreshActual1</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a3c7b1fbe39c24d48340e491cf1fb6799" kindref="member">PixiradThreshActual2</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1aa78352f33939307e65f1b540a5f07ef3" kindref="member">PixiradThreshActual3</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1afe47c7a86c659d945b27feaa67856928" kindref="member">PixiradThreshActual4</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1ab58528a5a63f354f9464b904d5a5b9f4" kindref="member">PixiradHitThreshActual</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a8707766a07014d19c455f6b60cdce713" kindref="member">PixiradCountMode</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1aea344ac1e517b591651e61a40d5fbfaf" kindref="member">PixiradAutoCalibrate</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1aadf2e5cdcf03276553f10c47fd94db9b" kindref="member">PixiradHVValue</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a19a9e1a90535264a3673847e179fc40a" kindref="member">PixiradHVState</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1ac83159a916f4df969dfa4b6acf713436" kindref="member">PixiradHVMode</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1ab83bc58932ae6a2dbe76a0cb9345052b" kindref="member">PixiradHVActual</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a74fe31006c1dcd25775d96bf915c4ade" kindref="member">PixiradHVCurrent</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1aad35956ca5438570840b232a1d0b09e7" kindref="member">PixiradSyncInPolarity</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1ae65a06e70fd515dd78e680715db99e56" kindref="member">PixiradSyncOutPolarity</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a9ade4a778630df8e80e55e943ef7b668" kindref="member">PixiradSyncOutFunction</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1af3ba7a503d7a5428aca5be8790962d19" kindref="member">PixiradCoolingState</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a1367e660199e0e1995749193f4c76ca9" kindref="member">PixiradHotTemperature</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a77056fc46393595f4e8beb3fa63e0d6e" kindref="member">PixiradBoxTemperature</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a68eedddc104bea618a560261281d5228" kindref="member">PixiradBoxHumidity</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1ac90c22d03963c5f7130ae73e6611f16f" kindref="member">PixiradDewPoint</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1ab6a84248195b434a7387d060d43e4283" kindref="member">PixiradCoolingStatus</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a38eaa33a2b5641b50ed93f51d4da257a" kindref="member">PixiradPeltierPower</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LAST_PIXIRAD_PARAM<sp/>PixiradPeltierPower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>the<sp/>methods<sp/>that<sp/>are<sp/>new<sp/>to<sp/>this<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>systemReset();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>writeReadServer();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setCoolingAndHV();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setThresholds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>doAutoCalibrate();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setSync();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>startAcquire();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>stopAcquire();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calculateThresholds(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*requestedEnergy_ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*VThMax_ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*thresholdRegisters_ptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*actualEnergy_ptr);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Our<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsMessageQueueId<sp/>dataMessageQueueId_;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataPortNumber_;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>statusPortNumber_;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxDataPortBuffers_;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>toServer_[<ref refid="pixirad_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fromServer_[<ref refid="pixirad_8cpp_1acb84a306ee37479f97cf0b476560f027" kindref="member">MAX_MESSAGE_SIZE</ref>];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>asynUser<sp/>*pasynUserCommand_;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>asynUser<sp/>*pasynUserCommandCommon_;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numUDPPackets_;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numAutocalUDPPackets_;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_n_s_o_r" kindref="compound">SENSOR</ref><sp/>sensor_;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vbgMcalDAC_;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">};</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_PIXIRAD_PARAMS<sp/>((int)(&amp;LAST_PIXIRAD_PARAM<sp/>-<sp/>&amp;FIRST_PIXIRAD_PARAM<sp/>+<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>statusTaskC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*drvPvt)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpixirad" kindref="compound">pixirad</ref><sp/>*pPvt<sp/>=<sp/>(<ref refid="classpixirad" kindref="compound">pixirad</ref><sp/>*)drvPvt;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="classpixirad_1aa2589dfc1a30de45ffe140d015994313" kindref="member">statusTask</ref>();</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dataTaskC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*drvPvt)</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpixirad" kindref="compound">pixirad</ref><sp/>*pPvt<sp/>=<sp/>(<ref refid="classpixirad" kindref="compound">pixirad</ref><sp/>*)drvPvt;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="classpixirad_1af0c3c9c2ff5d4d5895ebcd6b45ff8588" kindref="member">dataTask</ref>();</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>udpDataListenerTaskC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*drvPvt)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpixirad" kindref="compound">pixirad</ref><sp/>*pPvt<sp/>=<sp/>(<ref refid="classpixirad" kindref="compound">pixirad</ref><sp/>*)drvPvt;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="classpixirad_1af4269723eeb43f355b4a4bed8e3722df" kindref="member">udpDataListenerTask</ref>();</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_vth_from_fit(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EnergyKev)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>these<sp/>coefficients<sp/>only<sp/>one<sp/>solution<sp/>is<sp/>positive<sp/>and<sp/>there<sp/>is<sp/>always<sp/>one<sp/>if<sp/>EnergyKev<sp/>&gt;=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((-1.0)<sp/>*<sp/><ref refid="pixirad_8cpp_1a86b6e7b2ead9bfd9b0d3cf881db5a603" kindref="member">THRESH_B_COEFF</ref><sp/>+<sp/>sqrt(pow(<ref refid="pixirad_8cpp_1a86b6e7b2ead9bfd9b0d3cf881db5a603" kindref="member">THRESH_B_COEFF</ref>,2)<sp/>+<sp/>(4.0*<ref refid="pixirad_8cpp_1aab23561bcbe10a371cc0d1e39c1a0db2" kindref="member">THRESH_A_COEFF</ref>*EnergyKev)))<sp/>/<sp/>(2.0*<ref refid="pixirad_8cpp_1aab23561bcbe10a371cc0d1e39c1a0db2" kindref="member">THRESH_A_COEFF</ref>));</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_energy_from_fit(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Vth)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>these<sp/>coefficients<sp/>only<sp/>one<sp/>solution<sp/>is<sp/>positive<sp/>and<sp/>there<sp/>is<sp/>always<sp/>one<sp/>if<sp/>EnergyKev<sp/>&gt;=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="pixirad_8cpp_1aab23561bcbe10a371cc0d1e39c1a0db2" kindref="member">THRESH_A_COEFF</ref>*<sp/>pow(Vth,2)<sp/>+<sp/><ref refid="pixirad_8cpp_1a86b6e7b2ead9bfd9b0d3cf881db5a603" kindref="member">THRESH_B_COEFF</ref>*Vth));</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_Vth_from_settings(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>VTHMAX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fraction)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((VTHMAX*<ref refid="pixirad_8cpp_1a8709e3173b9a9a058bdf24d6a41a3770" kindref="member">EXTDAC_LSB</ref><sp/>-<sp/>0.6)*fraction);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_closest_Eth_DAC(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*allowedEth_ptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Eth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*DAC,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*EthSet)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temp_double,DeltaEth;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=1;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_double<sp/>=<sp/>fabs(allowedEth_ptr[0]-Eth);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeltaEth<sp/>=<sp/>fabs((allowedEth_ptr[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]-Eth));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DeltaEth<sp/>&lt;=<sp/>temp_double)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_double<sp/>=<sp/>DeltaEth;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*DAC<sp/>=<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;<sp/></highlight><highlight class="comment">//<sp/>i<sp/>is<sp/>the<sp/>allowed<sp/>energy<sp/>table<sp/>index<sp/>and<sp/>(i.e.<sp/>DAC<sp/>counts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*EthSet<sp/>=<sp/>allowedEth_ptr[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="pixirad_8cpp_1a1e8895f613338a983d2d2dba0c87ac67" kindref="member">INT_DAC_STEPS</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pixirad::calculateThresholds(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*requestedEnergy_ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*VThMax_ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*thresholdRegisters_ptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*actualEnergy_ptr)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DeltaVth;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EthAllowedTable[<ref refid="pixirad_8cpp_1a1e8895f613338a983d2d2dba0c87ac67" kindref="member">INT_DAC_STEPS</ref>];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temp_double;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>VThMax;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Vth,Vth1;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sensor_.<ref refid="struct_s_e_n_s_o_r_1a9b4a71895885b0417258270992040513" kindref="member">Asic</ref><sp/>==<sp/><ref refid="pxrd2__interface__misc_8h_1a33a1b2f6e5dff428a7e09bea6f03ee97a9af1e8179e3b761c1609f6298cd9cbc8" kindref="member">PIII</ref>)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="pixirad_8cpp_1a10290155a529ee095e61fe1c9e181293" kindref="member">NUM_THRESHOLDS</ref>;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thresholdRegisters_ptr[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>(int)(<ref refid="pixirad_8cpp_1a0a7ed5bc721f5a426655d576c462c79c" kindref="member">PIII_P1</ref><sp/>*<sp/>requestedEnergy_ptr[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>+<sp/><ref refid="pixirad_8cpp_1a8bf7c42d8b1615952e0f68ef56a174e8" kindref="member">PIII_P0</ref><sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actualEnergy_ptr[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>(thresholdRegisters_ptr[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>-<sp/><ref refid="pixirad_8cpp_1a8bf7c42d8b1615952e0f68ef56a174e8" kindref="member">PIII_P0</ref>)<sp/>/<sp/><ref refid="pixirad_8cpp_1a0a7ed5bc721f5a426655d576c462c79c" kindref="member">PIII_P1</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pixie-II<sp/>chip<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************getting<sp/>Vth1*****************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>Vth1=get_vth_from_fit(requestedEnergy_ptr[0]);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/***************search<sp/>for<sp/>(VTHMAX,<sp/>%),<sp/>Vth1<sp/>Best<sp/>Match*******************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>VThMax=<ref refid="pixirad_8cpp_1a4a9ddd5eadbe295620ae4acad18975c2" kindref="member">VTHMAX_UPPER_LIMIT</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vth=get_Vth_from_settings(VThMax,<sp/>thresholdFractions[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeltaVth=fabs(Vth1-Vth);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(DeltaVth&gt;<ref refid="pixirad_8cpp_1a30f5dae3e0728eb2bfa9f7bd6eee922f" kindref="member">VTH1_ACCURACY</ref><sp/>&amp;&amp;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="pixirad_8cpp_1a1e8895f613338a983d2d2dba0c87ac67" kindref="member">INT_DAC_STEPS</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VThMax-=<ref refid="pixirad_8cpp_1a9af32e68c814e82d76592dc9dcbdf91e" kindref="member">VTHMAX_DECR_STEP</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(DeltaVth&gt;<ref refid="pixirad_8cpp_1a30f5dae3e0728eb2bfa9f7bd6eee922f" kindref="member">VTH1_ACCURACY</ref><sp/>&amp;&amp;<sp/>VThMax&gt;=<ref refid="pixirad_8cpp_1ae7e7cd87190c6b2be8750f430a82132f" kindref="member">VTHMAX_LOWER_LIMIT</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**********************************Set<sp/>VTHMAX,<sp/>DACs<sp/>and<sp/>Energy<sp/>Threshold<sp/>for<sp/>first<sp/>color*************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>thresholdRegisters_ptr[0]=<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>-1;<sp/></highlight><highlight class="comment">//<sp/>DAC<sp/>count<sp/>is<sp/>the<sp/>fractions<sp/>table<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>actualEnergy_ptr[0]=get_energy_from_fit(Vth);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>*VThMax_ptr=VThMax;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**********************Filling<sp/>Allowed<sp/>Energy<sp/>set<sp/>table********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="pixirad_8cpp_1a1e8895f613338a983d2d2dba0c87ac67" kindref="member">INT_DAC_STEPS</ref>;<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_double<sp/>=<sp/>get_Vth_from_settings(VThMax,<sp/>thresholdFractions[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EthAllowedTable[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>(get_energy_from_fit(temp_double));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/***********************************Set<sp/>Internal<sp/>DACs<sp/>and<sp/>Energy<sp/>Thresholds<sp/>for<sp/>remainings<sp/>colors***************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=1;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="pixirad_8cpp_1a10290155a529ee095e61fe1c9e181293" kindref="member">NUM_THRESHOLDS</ref>;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++){</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_closest_Eth_DAC(EthAllowedTable,<sp/>requestedEnergy_ptr[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>],<sp/>thresholdRegisters_ptr+<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,<sp/>actualEnergy_ptr+<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><ref refid="classpixirad_1a408d5c00895964ff3735e77b8836a781" kindref="member">pixirad::pixirad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*commandPortName,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataPortNumber,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>statusPortNumber,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxDataPortBuffers,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeY,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_a_d_driver" kindref="compound">ADDriver</ref>(portName,<sp/>1,<sp/><ref refid="pixirad_8cpp_1a4cda9b5c14fc8a781dcb62ff03adfcce" kindref="member">NUM_PIXIRAD_PARAMS</ref>,<sp/>maxBuffers,<sp/>maxMemory,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>interfaces<sp/>beyond<sp/>those<sp/>set<sp/>in<sp/>ADDriver.cpp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASYN_CANBLOCK,<sp/>1,<sp/></highlight><highlight class="comment">/*<sp/>ASYN_CANBLOCK=1,<sp/>ASYN_MULTIDEVICE=0,<sp/>autoConnect=1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority,<sp/>stackSize)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>serialNumber[256];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tempString[256];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tempPtr;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pixirad&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>dataPortNumber_<sp/>=<sp/>dataPortNumber;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>statusPortNumber_<sp/>=<sp/>statusPortNumber;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>maxDataPortBuffers_<sp/>=<sp/>maxDataPortBuffers;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMessageQueueId_<sp/>=<sp/>epicsMessageQueueCreate(maxDataPortBuffers_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataMessageQueueId_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>epicsMessageQueueCreate<sp/>failed\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(osiSockAttach()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>osiSockAttach<sp/>failed\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Connect<sp/>to<sp/>Pixirad<sp/>server<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pasynOctetSyncIO-&gt;connect(commandPortName,<sp/>0,<sp/>&amp;pasynUserCommand_,<sp/>NULL);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pasynCommonSyncIO-&gt;connect(commandPortName,<sp/>0,<sp/>&amp;pasynUserCommandCommon_,<sp/>NULL);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1ac107aa865766dbae4b336a7ed99946c5" kindref="member">PixiradSystemResetString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1ab3e5d9d2e77791b2a5797e969e22a6db" kindref="member">PixiradSystemReset</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a17606d25beb19bfd6ea8150d25855ae7" kindref="member">PixiradSystemInfoString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1a9feb80bb0636edd8dd572ece0b2e3159" kindref="member">PixiradSystemInfo</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1ad437196b81277180d8a2202d40b90f77" kindref="member">PixiradColorsCollectedString</ref>,<sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1a4a1e96eb22ec3ab1d9ed1980a1244492" kindref="member">PixiradColorsCollected</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a174c3b0403a6eb6cc7ee87336a4bfd12" kindref="member">PixiradUDPBuffersReadString</ref>,<sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1a152f45e62fdc32f3e27c6dc86708469f" kindref="member">PixiradUDPBuffersRead</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a0d67ee400b292959b8f0ebea57a44837" kindref="member">PixiradUDPBuffersMaxString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1a099043ad2fe1bad9401ee82193e36d08" kindref="member">PixiradUDPBuffersMax</ref>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a7fc323b17835a6ef746d7f28348ee9c9" kindref="member">PixiradUDPBuffersFreeString</ref>,<sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1aa3bb11e5ac3cadd4140c37bd3f7dffde" kindref="member">PixiradUDPBuffersFree</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a398d80c0d729b6a20e0e87fd59ea8e05" kindref="member">PixiradUDPSpeedString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1a64fdb5505bd64d7f93dab3f237165975" kindref="member">PixiradUDPSpeed</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1ae01fee5cf2725660069e41d03188a0bf" kindref="member">PixiradThresh1String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1aa05bf763eec6d2057286ece3827e093f" kindref="member">PixiradThresh1</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a9bebfc28dba271f2fde1978888bc552a" kindref="member">PixiradThresh2String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1a3e5cb98210c380256377379919317a2f" kindref="member">PixiradThresh2</ref>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1aa8138a16d7193c7015cfbfe38f24d64a" kindref="member">PixiradThresh3String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1a2112d9e9172bb4b921ee84f5ff8f943a" kindref="member">PixiradThresh3</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a4c21e1bb520f08188308f79b9ebf2382" kindref="member">PixiradThresh4String</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1ac817376c3ae535cc4592ed8daba721b0" kindref="member">PixiradThresh4</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a378042832503d8b467dc202935515244" kindref="member">PixiradHitThreshString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1a65b9c183509a72932f967014dba325db" kindref="member">PixiradHitThresh</ref>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1ada5f4d139c027e98b2f9ce2dcf87ab0e" kindref="member">PixiradThreshActual1String</ref>,<sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1ababaf9bf9be175f5bc25e4cf76692bc3" kindref="member">PixiradThreshActual1</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1adea981164cb60ded1fc2d79e73a1ec50" kindref="member">PixiradThreshActual2String</ref>,<sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1a3c7b1fbe39c24d48340e491cf1fb6799" kindref="member">PixiradThreshActual2</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a5cf77d3b5ef7ba0f0699a27063bad421" kindref="member">PixiradThreshActual3String</ref>,<sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1aa78352f33939307e65f1b540a5f07ef3" kindref="member">PixiradThreshActual3</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1aec4f5d089de6013dc2fb4b7640f680ca" kindref="member">PixiradThreshActual4String</ref>,<sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1afe47c7a86c659d945b27feaa67856928" kindref="member">PixiradThreshActual4</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a1117c60c7366732241b5f182ffb9eaea" kindref="member">PixiradHitThreshActualString</ref>,<sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1ab58528a5a63f354f9464b904d5a5b9f4" kindref="member">PixiradHitThreshActual</ref>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a994575a4b9961aff277c8349d441c34d" kindref="member">PixiradCountModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1a8707766a07014d19c455f6b60cdce713" kindref="member">PixiradCountMode</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1ae49844ffa14cbded9097471fae7be3c9" kindref="member">PixiradAutoCalibrateString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1aea344ac1e517b591651e61a40d5fbfaf" kindref="member">PixiradAutoCalibrate</ref>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a707d6d7e9f710ae79f70995c8aa4b626" kindref="member">PixiradHVValueString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1aadf2e5cdcf03276553f10c47fd94db9b" kindref="member">PixiradHVValue</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1af5c83f405b5976d0bfa7b38a8e4245a0" kindref="member">PixiradHVStateString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1a19a9e1a90535264a3673847e179fc40a" kindref="member">PixiradHVState</ref>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a1cba5b7ac16b9f4ed0c78592b328115e" kindref="member">PixiradHVModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1ac83159a916f4df969dfa4b6acf713436" kindref="member">PixiradHVMode</ref>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a871ba374e26ef4c4af0adc9fef94450a" kindref="member">PixiradHVActualString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1ab83bc58932ae6a2dbe76a0cb9345052b" kindref="member">PixiradHVActual</ref>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1adb997f70b10d0aaeacd9158eb9b8325e" kindref="member">PixiradHVCurrentString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1a74fe31006c1dcd25775d96bf915c4ade" kindref="member">PixiradHVCurrent</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1ae7d43170fcd984d96a0926db28e6ec8b" kindref="member">PixiradSyncInPolarityString</ref>,<sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1aad35956ca5438570840b232a1d0b09e7" kindref="member">PixiradSyncInPolarity</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a06f80af89a2040bc097d3e60d9745097" kindref="member">PixiradSyncOutPolarityString</ref>,<sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1ae65a06e70fd515dd78e680715db99e56" kindref="member">PixiradSyncOutPolarity</ref>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a1c5a6e8014ff98b471f300b86afb9fb9" kindref="member">PixiradSyncOutFunctionString</ref>,<sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1a9ade4a778630df8e80e55e943ef7b668" kindref="member">PixiradSyncOutFunction</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a51d5d812e6e794e7c00ac8982ddd186e" kindref="member">PixiradCoolingStateString</ref>,<sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1af3ba7a503d7a5428aca5be8790962d19" kindref="member">PixiradCoolingState</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1ac15e26e23407fac3e88676ae11a5c08c" kindref="member">PixiradHotTemperatureString</ref>,<sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1a1367e660199e0e1995749193f4c76ca9" kindref="member">PixiradHotTemperature</ref>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1aec26cb89821833819171370b3a325d65" kindref="member">PixiradBoxTemperatureString</ref>,<sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1a77056fc46393595f4e8beb3fa63e0d6e" kindref="member">PixiradBoxTemperature</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a3cef9aface6180446bc76fa2637a251f" kindref="member">PixiradBoxHumidityString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1a68eedddc104bea618a560261281d5228" kindref="member">PixiradBoxHumidity</ref>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a2c8dfaf8d41f5dc82835482ae8630742" kindref="member">PixiradDewPointString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1ac90c22d03963c5f7130ae73e6611f16f" kindref="member">PixiradDewPoint</ref>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1ae8d8cb259f5f619f62d0628a700aec86" kindref="member">PixiradCoolingStatusString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpixirad_1ab6a84248195b434a7387d060d43e4283" kindref="member">PixiradCoolingStatus</ref>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="pixirad_8cpp_1a17879c47d550553d19763e683805f669" kindref="member">PixiradPeltierPowerString</ref>,<sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpixirad_1a38eaa33a2b5641b50ed93f51d4da257a" kindref="member">PixiradPeltierPower</ref>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>some<sp/>default<sp/>values<sp/>for<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><sp/>setStringParam<sp/>(<ref refid="classasyn_n_d_array_driver_1a2deb25acd798e9e0da6c52741a07b915" kindref="member">ADManufacturer</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Pixirad&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a535f4c7d03e30b1efe4f7dad854cfc3f" kindref="member">ADMaxSizeX</ref>,<sp/>maxSizeX);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a93caa26e32c3765ba19e1ac74a2f50cc" kindref="member">ADMaxSizeY</ref>,<sp/>maxSizeY);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/>maxSizeX);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/>maxSizeX);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>,<sp/>maxSizeY);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1a79c89c00ea62734d82c89e09ea8aa47b" kindref="member">NDArraySizeX</ref>,<sp/>maxSizeX);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1a75753778fe16182d0771e924f05bde33" kindref="member">NDArraySizeY</ref>,<sp/>maxSizeY);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1abf6f05821c7d1a9ab6aef60c9374281e" kindref="member">NDArraySize</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1af71358738ff1dbe4c9185f105807f799" kindref="member">NDDataType</ref>,<sp/><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a174cfb9ba69c78761d4d9d25ec1bd8df" kindref="member">NDUInt16</ref>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a7dcba273d750e726bb3f5e4b7a38f53a" kindref="member">ADImageMode</ref>,<sp/><ref refid="_a_d_driver_8h_1a4e304cb4683f0862cc3ca9b5fff213e2a09274bf54e26793fae63922fee5c603b" kindref="member">ADImageContinuous</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1ae191abe1436e6dd02510fcbbac59dbc1" kindref="member">ADTriggerMode</ref>,<sp/><ref refid="pixirad_8cpp_1a0f95a556fa1140241d3c9394298d7eabacda9ee85028a22f342355d14bd5d4956" kindref="member">TMInternal</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>setDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref>,<sp/>1.0);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>setDoubleParam(<ref refid="class_a_d_driver_1a8d5333aa86509cbd8f5fd824e79b2799" kindref="member">ADAcquirePeriod</ref>,<sp/>1.0);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>setDoubleParam(<ref refid="class_a_d_driver_1aef042b68b6b77d7b39dfaeceaa097a38" kindref="member">ADTemperature</ref>,<sp/><ref refid="pixirad_8cpp_1aaa9d625c7c8a45d1f8d1eea46c50e2db" kindref="member">INITIAL_COOLING_VALUE</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1af3ba7a503d7a5428aca5be8790962d19" kindref="member">PixiradCoolingState</ref>,<sp/><ref refid="pixirad_8cpp_1a2427940529fb74e896672d36f3bebec8" kindref="member">INITIAL_COOLING_STATE</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>setDoubleParam(<ref refid="classpixirad_1aadf2e5cdcf03276553f10c47fd94db9b" kindref="member">PixiradHVValue</ref>,<sp/><ref refid="pixirad_8cpp_1a7dd4314fdb578e78714d21d4a54ce471" kindref="member">INITIAL_HV_VALUE</ref>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a19a9e1a90535264a3673847e179fc40a" kindref="member">PixiradHVState</ref>,<sp/><ref refid="pixirad_8cpp_1ad0d31cd3d5ed3aa3a41d597a236bae5b" kindref="member">INITIAL_HV_STATE</ref>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1ac83159a916f4df969dfa4b6acf713436" kindref="member">PixiradHVMode</ref>,<sp/><ref refid="pixirad_8cpp_1a1e5a100b136c3e2ec038084ab07885bd" kindref="member">INITIAL_HV_MODE</ref>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a4a1e96eb22ec3ab1d9ed1980a1244492" kindref="member">PixiradColorsCollected</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a152f45e62fdc32f3e27c6dc86708469f" kindref="member">PixiradUDPBuffersRead</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a099043ad2fe1bad9401ee82193e36d08" kindref="member">PixiradUDPBuffersMax</ref>,<sp/>maxDataPortBuffers_);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1aa3bb11e5ac3cadd4140c37bd3f7dffde" kindref="member">PixiradUDPBuffersFree</ref>,<sp/>maxDataPortBuffers_);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>setDoubleParam(<ref refid="classpixirad_1aa05bf763eec6d2057286ece3827e093f" kindref="member">PixiradThresh1</ref>,<sp/>10.0);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>setDoubleParam(<ref refid="classpixirad_1a3e5cb98210c380256377379919317a2f" kindref="member">PixiradThresh2</ref>,<sp/>15.0);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>setDoubleParam(<ref refid="classpixirad_1a2112d9e9172bb4b921ee84f5ff8f943a" kindref="member">PixiradThresh3</ref>,<sp/>20.0);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>setDoubleParam(<ref refid="classpixirad_1ac817376c3ae535cc4592ed8daba721b0" kindref="member">PixiradThresh4</ref>,<sp/>25.0);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1ae246f999cf99d4e97594beb939f15f21" kindref="member">ADFrameType</ref>,<sp/><ref refid="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91af76d592cfe4129b07820c683b8434ccf" kindref="member">FTOneColorLow</ref>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1aad35956ca5438570840b232a1d0b09e7" kindref="member">PixiradSyncInPolarity</ref>,<sp/><ref refid="pixirad_8cpp_1ad1219ca802537cc551de22ac659dff0ba48134889f33bd1296de0cabc36b7b222" kindref="member">SyncPos</ref>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1ae65a06e70fd515dd78e680715db99e56" kindref="member">PixiradSyncOutPolarity</ref>,<sp/><ref refid="pixirad_8cpp_1ad1219ca802537cc551de22ac659dff0ba48134889f33bd1296de0cabc36b7b222" kindref="member">SyncPos</ref>);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a9ade4a778630df8e80e55e943ef7b668" kindref="member">PixiradSyncOutFunction</ref>,<sp/><ref refid="pixirad_8cpp_1a94dda801a8ff836beaa7b8e758f3ee76a42c085475f471e7df2983b12e06f017d" kindref="member">SyncOutShutter</ref>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1ab3e5d9d2e77791b2a5797e969e22a6db" kindref="member">PixiradSystemReset</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1ab6a84248195b434a7387d060d43e4283" kindref="member">PixiradCoolingStatus</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>unable<sp/>to<sp/>set<sp/>camera<sp/>parameters\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>a<sp/>bug<sp/>in<sp/>the<sp/>current<sp/>firmware.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Two<sp/>different<sp/>HV<sp/>values<sp/>must<sp/>be<sp/>sent<sp/>or<sp/>it<sp/>won&apos;t<sp/>accept<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpixirad_1aadf2e5cdcf03276553f10c47fd94db9b" kindref="member">PixiradHVValue</ref>,<sp/><ref refid="pixirad_8cpp_1a7dd4314fdb578e78714d21d4a54ce471" kindref="member">INITIAL_HV_VALUE</ref>-1.0);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>setCoolingAndHV();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpixirad_1aadf2e5cdcf03276553f10c47fd94db9b" kindref="member">PixiradHVValue</ref>,<sp/><ref refid="pixirad_8cpp_1a7dd4314fdb578e78714d21d4a54ce471" kindref="member">INITIAL_HV_VALUE</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>setCoolingAndHV();</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(tempString,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tempString),<sp/></highlight><highlight class="stringliteral">&quot;%d.%d.%d&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1ae578001fe043b4cca7a0edd801cfe9c4" kindref="member">DRIVER_VERSION</ref>,<sp/><ref refid="pixirad_8cpp_1a09d8a9e616d09d45e8f4c3ad80849872" kindref="member">DRIVER_REVISION</ref>,<sp/><ref refid="pixirad_8cpp_1a00a7ebec19bc60e5ee0344109af2fd82" kindref="member">DRIVER_MODIFICATION</ref>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1a2be0f672f139c59f942bedfd7d94ff0f" kindref="member">NDDriverVersion</ref>,<sp/>tempString);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(toServer_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toServer_),<sp/></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYS:?<sp/>GET_FIRMWARE_VERSION&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeReadServer();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(fromServer_,<sp/></highlight><highlight class="stringliteral">&quot;DETECTOR<sp/>%s<sp/>FRMW_VER:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>serialNumber,<sp/>tempString);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1aa4d910fd087c8eb02f3437b18b80bba1" kindref="member">ADSerialNumber</ref>,<sp/>serialNumber);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1a4eadbf94d756dcf7b61d624f791fd516" kindref="member">ADFirmwareVersion</ref>,<sp/>tempString);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(toServer_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toServer_),<sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYS:?<sp/>GET_ADDITIONAL_INFO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeReadServer();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>tempPtr<sp/>=<sp/>strstr(fromServer_,<sp/></highlight><highlight class="stringliteral">&quot;ADDITIONAL<sp/>INFO:&quot;</highlight><highlight class="normal">)<sp/>+<sp/>strlen(</highlight><highlight class="stringliteral">&quot;ADDITIONAL<sp/>INFO:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classpixirad_1a9feb80bb0636edd8dd572ece0b2e3159" kindref="member">PixiradSystemInfo</ref>,<sp/>tempPtr);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>NumUDPPackets<sp/>and<sp/>NumAutocalUDPPackets<sp/>based<sp/>on<sp/>detector<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(maxSizeX)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>476:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a9b4a71895885b0417258270992040513" kindref="member">Asic</ref><sp/>=<sp/><ref refid="pxrd2__interface__misc_8h_1a33a1b2f6e5dff428a7e09bea6f03ee97a9c6096c18bc9acb1ca74362241790404" kindref="member">PII</ref>;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(maxSizeY)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>512:</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a6d2f5d30e3f92417ca015e7301ef071b" kindref="member">Build</ref><sp/>=<sp/><ref refid="pxrd2__interface__misc_8h_1a06a0f9c5d813618d58cd735d73b543afa01a5a9a0e97c230becb5424f44e2904e" kindref="member">PX1</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a837539b9220b4a696e19e5c3ea8197be" kindref="member">modules</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numUDPPackets_<sp/>=<sp/>360;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numAutocalUDPPackets_<sp/>=<sp/>135;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1024:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a6d2f5d30e3f92417ca015e7301ef071b" kindref="member">Build</ref><sp/>=<sp/><ref refid="pxrd2__interface__misc_8h_1a06a0f9c5d813618d58cd735d73b543afa9cfce557097f54eb9a913de8f1bd2723" kindref="member">PX2</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a837539b9220b4a696e19e5c3ea8197be" kindref="member">modules</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numUDPPackets_<sp/>=<sp/>720;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numAutocalUDPPackets_<sp/>=<sp/>270;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4096:</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a6d2f5d30e3f92417ca015e7301ef071b" kindref="member">Build</ref><sp/>=<sp/><ref refid="pxrd2__interface__misc_8h_1a06a0f9c5d813618d58cd735d73b543afa90ce5a02cf88b325fa5b09c8fa1fc8df" kindref="member">PX8</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a837539b9220b4a696e19e5c3ea8197be" kindref="member">modules</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numUDPPackets_<sp/>=<sp/>2539;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numAutocalUDPPackets_<sp/>=<sp/>1080;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s::%s<sp/>Illegal<sp/>maxSizeY=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>maxSizeY);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>402:</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a9b4a71895885b0417258270992040513" kindref="member">Asic</ref><sp/>=<sp/><ref refid="pxrd2__interface__misc_8h_1a33a1b2f6e5dff428a7e09bea6f03ee97a9af1e8179e3b761c1609f6298cd9cbc8" kindref="member">PIII</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(maxSizeY)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>512:</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a6d2f5d30e3f92417ca015e7301ef071b" kindref="member">Build</ref><sp/>=<sp/><ref refid="pxrd2__interface__misc_8h_1a06a0f9c5d813618d58cd735d73b543afa01a5a9a0e97c230becb5424f44e2904e" kindref="member">PX1</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a837539b9220b4a696e19e5c3ea8197be" kindref="member">modules</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numUDPPackets_<sp/>=<sp/>270;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numAutocalUDPPackets_<sp/>=<sp/>180;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1024:</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a6d2f5d30e3f92417ca015e7301ef071b" kindref="member">Build</ref><sp/>=<sp/><ref refid="pxrd2__interface__misc_8h_1a06a0f9c5d813618d58cd735d73b543afa9cfce557097f54eb9a913de8f1bd2723" kindref="member">PX2</ref>;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a837539b9220b4a696e19e5c3ea8197be" kindref="member">modules</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numUDPPackets_<sp/>=<sp/>540;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numAutocalUDPPackets_<sp/>=<sp/>360;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4096:</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a6d2f5d30e3f92417ca015e7301ef071b" kindref="member">Build</ref><sp/>=<sp/><ref refid="pxrd2__interface__misc_8h_1a06a0f9c5d813618d58cd735d73b543afa90ce5a02cf88b325fa5b09c8fa1fc8df" kindref="member">PX8</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a837539b9220b4a696e19e5c3ea8197be" kindref="member">modules</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numUDPPackets_<sp/>=<sp/>2539;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numAutocalUDPPackets_<sp/>=<sp/>1080;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s::%s<sp/>Illegal<sp/>maxSizeY=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>maxSizeY);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s::%s<sp/>Illegal<sp/>maxSizeX=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>maxSizeX);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sensor_.<ref refid="struct_s_e_n_s_o_r_1a9b4a71895885b0417258270992040513" kindref="member">Asic</ref><sp/>==<sp/><ref refid="pxrd2__interface__misc_8h_1a33a1b2f6e5dff428a7e09bea6f03ee97a9c6096c18bc9acb1ca74362241790404" kindref="member">PII</ref>)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a35e3936614d2f518184efed917bf0287" kindref="member">matrix_size_pxls</ref><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a15f5b9d93b4a51b7188774401c0dc01d" kindref="member">PII_MATRIX_DIM_WORDS</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1ad3e46072e6563c0c94bf088e2291030b" kindref="member">cols</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a22663f3c3d8b832d1ae6ed31789b3d68" kindref="member">PII_PIXIE_COLS</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a5ff0541260cf4d1024d1a7bb0f7a5352" kindref="member">rows</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a4a1e1202517e48a111b87a1bf497a446" kindref="member">PII_PIXIE_ROWS</ref>;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a2468312d632c2b2e88d96489e7225f05" kindref="member">dout</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a895227d7175d5e1b352716c22bafb37f" kindref="member">PII_PIXIE_DOUTS</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a6ce786a655a9dad654be9322b7a4f42e" kindref="member">cols_per_dout</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1aa26aa4f5f17c62067c53074720f1aea0" kindref="member">PII_COLS_PER_DOUT</ref>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1ad637ab954d44af53852a184ed0878f4a" kindref="member">bit_per_cnt_std</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a11bcc0de531457a51674cd71d731016d" kindref="member">PII_STD_COUNTER_CODE_DEPTH</ref>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a7ed0e32b1f35558947766cdd4cc350a0" kindref="member">bit_per_cnt_short</ref><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a11bcc0de531457a51674cd71d731016d" kindref="member">PII_STD_COUNTER_CODE_DEPTH</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a35847dd3dd3093a904bc16fc53e9fc4e" kindref="member">autocal_bit_cnt</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a9b6ca62fd88b722b26d480e4d7b582a7" kindref="member">PII_AUTOCAL_CODE_DEPTH</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a17e9eaeb16eeab9872ca0c87a03e9da5" kindref="member">autocal_regs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1ac01e4a181e936d587f31be5ee6c7cafe" kindref="member">PII_AUTOCAL_REGS</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1ac54ac31a762c77dc3281bad4bfd15684" kindref="member">cnt_regs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a5b970f2f0b3f18e839d2acbd60628699" kindref="member">PII_COUNTER_REGS</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1ac4d41f106def51e3303a694fe293898c" kindref="member">separation_columns</ref><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a36549e902a99b1d9ce021bf37e746f95" kindref="member">PII_SEPARATION_COLUMNS_INPXX</ref>;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a618dac13323c515f81009e0647f75f80" kindref="member">pixel_arr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="pxrd2__interface__misc_8h_1a2f1c19a9f18847bba942c95d91a2d46ba14ab5337156fb248fb4a8169210daf75" kindref="member">EXAGON</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a35e3936614d2f518184efed917bf0287" kindref="member">matrix_size_pxls</ref><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a5f09d83adb450a4c76f8a3ce247bf363" kindref="member">PIII_MATRIX_DIM_WORDS</ref>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1ad3e46072e6563c0c94bf088e2291030b" kindref="member">cols</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1ac4653d2f7b06cfbb6c0aad2be6957d50" kindref="member">PIII_PIXIE_COLS</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a5ff0541260cf4d1024d1a7bb0f7a5352" kindref="member">rows</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a4845e610d87d1835ba38c424440738c2" kindref="member">PIII_PIXIE_ROWS</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a2468312d632c2b2e88d96489e7225f05" kindref="member">dout</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1aaf4bc172f9c95a15b7e8748e133c422d" kindref="member">PIII_PIXIE_DOUTS</ref>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a6ce786a655a9dad654be9322b7a4f42e" kindref="member">cols_per_dout</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a2bca191113459b3c58b16c82bbd6fbd7" kindref="member">PIII_COLS_PER_DOUT</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1ad637ab954d44af53852a184ed0878f4a" kindref="member">bit_per_cnt_std</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1abea3f5bde4dce06c1e794ae4358781ac" kindref="member">PIII_STD_COUNTER_CODE_DEPTH</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a7ed0e32b1f35558947766cdd4cc350a0" kindref="member">bit_per_cnt_short</ref><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1af541df849f226cf5112368708bffc8c5" kindref="member">PIII_SHORT_COUNTER_CODE_DEPTH</ref>;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a35847dd3dd3093a904bc16fc53e9fc4e" kindref="member">autocal_bit_cnt</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1a2719582c4fcba0a9c832235cd4c0bce0" kindref="member">PIII_AUTOCAL_CODE_DEPTH</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a17e9eaeb16eeab9872ca0c87a03e9da5" kindref="member">autocal_regs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1ae6547637c9af2748c015fcf898c7812f" kindref="member">PIII_AUTOCAL_REGS</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1ac54ac31a762c77dc3281bad4bfd15684" kindref="member">cnt_regs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1ac0f3f18860234519bbef41824c4238aa" kindref="member">PIII_COUNTER_REGS</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1ac4d41f106def51e3303a694fe293898c" kindref="member">separation_columns</ref><sp/>=<sp/><ref refid="_p_i_x_i_e_i_i__data__utilities__v2_8h_1afb9981b6b30f2aa715edcb0f4ff88254" kindref="member">PIII_SEPARATION_COLUMNS_INPXX</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a618dac13323c515f81009e0647f75f80" kindref="member">pixel_arr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="pxrd2__interface__misc_8h_1a2f1c19a9f18847bba942c95d91a2d46ba4233fbf0cafb86abcee94b38d769fc59" kindref="member">SQUARE</ref>;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_i_x_i_e__data__utilities_8cpp_1ad32e1e00a3f102490d94926268048a18" kindref="member">conversion_table_allocation</ref>(&amp;sensor_);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1a4c15720b7002ec1ff9278058240d82da" kindref="member">ADModel</ref>,<sp/>PixiradModelNames[sensor_.<ref refid="struct_s_e_n_s_o_r_1a6d2f5d30e3f92417ca015e7301ef071b" kindref="member">Build</ref>]);<sp/></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>thread<sp/>that<sp/>receives<sp/>status<sp/>broadcasts<sp/>for<sp/>temperature,<sp/>etc.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsThreadCreate(</highlight><highlight class="stringliteral">&quot;PixiradStatusTask&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadPriorityMedium,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadGetStackSize(epicsThreadStackMedium),</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(EPICSTHREADFUNC)statusTaskC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>thread<sp/>that<sp/>gets<sp/>messages<sp/>from<sp/>the<sp/>UDP<sp/>data<sp/>task<sp/>and<sp/>does<sp/>NDArray<sp/>callbacks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsThreadCreate(</highlight><highlight class="stringliteral">&quot;PixiradDataTask&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadPriorityMedium,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadGetStackSize(epicsThreadStackMedium),</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(EPICSTHREADFUNC)dataTaskC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>thread<sp/>that<sp/>reads<sp/>UDP<sp/>data<sp/>from<sp/>the<sp/>detector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsThreadCreate(</highlight><highlight class="stringliteral">&quot;PixiradUDPDataTask&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadPriorityMedium,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadGetStackSize(epicsThreadStackMedium),</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(EPICSTHREADFUNC)udpDataListenerTaskC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal">asynStatus<sp/>pixirad::systemReset()</highlight></codeline>
<codeline lineno="685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>HVValue;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HVState;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>callbacks<sp/>so<sp/>user<sp/>sees<sp/>&quot;Reset&quot;<sp/>state<sp/>of<sp/>the<sp/>PV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(toServer_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toServer_),<sp/></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DAQ:!<sp/>SYSTEM_RESET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeReadServer();</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>disconnect<sp/>from<sp/>IP<sp/>port<sp/>while<sp/>detector<sp/>is<sp/>resetting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pasynCommonSyncIO-&gt;disconnectDevice(pasynUserCommandCommon_);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>detector<sp/>to<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsThreadSleep(<ref refid="pixirad_8cpp_1a07587c0dcf4f2a9767ca654950f23c52" kindref="member">DETECTOR_RESET_TIME</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>reconnect<sp/>to<sp/>detector.<sp/><sp/>This<sp/>is<sp/>quicker<sp/>than<sp/>waiting<sp/>for<sp/>auto-reconnect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pasynCommonSyncIO-&gt;connectDevice(pasynUserCommandCommon_);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setSync();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setThresholds(1);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>a<sp/>bug<sp/>in<sp/>the<sp/>current<sp/>firmware.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Two<sp/>different<sp/>HV<sp/>values<sp/>must<sp/>be<sp/>sent<sp/>or<sp/>it<sp/>won&apos;t<sp/>accept<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpixirad_1aadf2e5cdcf03276553f10c47fd94db9b" kindref="member">PixiradHVValue</ref>,<sp/>&amp;HVValue);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpixirad_1aadf2e5cdcf03276553f10c47fd94db9b" kindref="member">PixiradHVValue</ref>,<sp/>HVValue-1.0);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1a19a9e1a90535264a3673847e179fc40a" kindref="member">PixiradHVState</ref>,<sp/>&amp;HVState);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a19a9e1a90535264a3673847e179fc40a" kindref="member">PixiradHVState</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setCoolingAndHV();</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpixirad_1aadf2e5cdcf03276553f10c47fd94db9b" kindref="member">PixiradHVValue</ref>,<sp/>HVValue);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a19a9e1a90535264a3673847e179fc40a" kindref="member">PixiradHVState</ref>,<sp/>HVState);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setCoolingAndHV();</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1ab3e5d9d2e77791b2a5797e969e22a6db" kindref="member">PixiradSystemReset</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="722"><highlight class="normal">asynStatus<sp/>pixirad::setCoolingAndHV()</highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coolingValue;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coolingState;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>HVValue;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HVState;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1aef042b68b6b77d7b39dfaeceaa097a38" kindref="member">ADTemperature</ref>,<sp/>&amp;coolingValue);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1af3ba7a503d7a5428aca5be8790962d19" kindref="member">PixiradCoolingState</ref>,<sp/>&amp;coolingState);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpixirad_1aadf2e5cdcf03276553f10c47fd94db9b" kindref="member">PixiradHVValue</ref>,<sp/>&amp;HVValue);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1a19a9e1a90535264a3673847e179fc40a" kindref="member">PixiradHVState</ref>,<sp/>&amp;HVState);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(toServer_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toServer_),<sp/></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DAQ:!<sp/>INIT<sp/>%.1f<sp/>%d<sp/>%.1f<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coolingValue,<sp/>coolingState,<sp/>HVValue,<sp/>HVState);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeReadServer();</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="742"><highlight class="normal">asynStatus<sp/>pixirad::setSync()</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>syncInPolarity;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>syncOutPolarity;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>syncOutFunction;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1aad35956ca5438570840b232a1d0b09e7" kindref="member">PixiradSyncInPolarity</ref>,<sp/>&amp;syncInPolarity);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1ae65a06e70fd515dd78e680715db99e56" kindref="member">PixiradSyncOutPolarity</ref>,<sp/>&amp;syncOutPolarity);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1a9ade4a778630df8e80e55e943ef7b668" kindref="member">PixiradSyncOutFunction</ref>,<sp/>&amp;syncOutFunction);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(toServer_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toServer_),<sp/></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DAQ:!<sp/>SET_SYNC<sp/>%s<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PixiradSyncPolarityStrings[syncInPolarity],</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PixiradSyncPolarityStrings[syncOutPolarity],</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PixiradSyncOutFunctionStrings[syncOutFunction]);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeReadServer();</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="762"><highlight class="normal">asynStatus<sp/><ref refid="classpixirad_1aaf4a33088fe941ebef2e53a4aa8608b8" kindref="member">pixirad::setAutoCalParams</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fs0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fs1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fs2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibias,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vbgMcalDAC)</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>vbgMcalDAC_<sp/>=<sp/>vbgMcalDAC;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(toServer_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toServer_),<sp/></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DAQ:!<sp/>SET_PIII_CONF<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs0,<sp/>fs0,<sp/>ofs2,<sp/>fs1,<sp/>fs2,<sp/>ibias);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeReadServer();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal">asynStatus<sp/>pixirad::setThresholds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thresholdEnergy[<ref refid="pixirad_8cpp_1a10290155a529ee095e61fe1c9e181293" kindref="member">NUM_THRESHOLDS</ref>];</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actualThresholdEnergy[<ref refid="pixirad_8cpp_1a10290155a529ee095e61fe1c9e181293" kindref="member">NUM_THRESHOLDS</ref>];</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdReg[<ref refid="pixirad_8cpp_1a10290155a529ee095e61fe1c9e181293" kindref="member">NUM_THRESHOLDS</ref>];</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vthMax,<sp/>auFS=7;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameType;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countMode;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*readoutModeString,<sp/>*countModeString;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1ae246f999cf99d4e97594beb939f15f21" kindref="member">ADFrameType</ref>,<sp/>&amp;frameType);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((frameType<sp/>==<sp/><ref refid="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91a6aedc3c887f2939ef602422a27c90b7b" kindref="member">FTOneColorDTF</ref>)<sp/>||</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(frameType<sp/>==<sp/><ref refid="pixirad_8cpp_1abcfa87515093d805f2a5e3a8b3f3ad91a06007fef035d635f1152e717173c1bfc" kindref="member">FTTwoColorsDTF</ref>))</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readoutModeString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DTF&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readoutModeString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NODTF&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1a8707766a07014d19c455f6b60cdce713" kindref="member">PixiradCountMode</ref>,<sp/>&amp;countMode);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sensor_.<ref refid="struct_s_e_n_s_o_r_1a9b4a71895885b0417258270992040513" kindref="member">Asic</ref><sp/>==<sp/><ref refid="pxrd2__interface__misc_8h_1a33a1b2f6e5dff428a7e09bea6f03ee97a9af1e8179e3b761c1609f6298cd9cbc8" kindref="member">PIII</ref>)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countModeString<sp/>=<sp/>PixiradCountModeStrings[countMode];</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countModeString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NONBI&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpixirad_1aa05bf763eec6d2057286ece3827e093f" kindref="member">PixiradThresh1</ref>,<sp/><sp/><sp/>&amp;thresholdEnergy[0]);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpixirad_1a3e5cb98210c380256377379919317a2f" kindref="member">PixiradThresh2</ref>,<sp/><sp/><sp/>&amp;thresholdEnergy[1]);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpixirad_1a2112d9e9172bb4b921ee84f5ff8f943a" kindref="member">PixiradThresh3</ref>,<sp/><sp/><sp/>&amp;thresholdEnergy[2]);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpixirad_1ac817376c3ae535cc4592ed8daba721b0" kindref="member">PixiradThresh4</ref>,<sp/><sp/><sp/>&amp;thresholdEnergy[3]);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpixirad_1a65b9c183509a72932f967014dba325db" kindref="member">PixiradHitThresh</ref>,<sp/>&amp;thresholdEnergy[4]);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>optimum<sp/>register<sp/>values<sp/>for<sp/>the<sp/>thresholds,<sp/>and<sp/>the<sp/>actual<sp/>energies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>calculateThresholds(thresholdEnergy,<sp/>&amp;vthMax,<sp/>thresholdReg,<sp/>actualThresholdEnergy);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpixirad_1ababaf9bf9be175f5bc25e4cf76692bc3" kindref="member">PixiradThreshActual1</ref>,<sp/><sp/><sp/>actualThresholdEnergy[0]);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpixirad_1a3c7b1fbe39c24d48340e491cf1fb6799" kindref="member">PixiradThreshActual2</ref>,<sp/><sp/><sp/>actualThresholdEnergy[1]);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpixirad_1aa78352f33939307e65f1b540a5f07ef3" kindref="member">PixiradThreshActual3</ref>,<sp/><sp/><sp/>actualThresholdEnergy[2]);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpixirad_1afe47c7a86c659d945b27feaa67856928" kindref="member">PixiradThreshActual4</ref>,<sp/><sp/><sp/>actualThresholdEnergy[3]);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpixirad_1ab58528a5a63f354f9464b904d5a5b9f4" kindref="member">PixiradHitThreshActual</ref>,<sp/>actualThresholdEnergy[4]);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sensor_.<ref refid="struct_s_e_n_s_o_r_1a9b4a71895885b0417258270992040513" kindref="member">Asic</ref><sp/>==<sp/><ref refid="pxrd2__interface__misc_8h_1a33a1b2f6e5dff428a7e09bea6f03ee97a9af1e8179e3b761c1609f6298cd9cbc8" kindref="member">PIII</ref>)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(toServer_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toServer_),<sp/></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DAQ:!<sp/>SET_SENSOR_OPERATINGS<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%s<sp/>%s<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thresholdReg[3],<sp/>thresholdReg[2],<sp/>thresholdReg[1],<sp/>thresholdReg[0],<sp/>thresholdReg[4],</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readoutModeString,<sp/>countModeString,<sp/>vbgMcalDAC_);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsSnprintf(toServer_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toServer_),<sp/></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DAQ:!<sp/>SET_SENSOR_OPERATINGS<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thresholdReg[3],<sp/>thresholdReg[2],<sp/>thresholdReg[1],<sp/>thresholdReg[0],</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vthMax,<sp/>ref,<sp/>auFS,<sp/>readoutModeString,<sp/>countModeString);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeReadServer();</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="830"><highlight class="normal">asynStatus<sp/>pixirad::doAutoCalibrate()</highlight></codeline>
<codeline lineno="831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a8cdc9e9fbabaadaa3c87108aad2e2895" kindref="member">ADNumImagesCounter</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a4a1e96eb22ec3ab1d9ed1980a1244492" kindref="member">PixiradColorsCollected</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a152f45e62fdc32f3e27c6dc86708469f" kindref="member">PixiradUDPBuffersRead</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>set<sp/>REF=0<sp/>before<sp/>doing<sp/>autocalibrate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>setThresholds(0);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(toServer_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toServer_),<sp/></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DAQ:!<sp/>AUTOCAL<sp/>NOCODES&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeReadServer();</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>REF=1<sp/>after<sp/>autocalibrate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>setThresholds(1);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="847"><highlight class="normal">asynStatus<sp/>pixirad::startAcquire()</highlight></codeline>
<codeline lineno="848"><highlight class="normal">{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numImages;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acquireTime;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acquirePeriod;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>shutterPause;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameType;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>triggerMode;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HVMode;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>,<sp/>&amp;numImages);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref>,<sp/>&amp;acquireTime);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1a8d5333aa86509cbd8f5fd824e79b2799" kindref="member">ADAcquirePeriod</ref>,<sp/>&amp;acquirePeriod);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>shutterPause<sp/>=<sp/>acquirePeriod<sp/>-<sp/>acquireTime;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shutterPause<sp/>&lt;<sp/>0.)<sp/>shutterPause<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1ae246f999cf99d4e97594beb939f15f21" kindref="member">ADFrameType</ref>,<sp/>&amp;frameType);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1ae191abe1436e6dd02510fcbbac59dbc1" kindref="member">ADTriggerMode</ref>,<sp/>&amp;triggerMode);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1ac83159a916f4df969dfa4b6acf713436" kindref="member">PixiradHVMode</ref>,<sp/>&amp;HVMode);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a8cdc9e9fbabaadaa3c87108aad2e2895" kindref="member">ADNumImagesCounter</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a4a1e96eb22ec3ab1d9ed1980a1244492" kindref="member">PixiradColorsCollected</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a152f45e62fdc32f3e27c6dc86708469f" kindref="member">PixiradUDPBuffersRead</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(toServer_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toServer_),<sp/></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DAQ:!<sp/>LOOP<sp/>%d<sp/>%d<sp/>%d<sp/>%s<sp/>%s<sp/>UNMOD<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numImages,<sp/></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(acquireTime*1000),</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(shutterPause*1000),</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PixiradFrameTypeStrings[frameType],</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PixiradTriggerModeStrings[triggerMode],</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PixiradHVModeStrings[HVMode]);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeReadServer();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="882"><highlight class="normal">asynStatus<sp/>pixirad::stopAcquire()</highlight></codeline>
<codeline lineno="883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(toServer_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toServer_),<sp/></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DAQ:!!ACQUISITIONBREAK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>writeReadServer();</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal">asynStatus<sp/>pixirad::writeReadServer()</highlight></codeline>
<codeline lineno="894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nwrite,<sp/>nread;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status=asynSuccess;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>asynUser<sp/>*pasynUser<sp/>=<sp/>pasynUserCommand_;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eomReason;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/><ref refid="pixirad_8cpp_1ae0328f65d7c2dcde1d131cd74919f69b" kindref="member">SERVER_DEFAULT_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName=</highlight><highlight class="stringliteral">&quot;writeReadServer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pasynOctetSyncIO-&gt;writeRead(pasynUser,<sp/>toServer_,<sp/>strlen(toServer_),<sp/></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromServer_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fromServer_),<sp/></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout,<sp/>&amp;nwrite,<sp/>&amp;nread,<sp/>&amp;eomReason);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s,<sp/>timeout=%f,<sp/>status=%d<sp/>wrote<sp/>%lu<sp/>bytes,<sp/>received<sp/>%lu<sp/>bytes\n%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>timeout,<sp/>status,<sp/></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)nwrite,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)nread,<sp/>fromServer_);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>the<sp/>string<sp/>&quot;GOT:&quot;<sp/>in<sp/>the<sp/>response<sp/>if<sp/>the<sp/>command<sp/>was<sp/>not<sp/>a<sp/>SYS:?<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strstr(toServer_,<sp/></highlight><highlight class="stringliteral">&quot;SYS:?&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!strstr(fromServer_,<sp/></highlight><highlight class="stringliteral">&quot;GOT:&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s<sp/>unexpected<sp/>response<sp/>from<sp/>server<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>fromServer_);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>from<sp/>server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Server<sp/>returned<sp/>OK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>input<sp/>and<sp/>output<sp/>strings<sp/>so<sp/>they<sp/>can<sp/>be<sp/>displayed<sp/>by<sp/>EPICS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1a9f521abfc93c9ccba2b0e83acace6d0e" kindref="member">ADStringToServer</ref>,<sp/>toServer_);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1adb837da5ddf5ba868ea2dea316254c41" kindref="member">ADStringFromServer</ref>,<sp/>fromServer_);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(status);</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1af0c3c9c2ff5d4d5895ebcd6b45ff8588" kindref="member">pixirad::dataTask</ref>()</highlight></codeline>
<codeline lineno="931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameType;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>autoCalibrate;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colorsCollected;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeX,<sp/>sizeY;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dims[3];</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDims;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageCounter;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numImagesCounter;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numColors;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>udpBuffersFree,<sp/>udpBuffersMax;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arrayCallbacks;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeStamp<sp/>startTime;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*local_buffer_ptr,<sp/>*temp_us_ptr,<sp/>*process_buf_ptr;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>packet_tag;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FTNumColors[]<sp/>=<sp/>{1,<sp/>1,<sp/>2,<sp/>4,<sp/>1,<sp/>2};</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colorOffsetMap[]<sp/>=<sp/>{1,<sp/>0,<sp/>3,<sp/>2};</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_c_q___p_r_o_p" kindref="compound">ACQ_PROP</ref><sp/>acqProp;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;dataTask&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>local_buffer_ptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)<sp/>calloc(sensor_.<ref refid="struct_s_e_n_s_o_r_1a837539b9220b4a696e19e5c3ea8197be" kindref="member">modules</ref><sp/>*<sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1a5ff0541260cf4d1024d1a7bb0f7a5352" kindref="member">rows</ref><sp/>*<sp/>sensor_.<ref refid="struct_s_e_n_s_o_r_1ad3e46072e6563c0c94bf088e2291030b" kindref="member">cols</ref><sp/>*<sp/>15,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(local_buffer_ptr<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Error<sp/>allocating<sp/>local<sp/>buffer\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a535f4c7d03e30b1efe4f7dad854cfc3f" kindref="member">ADMaxSizeX</ref>,<sp/>&amp;sizeX);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a93caa26e32c3765ba19e1ac74a2f50cc" kindref="member">ADMaxSizeY</ref>,<sp/>&amp;sizeY);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1a099043ad2fe1bad9401ee82193e36d08" kindref="member">PixiradUDPBuffersMax</ref>,<sp/>&amp;udpBuffersMax);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>dims[0]<sp/>=<sp/>sizeX;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>dims[1]<sp/>=<sp/>sizeY;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>epicsMessageQueueReceive(dataMessageQueueId_,<sp/>&amp;process_buf_ptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(&amp;process_buf_ptr));</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Error<sp/>calling<sp/>epicsMessageQueueReceive,<sp/>status=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>status);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_FLOW,</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>received<sp/>image<sp/>via<sp/>epicsMessageQueue\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(process_buf_ptr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Error<sp/>process_buf_ptr=NULL\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acqProp.<ref refid="struct_a_c_q___p_r_o_p_1ac283ad30fda6c25b9ca460f87a9c6124" kindref="member">decode</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packet_tag<sp/>=<sp/>*(process_buf_ptr<sp/>+<sp/><ref refid="pixirad_8cpp_1a0d3de2b8eb842c26669a4a6811e1a391" kindref="member">PACKET_TAG_OFFSET</ref>*2);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet_tag<sp/>&amp;<sp/><ref refid="pixirad_8cpp_1a5875a8d6be6d870e0dfcd1c337f28a13" kindref="member">AUTOCAL_DATA</ref>)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acqProp.<ref refid="struct_a_c_q___p_r_o_p_1a1fa568febf955628e0d50714a69849ee" kindref="member">is_autocal</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acqProp.<ref refid="struct_a_c_q___p_r_o_p_1a1fa568febf955628e0d50714a69849ee" kindref="member">is_autocal</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_FLOW,</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>acqProp.is_autocal=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>acqProp.<ref refid="struct_a_c_q___p_r_o_p_1a1fa568febf955628e0d50714a69849ee" kindref="member">is_autocal</ref>);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet_tag<sp/>&amp;<sp/><ref refid="pixirad_8cpp_1a9d2d3d7280b47dcfa889ec169ad04042" kindref="member">FRAME_HAS_ALIGN_ERRORS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>frame<sp/>has<sp/>alignment<sp/>errors\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_us_ptr<sp/>=<sp/>process_buf_ptr<sp/>+<sp/>(<ref refid="pixirad_8cpp_1aca2411136789e47bad4ef1bef6b98bc2" kindref="member">PACKET_TAG_BYTES</ref>/2);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_i_x_i_e__data__utilities_8cpp_1aacd449cae664db00c6e677ae515e5112" kindref="member">get_pixie_raw_data</ref>(temp_us_ptr,<sp/>local_buffer_ptr,<sp/>acqProp,<sp/>sensor_);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_FLOW,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>called<sp/>get_pixie_raw_data\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>udpBuffersFree<sp/>=<sp/>udpBuffersMax<sp/>-<sp/>epicsMessageQueuePending(dataMessageQueueId_);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1aa3bb11e5ac3cadd4140c37bd3f7dffde" kindref="member">PixiradUDPBuffersFree</ref>,<sp/>udpBuffersFree);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1ae246f999cf99d4e97594beb939f15f21" kindref="member">ADFrameType</ref>,<sp/>&amp;frameType);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1aea344ac1e517b591651e61a40d5fbfaf" kindref="member">PixiradAutoCalibrate</ref>,<sp/>&amp;autoCalibrate);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(autoCalibrate)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numColors<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numColors<sp/>=<sp/>FTNumColors[frameType];</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1a4a1e96eb22ec3ab1d9ed1980a1244492" kindref="member">PixiradColorsCollected</ref>,<sp/>&amp;colorsCollected);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colorsCollected<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>current<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;startTime);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numColors<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numDims<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numDims<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[2]<sp/>=<sp/>numColors;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>an<sp/>image<sp/>buffer<sp/>from<sp/>the<sp/>pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage<sp/>=<sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1ad3969854a37329ef4061cc560e9022dc" kindref="member">pNDArrayPool</ref>-&gt;<ref refid="class_n_d_array_pool_1a26b4360694655c4af6c853c2f3d2ce5e" kindref="member">alloc</ref>(numDims,<sp/>dims,<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a174cfb9ba69c78761d4d9d25ec1bd8df" kindref="member">NDUInt16</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>data<sp/>from<sp/>the<sp/>process_buf<sp/>to<sp/>the<sp/>NDArray<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>images<sp/>come<sp/>out<sp/>in<sp/>order<sp/>thresh2,<sp/>thresh1,<sp/>thresh4,<sp/>thresh3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numColors<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>colorOffsetMap[colorsCollected]<sp/>*<sp/>sizeX<sp/>*<sp/>sizeY;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)pImage-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref><sp/>+<sp/>offset,<sp/></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_buf_ptr+<ref refid="pixirad_8cpp_1aca2411136789e47bad4ef1bef6b98bc2" kindref="member">PACKET_TAG_BYTES</ref>/2,<sp/></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeX<sp/>*<sp/>sizeY<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_FLOW,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>numColors=%d,<sp/>colorsCollected=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>numColors,<sp/>colorsCollected);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>process_buf_ptr,<sp/>no<sp/>longer<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(process_buf_ptr);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorsCollected++;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colorsCollected<sp/>&gt;=<sp/>numColors)<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorsCollected<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1abec5f5fc9922549d745d7dc7f19243ea" kindref="member">NDArrayCounter</ref>,<sp/>&amp;imageCounter);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageCounter++;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1abec5f5fc9922549d745d7dc7f19243ea" kindref="member">NDArrayCounter</ref>,<sp/>imageCounter);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a8cdc9e9fbabaadaa3c87108aad2e2895" kindref="member">ADNumImagesCounter</ref>,<sp/>&amp;numImagesCounter);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numImagesCounter++;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a8cdc9e9fbabaadaa3c87108aad2e2895" kindref="member">ADNumImagesCounter</ref>,<sp/>numImagesCounter);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>frame<sp/>number<sp/>and<sp/>time<sp/>stamp<sp/>into<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1a62f165653bd0099f31b3d276bdb81d3c" kindref="member">uniqueId</ref><sp/>=<sp/>imageCounter;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1ac449943846ba4c5c18aa1ca5559470c2" kindref="member">timeStamp</ref><sp/>=<sp/>startTime.secPastEpoch<sp/>+<sp/>startTime.nsec<sp/>/<sp/>1.e9;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateTimeStamp(&amp;pImage-&gt;<ref refid="class_n_d_array_1a107537f0e084674fbec9225cf63c3979" kindref="member">epicsTS</ref>);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>any<sp/>attributes<sp/>that<sp/>have<sp/>been<sp/>defined<sp/>for<sp/>this<sp/>driver<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1a7492ba858d885e2ba226a1c7ef9dcf72" kindref="member">getAttributes</ref>(pImage-&gt;<ref refid="class_n_d_array_1af5aad7b41118f465621cf045ed957469" kindref="member">pAttributeList</ref>);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1af2354f73acece6ee2427f5069b16fdb5" kindref="member">NDArrayCallbacks</ref>,<sp/>&amp;arrayCallbacks);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arrayCallbacks)<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>NDArray<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doCallbacksGenericPointer(pImage,<sp/><ref refid="classasyn_n_d_array_driver_1a2b2fe51fba9a6ee4146813eac0c47fd1" kindref="member">NDArrayData</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>the<sp/>image<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1a0c4c61ea4d44ce97db979d24305c996e" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>,<sp/>&amp;numFrames);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numImagesCounter<sp/>&gt;=<sp/>numFrames)<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(autoCalibrate)<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1aea344ac1e517b591651e61a40d5fbfaf" kindref="member">PixiradAutoCalibrate</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a4a1e96eb22ec3ab1d9ed1980a1244492" kindref="member">PixiradColorsCollected</ref>,<sp/>colorsCollected);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>callbacks<sp/>to<sp/>update<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1af4269723eeb43f355b4a4bed8e3722df" kindref="member">pixirad::udpDataListenerTask</ref>()</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>si_me;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>packet_tag;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,j,temp_NPACK;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>SOCKET<sp/>data_udp_sock_fd;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>this_frame_has_aligment_errors=0;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packet_id,<sp/>local_packet_id;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>packet_id_gap;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>udpBuffersRead,<sp/>udpBuffersMax,<sp/>udpBuffersFree;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeStamp<sp/>timer_a,<sp/>timer_b;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>time_interval,<sp/>udpSpeed;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="udp__client__pixirad__single_8cpp_1aff5a866cf36aec50638fc7a943bd89bf" kindref="member">received_packets</ref>=0;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="udp__client__pixirad__single_8cpp_1a0cd4e7bd058379ffb048be0477bafc6f" kindref="member">id_error_packets</ref>=0;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;udpDataListenerTask&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="udp__client__pixirad__single_8cpp_1aef8e9c91bbe0579d31259001424ba8c5" kindref="member">process_buf</ref>;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>calloc(<ref refid="pixirad_8cpp_1ad1952d01dc581eccab71e4663eb00121" kindref="member">MAX_UDP_PACKET_LEN</ref><sp/>*<sp/>numUDPPackets_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((data_udp_sock_fd<sp/>=<sp/>epicsSocketCreate(AF_INET,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP))<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Error<sp/>creating<sp/>socket<sp/>error<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;si_me,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(si_me));</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>si_me.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>si_me.sin_port<sp/>=<sp/>htons(dataPortNumber_);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>si_me.sin_addr.s_addr<sp/>=<sp/>htonl(INADDR_ANY);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(data_udp_sock_fd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;si_me,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(si_me))<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Error<sp/>binding<sp/>socket<sp/>error<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buffsize;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>osiSocklen_t<sp/>czm<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>received_bytes;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>buffsize<sp/>=<sp/><ref refid="pixirad_8cpp_1a36b8cfe87aa349b297612afdac56a7e5" kindref="member">MAX_UDP_DATA_BUFFER</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setsockopt(data_udp_sock_fd,<sp/>SOL_SOCKET,</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SO_RCVBUF,</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;buffsize,</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>czm)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Error<sp/>calling<sp/>setsockopt<sp/>for<sp/>SO_RCVBUF<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getsockopt(data_udp_sock_fd,<sp/>SOL_SOCKET,</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SO_RCVBUF,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;buffsize,</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;czm)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Error<sp/>calling<sp/>getsockopt<sp/>for<sp/>SO_RCVBUF<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffsize<sp/>!=<sp/><ref refid="pixirad_8cpp_1a36b8cfe87aa349b297612afdac56a7e5" kindref="member">MAX_UDP_DATA_BUFFER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Unable<sp/>to<sp/>set<sp/>requested<sp/>buffer<sp/>size<sp/>for<sp/>SO_RCVBUF,<sp/>actual=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>buffsize);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1a099043ad2fe1bad9401ee82193e36d08" kindref="member">PixiradUDPBuffersMax</ref>,<sp/>&amp;udpBuffersMax);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_frame_has_aligment_errors=0;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_NPACK<sp/>=<sp/>numUDPPackets_;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>&lt;<sp/>temp_NPACK<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(j<sp/>&lt;<sp/><ref refid="pixirad_8cpp_1a636220b32fddc6a6d54e2ced1fc4e518" kindref="member">DAQ_PACKET_FRAGMENT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>received_bytes=recvfrom(data_udp_sock_fd,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/><ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>+(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>*<ref refid="pixirad_8cpp_1ad1952d01dc581eccab71e4663eb00121" kindref="member">MAX_UDP_PACKET_LEN</ref>),<sp/><ref refid="pixirad_8cpp_1ad1952d01dc581eccab71e4663eb00121" kindref="member">MAX_UDP_PACKET_LEN</ref>,<sp/>0,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACEIO_DRIVER,</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>received<sp/>%d<sp/>byte<sp/>packet,<sp/>i=%d,<sp/>j=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>received_bytes,<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,<sp/>j);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(received_bytes<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Error<sp/>calling<sp/>recvfrom<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(received_bytes<sp/>==<sp/><ref refid="pixirad_8cpp_1ad1952d01dc581eccab71e4663eb00121" kindref="member">MAX_UDP_PACKET_LEN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>==<sp/>0)<sp/><sp/>epicsTimeGetCurrent(&amp;timer_a);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="udp__client__pixirad__single_8cpp_1aff5a866cf36aec50638fc7a943bd89bf" kindref="member">received_packets</ref>++;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packet_tag<sp/>=<sp/>*<ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet_tag<sp/>&amp;<sp/><ref refid="pixirad_8cpp_1a5875a8d6be6d870e0dfcd1c337f28a13" kindref="member">AUTOCAL_DATA</ref>)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_NPACK<sp/>=<sp/>numAutocalUDPPackets_;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_NPACK<sp/>=<sp/>numUDPPackets_;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packet_id<sp/>=<sp/><ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>[<ref refid="pixirad_8cpp_1ad1952d01dc581eccab71e4663eb00121" kindref="member">MAX_UDP_PACKET_LEN</ref>*(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>)+<ref refid="pixirad_8cpp_1a6cb393e198717cd20c5174cc6e7ebd37" kindref="member">PACKET_ID_OFFSET</ref>]&lt;&lt;8;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packet_id<sp/>+=<sp/><ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>[<ref refid="pixirad_8cpp_1ad1952d01dc581eccab71e4663eb00121" kindref="member">MAX_UDP_PACKET_LEN</ref>*(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>)+1+<ref refid="pixirad_8cpp_1a6cb393e198717cd20c5174cc6e7ebd37" kindref="member">PACKET_ID_OFFSET</ref>];</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packet_id<sp/>=<sp/>packet_id%<ref refid="pixirad_8cpp_1a636220b32fddc6a6d54e2ced1fc4e518" kindref="member">DAQ_PACKET_FRAGMENT</ref>;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packet_id_gap<sp/>=<sp/>(packet_id-j);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet_id_gap<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="udp__client__pixirad__single_8cpp_1a0cd4e7bd058379ffb048be0477bafc6f" kindref="member">id_error_packets</ref>&lt;10)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ID:<sp/>%d<sp/>j=<sp/>%d\n&quot;</highlight><highlight class="normal">,packet_id,j);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="udp__client__pixirad__single_8cpp_1a0cd4e7bd058379ffb048be0477bafc6f" kindref="member">id_error_packets</ref>++;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_frame_has_aligment_errors=1;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet_id_gap<sp/>&gt;=<sp/>0){</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j+=(packet_id_gap+1);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>+=(packet_id_gap+1);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j=<ref refid="pixirad_8cpp_1a636220b32fddc6a6d54e2ced1fc4e518" kindref="member">DAQ_PACKET_FRAGMENT</ref>;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>+=<ref refid="pixirad_8cpp_1a636220b32fddc6a6d54e2ced1fc4e518" kindref="member">DAQ_PACKET_FRAGMENT</ref>;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;timer_b);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_interval<sp/>=<sp/>epicsTimeDiffInSeconds(&amp;timer_b,<sp/>&amp;timer_a);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>udpSpeed<sp/>=<sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>*<sp/><ref refid="pixirad_8cpp_1ad1952d01dc581eccab71e4663eb00121" kindref="member">MAX_UDP_PACKET_LEN</ref>)<sp/>/<sp/>(time_interval*1024*1024);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_FLOW,</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>received<sp/>%d<sp/>packets<sp/>(%d<sp/>bytes<sp/>each)<sp/><sp/>in<sp/>%.3f<sp/>s,<sp/>=<sp/>%.3f<sp/>MB/s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,<sp/><ref refid="pixirad_8cpp_1ad1952d01dc581eccab71e4663eb00121" kindref="member">MAX_UDP_PACKET_LEN</ref>,<sp/>time_interval,<sp/>udpSpeed);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_packet_id=0;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="udp__client__pixirad__single_8cpp_1aef8e9c91bbe0579d31259001424ba8c5" kindref="member">process_buf</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>calloc((<ref refid="pixirad_8cpp_1ad1952d01dc581eccab71e4663eb00121" kindref="member">MAX_UDP_PACKET_LEN</ref><sp/>-<sp/><ref refid="pixirad_8cpp_1ac61b14d25bc9ba322d917604cfb2ed72" kindref="member">PACKET_EXTRA_BYTES</ref><sp/>+<sp/><ref refid="pixirad_8cpp_1aca2411136789e47bad4ef1bef6b98bc2" kindref="member">PACKET_TAG_BYTES</ref>)<sp/>*<sp/>numUDPPackets_,<sp/></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short));</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="udp__client__pixirad__single_8cpp_1aef8e9c91bbe0579d31259001424ba8c5" kindref="member">process_buf</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>error<sp/>allocated<sp/>process_buf\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>&lt;<sp/>temp_NPACK)<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="udp__client__pixirad__single_8cpp_1aef8e9c91bbe0579d31259001424ba8c5" kindref="member">process_buf</ref><sp/>+<sp/><ref refid="pixirad_8cpp_1aca2411136789e47bad4ef1bef6b98bc2" kindref="member">PACKET_TAG_BYTES</ref><sp/>+<sp/>(<ref refid="pixirad_8cpp_1ad30f017b8afa69acce147e7d34b0f647" kindref="member">PACKET_SENSOR_DATA_BYTES</ref><sp/>*<sp/>local_packet_id),</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref><sp/>+<sp/><ref refid="pixirad_8cpp_1a2f56a191b7526ad5d92d330753e6cbe3" kindref="member">PACKET_SENSOR_DATA_OFFSET</ref><sp/>+<sp/>(<ref refid="pixirad_8cpp_1ad1952d01dc581eccab71e4663eb00121" kindref="member">MAX_UDP_PACKET_LEN</ref>*<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>),<sp/><ref refid="pixirad_8cpp_1ad30f017b8afa69acce147e7d34b0f647" kindref="member">PACKET_SENSOR_DATA_BYTES</ref>);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;<ref refid="pixirad_8cpp_1aca2411136789e47bad4ef1bef6b98bc2" kindref="member">PACKET_TAG_BYTES</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="udp__client__pixirad__single_8cpp_1aef8e9c91bbe0579d31259001424ba8c5" kindref="member">process_buf</ref>[<ref refid="pixirad_8cpp_1a0d3de2b8eb842c26669a4a6811e1a391" kindref="member">PACKET_TAG_OFFSET</ref>+j]<sp/>=<sp/><ref refid="udp__client__pixirad__single_8cpp_1ac8ed9b9edf72a0bbde1ba01f0c67ef73" kindref="member">buf</ref>[j];\</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(this_frame_has_aligment_errors)</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="udp__client__pixirad__single_8cpp_1aef8e9c91bbe0579d31259001424ba8c5" kindref="member">process_buf</ref>[<ref refid="pixirad_8cpp_1a0d3de2b8eb842c26669a4a6811e1a391" kindref="member">PACKET_TAG_OFFSET</ref>]<sp/>|=<sp/><ref refid="pixirad_8cpp_1a9d2d3d7280b47dcfa889ec169ad04042" kindref="member">FRAME_HAS_ALIGN_ERRORS</ref>;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="udp__client__pixirad__single_8cpp_1aef8e9c91bbe0579d31259001424ba8c5" kindref="member">process_buf</ref>[<ref refid="pixirad_8cpp_1a0d3de2b8eb842c26669a4a6811e1a391" kindref="member">PACKET_TAG_OFFSET</ref>]<sp/>&amp;=<sp/>(~<ref refid="pixirad_8cpp_1a9d2d3d7280b47dcfa889ec169ad04042" kindref="member">FRAME_HAS_ALIGN_ERRORS</ref>);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_packet_id++;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpixirad_1a152f45e62fdc32f3e27c6dc86708469f" kindref="member">PixiradUDPBuffersRead</ref>,<sp/>&amp;udpBuffersRead);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>udpBuffersRead++;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1a152f45e62fdc32f3e27c6dc86708469f" kindref="member">PixiradUDPBuffersRead</ref>,<sp/>udpBuffersRead);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_FLOW,</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>sending<sp/>image<sp/>via<sp/>epicsMessageQueue\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsMessageQueueSend(dataMessageQueueId_,<sp/>&amp;<ref refid="udp__client__pixirad__single_8cpp_1aef8e9c91bbe0579d31259001424ba8c5" kindref="member">process_buf</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(&amp;<ref refid="udp__client__pixirad__single_8cpp_1aef8e9c91bbe0579d31259001424ba8c5" kindref="member">process_buf</ref>));</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>udpBuffersFree<sp/>=<sp/>udpBuffersMax<sp/>-<sp/>epicsMessageQueuePending(dataMessageQueueId_);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1aa3bb11e5ac3cadd4140c37bd3f7dffde" kindref="member">PixiradUDPBuffersFree</ref>,<sp/>udpBuffersFree);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpixirad_1a64fdb5505bd64d7f93dab3f237165975" kindref="member">PixiradUDPSpeed</ref>,<sp/>udpSpeed);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1aa2589dfc1a30de45ffe140d015994313" kindref="member">pixirad::statusTask</ref>()</highlight></codeline>
<codeline lineno="1255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>serverAddr;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>remoteAddr;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/>osiSocklen_t<sp/>remoteAddrLen;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>SOCKET<sp/>fd;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numItems=0;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRead;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[256];</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1ad1600a788d1f9ef0e8cb643e6f0e3fa6" kindref="member">h</ref>,<sp/>boxTemp,<sp/>coldTemp,<sp/>hotTemp,<sp/>humidity,<sp/>dewPoint;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coolingStatus;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pString;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>}<sp/>lookupEntry;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>lookupEntry<sp/>entry;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>format[80];</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>MAX_STATUS_PARAMS<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>lookupEntry<sp/>lookupTable[<ref refid="pixirad_8cpp_1aa942dd4099d9f1c69e52305934621915" kindref="member">MAX_STATUS_PARAMS</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;READ_TCOLD&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_d_driver_1a625f815727135a2af747ae5086bf21d5" kindref="member">ADTemperatureActual</ref>},</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;READ_THOT&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpixirad_1a1367e660199e0e1995749193f4c76ca9" kindref="member">PixiradHotTemperature</ref>},</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;READ_BOX_TEMP&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpixirad_1a77056fc46393595f4e8beb3fa63e0d6e" kindref="member">PixiradBoxTemperature</ref>},</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;READ_BOX_HUM&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpixirad_1a68eedddc104bea618a560261281d5228" kindref="member">PixiradBoxHumidity</ref>},</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;READ_PELTIER_PWR&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><ref refid="classpixirad_1a38eaa33a2b5641b50ed93f51d4da257a" kindref="member">PixiradPeltierPower</ref>},</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;READ_HV&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpixirad_1ab83bc58932ae6a2dbe76a0cb9345052b" kindref="member">PixiradHVActual</ref>},</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;READ_HV_CURRENT&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><ref refid="classpixirad_1a74fe31006c1dcd25775d96bf915c4ade" kindref="member">PixiradHVCurrent</ref>}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;statusTask&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>socket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>=<sp/>epicsSocketCreate(PF_INET,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Can&apos;t<sp/>create<sp/>socket:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>strerror(SOCKERRNO));</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>serverAddr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/>serverAddr.sin_addr.s_addr<sp/>=<sp/>INADDR_ANY;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/>serverAddr.sin_port<sp/>=<sp/>htons(statusPortNumber_);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(fd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;serverAddr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(serverAddr))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>Error<sp/>in<sp/>binding<sp/>port<sp/>%d:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>statusPortNumber_,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>epicsSocketDestroy(fd);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsThreadSleep(1.0);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>remoteAddrLen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(remoteAddr);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>nRead<sp/>=<sp/>recvfrom(fd,<sp/>buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer),<sp/>0,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;remoteAddr,<sp/>&amp;remoteAddrLen);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nRead<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>error<sp/>reading<sp/>status<sp/>broadcast<sp/>message:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACEIO_DRIVER,</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>received<sp/>status<sp/>nRead=%d,<sp/>message=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>nRead,<sp/>buffer);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="pixirad_8cpp_1aa942dd4099d9f1c69e52305934621915" kindref="member">MAX_STATUS_PARAMS</ref>;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>=<sp/>lookupTable[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pString<sp/>=<sp/>strstr(buffer,<sp/>entry.str);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pString)<sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>cannot<sp/>find<sp/>string<sp/>%s<sp/>in<sp/>status<sp/>broadcast<sp/>message=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>entry.str,<sp/>buffer);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(format,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%%f&quot;</highlight><highlight class="normal">,<sp/>entry.str);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>numItems<sp/>=<sp/>sscanf(pString,<sp/>format,<sp/>&amp;<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numItems<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(entry.param,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>error<sp/>parsing<sp/>%s<sp/>in<sp/>status<sp/>broadcast<sp/>message=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>entry.str,<sp/>buffer);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpixirad_1a68eedddc104bea618a560261281d5228" kindref="member">PixiradBoxHumidity</ref>,<sp/>&amp;humidity);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpixirad_1a77056fc46393595f4e8beb3fa63e0d6e" kindref="member">PixiradBoxTemperature</ref>,<sp/>&amp;boxTemp);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1a625f815727135a2af747ae5086bf21d5" kindref="member">ADTemperatureActual</ref>,<sp/>&amp;coldTemp);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpixirad_1a1367e660199e0e1995749193f4c76ca9" kindref="member">PixiradHotTemperature</ref>,<sp/>&amp;hotTemp);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>dew<sp/>point<sp/>(Magnus<sp/>formula,<sp/>e-mail<sp/>from<sp/>Pixirad<sp/>1/14/2014)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1ad1600a788d1f9ef0e8cb643e6f0e3fa6" kindref="member">h</ref><sp/>=<sp/>(log10(humidity)<sp/>-<sp/>2.)<sp/>/<sp/>0.4343<sp/>+<sp/>(17.62<sp/>*<sp/>boxTemp)<sp/>/<sp/>(243.12<sp/>+<sp/>boxTemp);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>dewPoint<sp/>=<sp/>243.12<sp/>*<sp/><ref refid="namespacemake_adl_1ad1600a788d1f9ef0e8cb643e6f0e3fa6" kindref="member">h</ref><sp/>/<sp/>(17.62<sp/>-<sp/><ref refid="namespacemake_adl_1ad1600a788d1f9ef0e8cb643e6f0e3fa6" kindref="member">h</ref>);<sp/></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpixirad_1ac90c22d03963c5f7130ae73e6611f16f" kindref="member">PixiradDewPoint</ref>,<sp/>dewPoint);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>status<sp/>problems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>coolingStatus<sp/>=<sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa88a0eff8ae7261c4b3fc66b851d9a295" kindref="member">TSOK</ref>;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coldTemp<sp/>&lt;=<sp/>(dewPoint<sp/>+<sp/><ref refid="pixirad_8cpp_1a7a2d9d537c45c2603169c0ceb2804874" kindref="member">DEW_POINT_WARNING</ref>))<sp/>coolingStatus<sp/>=<sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa3c295bc60dc0e71aec735b26c1e6eeea" kindref="member">TSDewPointWarning</ref>;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coldTemp<sp/>&lt;=<sp/>(dewPoint<sp/>+<sp/><ref refid="pixirad_8cpp_1a2c2776e2ec269dfc604fc1abe3581120" kindref="member">DEW_POINT_ERROR</ref>))<sp/><sp/><sp/>coolingStatus<sp/>=<sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa3737841a4db91939b985380a98448b17" kindref="member">TSDewPointError</ref>;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hotTemp<sp/>&gt;=<sp/><ref refid="pixirad_8cpp_1a8c39afd65e72a10167167317cdee25cc" kindref="member">THOT_WARNING</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coolingStatus<sp/>=<sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfad4f0584fb154e3ff8b83bae5491d03eb" kindref="member">TSTHotWarning</ref>;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hotTemp<sp/>&gt;=<sp/><ref refid="pixirad_8cpp_1a57817ad0671113e52a2efac49c727e7a" kindref="member">THOT_ERROR</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coolingStatus<sp/>=<sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa804b5f05786f0e5119392b18f9e5a348" kindref="member">TSTHotError</ref>;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coldTemp<sp/>&gt;=<sp/><ref refid="pixirad_8cpp_1a0bb5ec7fc194919af4e1c456f94c3576" kindref="member">TCOLD_WARNING</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coolingStatus<sp/>=<sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfacb2e7b074a7087cbc528a47021bc44fc" kindref="member">TSTColdWarning</ref>;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coldTemp<sp/>&gt;=<sp/><ref refid="pixirad_8cpp_1aee74f490df151792e8f00d74bb4bc737" kindref="member">TCOLD_ERROR</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coolingStatus<sp/>=<sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa88bab5367d89598d198bccd25c286ae0" kindref="member">TSTColdError</ref>;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1ab6a84248195b434a7387d060d43e4283" kindref="member">PixiradCoolingStatus</ref>,<sp/>coolingStatus);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((coolingStatus<sp/>==<sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa3737841a4db91939b985380a98448b17" kindref="member">TSDewPointError</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(coolingStatus<sp/>==<sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa804b5f05786f0e5119392b18f9e5a348" kindref="member">TSTHotError</ref>)<sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(coolingStatus<sp/>==<sp/><ref refid="pixirad_8cpp_1a2b2917e86f42a65e05b010bc2bf019bfa88bab5367d89598d198bccd25c286ae0" kindref="member">TSTColdError</ref>))<sp/></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpixirad_1af3ba7a503d7a5428aca5be8790962d19" kindref="member">PixiradCoolingState</ref>,<sp/><ref refid="pixirad_8cpp_1a6af373633746888fb831519e9cb4994cad14668d814c577213e2e9fd2764d90e5" kindref="member">CoolingOff</ref>);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCoolingAndHV();</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp value="12"/></highlight></codeline>
<codeline lineno="1381"><highlight class="normal">asynStatus<sp/><ref refid="classpixirad_1a0e4a3d2e4c85cf199be95b4a5ccb4a6f" kindref="member">pixirad::writeInt32</ref>(asynUser<sp/>*pasynUser,<sp/>epicsInt32<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isAcquiring;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;writeInt32&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>current<sp/>value<sp/>of<sp/>ADAcquire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>&amp;isAcquiring);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&amp;&amp;<sp/>!isAcquiring)<sp/>{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>startAcquire();</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&amp;&amp;<sp/>isAcquiring)<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>This<sp/>seems<sp/>to<sp/>be<sp/>screwing<sp/>things<sp/>up,<sp/>comment<sp/>out<sp/>temporarily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>stopAcquire();</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1aad35956ca5438570840b232a1d0b09e7" kindref="member">PixiradSyncInPolarity</ref>)<sp/><sp/>||</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1ae65a06e70fd515dd78e680715db99e56" kindref="member">PixiradSyncOutPolarity</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1a9ade4a778630df8e80e55e943ef7b668" kindref="member">PixiradSyncOutFunction</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setSync();</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1ae246f999cf99d4e97594beb939f15f21" kindref="member">ADFrameType</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1a8707766a07014d19c455f6b60cdce713" kindref="member">PixiradCountMode</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setThresholds(1);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1a19a9e1a90535264a3673847e179fc40a" kindref="member">PixiradHVState</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1af3ba7a503d7a5428aca5be8790962d19" kindref="member">PixiradCoolingState</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setCoolingAndHV();</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1ab3e5d9d2e77791b2a5797e969e22a6db" kindref="member">PixiradSystemReset</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>systemReset();</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1aea344ac1e517b591651e61a40d5fbfaf" kindref="member">PixiradAutoCalibrate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>doAutoCalibrate();</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>parameter<sp/>belongs<sp/>to<sp/>a<sp/>base<sp/>class<sp/>call<sp/>its<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>&lt;<sp/><ref refid="pixirad_8cpp_1ae8ab4d3cce948178623c403dac9fac3d" kindref="member">FIRST_PIXIRAD_PARAM</ref>)<sp/>status<sp/>=<sp/><ref refid="class_a_d_driver_1abef6916bb90d032a1aeb6894adef12a6" kindref="member">ADDriver::writeInt32</ref>(pasynUser,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>callbacks<sp/>so<sp/>higher<sp/>layers<sp/>see<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>error,<sp/>status=%d<sp/>function=%d,<sp/>value=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>status,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACEIO_DRIVER,<sp/></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>function=%d,<sp/>value=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal">asynStatus<sp/><ref refid="classpixirad_1a4aed7a7a465c3e895ad4e004a6f5c296" kindref="member">pixirad::writeFloat64</ref>(asynUser<sp/>*pasynUser,<sp/>epicsFloat64<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;writeFloat64&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>parameter<sp/>and<sp/>readback<sp/>in<sp/>the<sp/>parameter<sp/>library.<sp/><sp/>This<sp/>may<sp/>be<sp/>overwritten<sp/>when<sp/>we<sp/>read<sp/>back<sp/>the</highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>status<sp/>at<sp/>the<sp/>end,<sp/>but<sp/>that&apos;s<sp/>OK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setDoubleParam(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1aef042b68b6b77d7b39dfaeceaa097a38" kindref="member">ADTemperature</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1aadf2e5cdcf03276553f10c47fd94db9b" kindref="member">PixiradHVValue</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setCoolingAndHV();</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1aa05bf763eec6d2057286ece3827e093f" kindref="member">PixiradThresh1</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1a3e5cb98210c380256377379919317a2f" kindref="member">PixiradThresh2</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1a2112d9e9172bb4b921ee84f5ff8f943a" kindref="member">PixiradThresh3</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1ac817376c3ae535cc4592ed8daba721b0" kindref="member">PixiradThresh4</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpixirad_1a65b9c183509a72932f967014dba325db" kindref="member">PixiradHitThresh</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setThresholds(1);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>parameter<sp/>belongs<sp/>to<sp/>a<sp/>base<sp/>class<sp/>call<sp/>its<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>&lt;<sp/><ref refid="pixirad_8cpp_1ae8ab4d3cce948178623c403dac9fac3d" kindref="member">FIRST_PIXIRAD_PARAM</ref>)<sp/>status<sp/>=<sp/>ADDriver::writeFloat64(pasynUser,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s<sp/>error,<sp/>status=%d<sp/>function=%d,<sp/>value=%f\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>status,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACEIO_DRIVER,<sp/></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>function=%d,<sp/>value=%f\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>callbacks<sp/>so<sp/>higher<sp/>layers<sp/>see<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp value="12"/></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpixirad_1a463564bc46161c533f378ee1a76dd718" kindref="member">pixirad::report</ref>(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>details)</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Pixirad<sp/>detector<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>this-&gt;portName);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(details<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a3c7364e67c0570681ac29158f738bff6" kindref="member">nx</ref>,<sp/>ny,<sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/>&amp;<ref refid="namespacemake_adl_1a3c7364e67c0570681ac29158f738bff6" kindref="member">nx</ref>);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>,<sp/>&amp;ny);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1af71358738ff1dbe4c9185f105807f799" kindref="member">NDDataType</ref>,<sp/>&amp;<ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>NX,<sp/>NY:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d<sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_adl_1a3c7364e67c0570681ac29158f738bff6" kindref="member">nx</ref>,<sp/>ny);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Data<sp/>type:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invoke<sp/>the<sp/>base<sp/>class<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1ac3f2d73a05eb54357ec3f052e1b000f2" kindref="member">ADDriver::report</ref>(fp,<sp/>details);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pixirad_8cpp_1aedc1be32cfb228d23ff22db6545140d4" kindref="member">pixiradConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*commandPort,</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataPortNumber,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>statusPortNumber,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxDataPortBuffers,</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeY,</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="1515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classpixirad" kindref="compound">pixirad</ref>(portName,<sp/>commandPort,<sp/>dataPortNumber,<sp/>statusPortNumber,<sp/>maxDataPortBuffers,</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxSizeX,<sp/>maxSizeY,<sp/>maxBuffers,<sp/>maxMemory,</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority,<sp/>stackSize);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynSuccess);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pixirad_8cpp_1aec8ed0f1b1b6824fa6849c4eccac9c52" kindref="member">pixiradAutoCal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fs0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ofs2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fs1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fs2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibias,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vbgMcalDAC)</highlight></codeline>
<codeline lineno="1523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpixirad" kindref="compound">pixirad</ref><sp/>*pr<sp/>=<sp/>(<ref refid="classpixirad" kindref="compound">pixirad</ref><sp/>*)findAsynPortDriver(portName);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr-&gt;<ref refid="classpixirad_1aaf4a33088fe941ebef2e53a4aa8608b8" kindref="member">setAutoCalParams</ref>(ofs0,<sp/>fs0,<sp/>ofs2,<sp/>fs1,<sp/>fs2,<sp/>ibias,<sp/>vbgMcalDAC);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Code<sp/>for<sp/>iocsh<sp/>registration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradConfigArg0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Port<sp/>name&quot;</highlight><highlight class="normal">,<sp/>iocshArgString};</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradConfigArg1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;command<sp/>port<sp/>name&quot;</highlight><highlight class="normal">,<sp/>iocshArgString};</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradConfigArg2<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;data<sp/>port<sp/>number&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradConfigArg3<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;status<sp/>port<sp/>number&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradConfigArg4<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;max<sp/>data<sp/>port<sp/>buffers&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradConfigArg5<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;maxSizeX&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradConfigArg6<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;maxSizeY&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradConfigArg7<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;maxBuffers&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradConfigArg8<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;maxMemory&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradConfigArg9<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;priority&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradConfigArg10<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;stackSize&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pixiradConfigArgs[]<sp/>=<sp/><sp/>{&amp;pixiradConfigArg0,</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradConfigArg1,</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradConfigArg2,</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradConfigArg3,</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradConfigArg4,</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradConfigArg5,</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradConfigArg6,</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradConfigArg7,</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradConfigArg8,</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradConfigArg9,</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradConfigArg10};</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshFuncDef<sp/>configPixirad<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;pixiradConfig&quot;</highlight><highlight class="normal">,<sp/>11,<sp/>pixiradConfigArgs};</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>configPixiradCallFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArgBuf<sp/>*args)</highlight></codeline>
<codeline lineno="1556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1aedc1be32cfb228d23ff22db6545140d4" kindref="member">pixiradConfig</ref>(args[0].sval,<sp/>args[1].sval,<sp/>args[2].ival,<sp/><sp/>args[3].ival,<sp/><sp/></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[4].ival,<sp/>args[5].ival,<sp/>args[6].ival,<sp/><sp/>args[7].ival,</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[8].ival,<sp/>args[9].ival,<sp/>args[10].ival);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradAutoCalArg0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Port<sp/>name&quot;</highlight><highlight class="normal">,<sp/>iocshArgString};</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradAutoCalArg1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ofs0&quot;</highlight><highlight class="normal">,<sp/><sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradAutoCalArg2<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;fs0&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradAutoCalArg3<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ofs2&quot;</highlight><highlight class="normal">,<sp/><sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradAutoCalArg4<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;fs1&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradAutoCalArg5<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;fs2&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradAutoCalArg6<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Ibias&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>pixiradAutoCalArg7<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;vbgMcalDAC&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pixiradAutoCalArgs[]<sp/>=<sp/><sp/>{&amp;pixiradAutoCalArg0,</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradAutoCalArg1,</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradAutoCalArg2,</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradAutoCalArg3,</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradAutoCalArg4,</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradAutoCalArg5,</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradAutoCalArg6,</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pixiradAutoCalArg7};</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshFuncDef<sp/>autoCalPixirad<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;pixiradAutoCal&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>pixiradAutoCalArgs};</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>autoCalPixiradCallFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArgBuf<sp/>*args)</highlight></codeline>
<codeline lineno="1580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pixirad_8cpp_1aec8ed0f1b1b6824fa6849c4eccac9c52" kindref="member">pixiradAutoCal</ref>(args[0].sval,<sp/>args[1].ival,<sp/>args[2].ival,<sp/>args[3].ival,<sp/><sp/></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[4].ival,<sp/>args[5].ival,<sp/>args[6].ival,<sp/>args[7].ival);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pixiradRegister(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/>iocshRegister(&amp;configPixirad,<sp/>configPixiradCallFunc);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>iocshRegister(&amp;autoCalPixirad,<sp/>autoCalPixiradCallFunc);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><ref refid="pixirad_8cpp_1a99a5e6c941547c383d169d40812df756" kindref="member">epicsExportRegistrar</ref>(pixiradRegister);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADPixirad/pixiradApp/src/pixirad.cpp"/>
  </compounddef>
</doxygen>
