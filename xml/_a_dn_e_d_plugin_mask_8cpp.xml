<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_a_dn_e_d_plugin_mask_8cpp" kind="file" language="C++">
    <compoundname>ADnEDPluginMask.cpp</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">iocsh.h</includes>
    <includes local="no">epicsExport.h</includes>
    <includes refid="_n_d_plugin_driver_8h" local="yes">NDPluginDriver.h</includes>
    <includes refid="_a_dn_e_d_plugin_mask_8h" local="yes">ADnEDPluginMask.h</includes>
    <incdepgraph>
      <node id="5">
        <label>iocsh.h</label>
      </node>
      <node id="28">
        <label>ADnEDPluginMask.h</label>
        <link refid="_a_dn_e_d_plugin_mask_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>epicsTypes.h</label>
      </node>
      <node id="19">
        <label>NDArray.h</label>
        <link refid="_n_d_array_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>NDAttributeList.h</label>
        <link refid="_n_d_attribute_list_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="16">
        <label>epicsMutex.h</label>
      </node>
      <node id="14">
        <label>epicsVersion.h</label>
      </node>
      <node id="22">
        <label>string</label>
      </node>
      <node id="11">
        <label>epicsThread.h</label>
      </node>
      <node id="6">
        <label>epicsExport.h</label>
      </node>
      <node id="27">
        <label>ADCoreVersion.h</label>
        <link refid="_a_d_core_version_8h"/>
      </node>
      <node id="24">
        <label>ADCoreAPI.h</label>
        <link refid="_a_d_core_a_p_i_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>asynNDArrayDriver.h</label>
        <link refid="asyn_n_d_array_driver_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="20">
        <label>ellLib.h</label>
      </node>
      <node id="21">
        <label>NDAttribute.h</label>
        <link refid="_n_d_attribute_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>asynDriver.h</label>
      </node>
      <node id="7">
        <label>NDPluginDriver.h</label>
        <link refid="_n_d_plugin_driver_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Codec.h</label>
        <link refid="_codec_8h"/>
      </node>
      <node id="29">
        <label>asynStandardInterfaces.h</label>
      </node>
      <node id="12">
        <label>epicsTime.h</label>
      </node>
      <node id="18">
        <label>asynPortDriver.h</label>
      </node>
      <node id="13">
        <label>NDPluginAPI.h</label>
        <link refid="_n_d_plugin_a_p_i_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>set</label>
      </node>
      <node id="10">
        <label>epicsMessageQueue.h</label>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp</label>
        <link refid="_a_dn_e_d_plugin_mask_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="17">
        <label>epicsEvent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_a_dn_e_d_plugin_mask_8cpp_1ad935f1ff1a50822e317bdb321ce991ad" prot="public" static="no">
        <name>MAX</name>
        <param><defname>A</defname></param>
        <param><defname>B</defname></param>
        <initializer>(A)&gt;(B)?(A):(B)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="24" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_dn_e_d_plugin_mask_8cpp_1adcd021ac91d43a62b2cdecf9a5b971a7" prot="public" static="no">
        <name>MIN</name>
        <param><defname>A</defname></param>
        <param><defname>B</defname></param>
        <initializer>(A)&lt;(B)?(A):(B)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="25" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_a_dn_e_d_plugin_mask_8cpp_1a13021e744179110a6114bf84e9d47f32" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg0</definition>
        <argsstring></argsstring>
        <name>initArg0</name>
        <initializer>= { &quot;portName&quot;,iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="331" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_dn_e_d_plugin_mask_8cpp_1a85f312f39f3c368a5fa10d1039dc40b2" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg1</definition>
        <argsstring></argsstring>
        <name>initArg1</name>
        <initializer>= { &quot;frame queue size&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="332" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_dn_e_d_plugin_mask_8cpp_1a645a7d7d0d71a7522373e2af4008b520" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg2</definition>
        <argsstring></argsstring>
        <name>initArg2</name>
        <initializer>= { &quot;blocking callbacks&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="333" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_dn_e_d_plugin_mask_8cpp_1aaa425474fd6655fa6347e1933b29038a" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg3</definition>
        <argsstring></argsstring>
        <name>initArg3</name>
        <initializer>= { &quot;NDArrayPort&quot;,iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="334" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_dn_e_d_plugin_mask_8cpp_1a945c4d0bc0e2bc869aeaf5c6a815368a" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg4</definition>
        <argsstring></argsstring>
        <name>initArg4</name>
        <initializer>= { &quot;NDArrayAddr&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="335" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_dn_e_d_plugin_mask_8cpp_1ac7e214be38a3b3bface5e0370ae97db0" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg5</definition>
        <argsstring></argsstring>
        <name>initArg5</name>
        <initializer>= { &quot;maxMasks&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="336" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_dn_e_d_plugin_mask_8cpp_1a43397205694aec859f3b5cb14a85edc3" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg6</definition>
        <argsstring></argsstring>
        <name>initArg6</name>
        <initializer>= { &quot;maxBuffers&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="337" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_dn_e_d_plugin_mask_8cpp_1a36049b095d9ed1f56a41821a2c8fc661" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg7</definition>
        <argsstring></argsstring>
        <name>initArg7</name>
        <initializer>= { &quot;maxMemory&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="338" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_dn_e_d_plugin_mask_8cpp_1a62a0c5258a2c1049720be5c31729f76d" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg8</definition>
        <argsstring></argsstring>
        <name>initArg8</name>
        <initializer>= { &quot;priority&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="339" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_dn_e_d_plugin_mask_8cpp_1a310f7847b682c968669300db5550d9fa" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg initArg9</definition>
        <argsstring></argsstring>
        <name>initArg9</name>
        <initializer>= { &quot;stackSize&quot;,iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="340" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_dn_e_d_plugin_mask_8cpp_1ac0d7f455ac7138e5bcb473b630294718" prot="public" static="yes" mutable="no">
        <type>const iocshArg *const</type>
        <definition>const iocshArg* const initArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>initArgs</name>
        <initializer>= {&amp;initArg0,
                                            &amp;initArg1,
                                            &amp;initArg2,
                                            &amp;initArg3,
                                            &amp;initArg4,
                                            &amp;initArg5,
                                            &amp;initArg6,
                                            &amp;initArg7,
                                            &amp;initArg8,
                                            &amp;initArg9}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="341" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_a_dn_e_d_plugin_mask_8cpp_1a469a3ecf9fff33f8f388acddffc8db6a" prot="public" static="yes" mutable="no">
        <type>const iocshFuncDef</type>
        <definition>const iocshFuncDef initFuncDef</definition>
        <argsstring></argsstring>
        <name>initFuncDef</name>
        <initializer>= {&quot;NDMaskConfigure&quot;,10,initArgs}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="351" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="351" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_a_dn_e_d_plugin_mask_8cpp_1a6783ec05f984005f2524afc16816f8aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NDMaskConfigure</definition>
        <argsstring>(const char *portName, int queueSize, int blockingCallbacks, const char *NDArrayPort, int NDArrayAddr, int maxMasks, int maxBuffers, size_t maxMemory, int priority, int stackSize)</argsstring>
        <name>NDMaskConfigure</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>queueSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blockingCallbacks</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>NDArrayPort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NDArrayAddr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxMasks</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxBuffers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxMemory</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stackSize</declname>
        </param>
        <briefdescription>
<para>IOC shell command. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="320" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="320" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="_a_dn_e_d_plugin_mask_8cpp_1aeeec53c20b81d2e7f49be49509087df5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void initCallFunc</definition>
        <argsstring>(const iocshArgBuf *args)</argsstring>
        <name>initCallFunc</name>
        <param>
          <type>const iocshArgBuf *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="352" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="352" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="_a_dn_e_d_plugin_mask_8cpp_1a2ffe71e38675ccaf476b349eb28f3e12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NDMaskRegister</definition>
        <argsstring>(void)</argsstring>
        <name>NDMaskRegister</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="360" column="17" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" bodystart="360" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="_a_dn_e_d_plugin_mask_8cpp_1ae6e531946cd2b1adeef871c9688128c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>epicsExportRegistrar</definition>
        <argsstring>(NDMaskRegister)</argsstring>
        <name>epicsExportRegistrar</name>
        <param>
          <type><ref refid="_a_dn_e_d_plugin_mask_8cpp_1a2ffe71e38675ccaf476b349eb28f3e12" kindref="member">NDMaskRegister</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" line="366" column="1" declfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp" declline="366" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>NDPluginMask.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Mask<sp/>plugin<sp/>for<sp/>1-D<sp/>and<sp/>2-D<sp/>NDArray<sp/>objects</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Matt<sp/>Pearson</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>April<sp/>27,<sp/>2016</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>used<sp/>to<sp/>mask<sp/>out<sp/>part<sp/>of<sp/>the<sp/>NDArray.<sp/>This<sp/>is</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>useful<sp/>for<sp/>display<sp/>purposes,<sp/>particulary<sp/>1-D<sp/>or<sp/>2-D<sp/>plots</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>that<sp/>have<sp/>unwanted<sp/>peaks.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iocsh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsExport.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_n_d_plugin_driver_8h" kindref="compound">NDPluginDriver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_dn_e_d_plugin_mask_8h" kindref="compound">ADnEDPluginMask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX(A,B)<sp/>(A)&gt;(B)?(A):(B)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN(A,B)<sp/>(A)&lt;(B)?(A):(B)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>epicsUInt32<sp/>NDPluginMask::s_MASK_TYPE_REJECT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>epicsUInt32<sp/>NDPluginMask::s_MASK_TYPE_PASS<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>epicsType&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_d_plugin_mask_1a66dbe46c61c3d23ac98c4771dc130c97" kindref="member">NDPluginMask::doMaskT</ref>(<ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pArray,<sp/><ref refid="struct_n_d_mask" kindref="compound">NDMask_t</ref><sp/>*pMask)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xmin<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xmax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ymin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ymax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>mask_val<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>mask_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>epicsType<sp/>*pRow<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMask<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACEIO_DRIVER,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NDPluginMask::doMaskT,<sp/>Xpos=%ld,<sp/>Ypos=%ld,<sp/>Xsize=%ld,<sp/>Ysize=%ld,<sp/>MaskVal=%ld,<sp/>MaskType=%ld\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pMask-&gt;<ref refid="struct_n_d_mask_1a2688712e01c43ea6d393070dbbb49536" kindref="member">PosX</ref>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pMask-&gt;<ref refid="struct_n_d_mask_1ad5006cb5a549050517c53228df1fc149" kindref="member">PosY</ref>),<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pMask-&gt;<ref refid="struct_n_d_mask_1acd851b71611e59af2b1297be2b27f9d9" kindref="member">SizeX</ref>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pMask-&gt;<ref refid="struct_n_d_mask_1af9cc038e3d47160b57d4e13a8da7fe73" kindref="member">SizeY</ref>),<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pMask-&gt;<ref refid="struct_n_d_mask_1ad50ffcfaec098fa8d8140058e3e756ce" kindref="member">MaskVal</ref>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pMask-&gt;<ref refid="struct_n_d_mask_1a827d1936cebf7e9ea7be1c1c63963989" kindref="member">MaskType</ref>));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>xmin<sp/>=<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1a2688712e01c43ea6d393070dbbb49536" kindref="member">PosX</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>xmin<sp/>=<sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1ad935f1ff1a50822e317bdb321ce991ad" kindref="member">MAX</ref>(xmin,<sp/>0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1a2688712e01c43ea6d393070dbbb49536" kindref="member">PosX</ref><sp/>+<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1acd851b71611e59af2b1297be2b27f9d9" kindref="member">SizeX</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1adcd021ac91d43a62b2cdecf9a5b971a7" kindref="member">MIN</ref>(xmax,<sp/>xArrayMax);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ymin<sp/>=<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1ad5006cb5a549050517c53228df1fc149" kindref="member">PosY</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>ymin<sp/>=<sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1ad935f1ff1a50822e317bdb321ce991ad" kindref="member">MAX</ref>(ymin,<sp/>0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>ymax<sp/>=<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1ad5006cb5a549050517c53228df1fc149" kindref="member">PosY</ref><sp/>+<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1af9cc038e3d47160b57d4e13a8da7fe73" kindref="member">SizeY</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>ymax<sp/>=<sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1adcd021ac91d43a62b2cdecf9a5b971a7" kindref="member">MIN</ref>(ymax,<sp/>yArrayMax);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>mask_val<sp/>=<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1ad50ffcfaec098fa8d8140058e3e756ce" kindref="member">MaskVal</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>mask_type<sp/>=<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1a827d1936cebf7e9ea7be1c1c63963989" kindref="member">MaskType</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pArray<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pArray-&gt;<ref refid="class_n_d_array_1a4769c6ebb8275710a58bd88dba086b71" kindref="member">ndims</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask_type<sp/>==<sp/>s_MASK_TYPE_REJECT)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ix<sp/>=<sp/>xmin;<sp/>ix<sp/>&lt;<sp/>xmax;<sp/>++ix)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">epicsType<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pArray-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>))[ix*this-&gt;arrayInfo.<ref refid="struct_n_d_array_info_1add324622eaee79a9798bb62333ec61b5" kindref="member">xStride</ref>]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">epicsType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mask_val);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask_type<sp/>==<sp/>s_MASK_TYPE_PASS)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ix<sp/>=<sp/>0;<sp/>ix<sp/>&lt;<sp/>xArrayMax;<sp/>++ix)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ix&lt;xmin)||(ix&gt;=xmax))<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">epicsType<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pArray-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>))[ix*this-&gt;arrayInfo.<ref refid="struct_n_d_array_info_1add324622eaee79a9798bb62333ec61b5" kindref="member">xStride</ref>]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">epicsType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mask_val);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pArray-&gt;<ref refid="class_n_d_array_1a4769c6ebb8275710a58bd88dba086b71" kindref="member">ndims</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask_type<sp/>==<sp/>s_MASK_TYPE_REJECT)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iy<sp/>=<sp/>ymin;<sp/>iy<sp/>&lt;<sp/>ymax;<sp/>++iy)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRow<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">epicsType<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pArray-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>)<sp/>+<sp/>iy*arrayInfo.<ref refid="struct_n_d_array_info_1a9cf39d95de0c7acd19dd287f919ac856" kindref="member">yStride</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(<sp/>ix<sp/>=<sp/>xmin;<sp/>ix<sp/>&lt;<sp/>xmax;<sp/>++ix)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRow[ix*this-&gt;arrayInfo.<ref refid="struct_n_d_array_info_1add324622eaee79a9798bb62333ec61b5" kindref="member">xStride</ref>]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">epicsType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mask_val);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask_type<sp/>==<sp/>s_MASK_TYPE_PASS)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iy<sp/>=<sp/>0;<sp/>iy<sp/>&lt;<sp/>yArrayMax;<sp/>++iy)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRow<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">epicsType<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pArray-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>)<sp/>+<sp/>iy*arrayInfo.<ref refid="struct_n_d_array_info_1a9cf39d95de0c7acd19dd287f919ac856" kindref="member">yStride</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(ix<sp/>=<sp/>0;<sp/>ix<sp/>&lt;<sp/>xArrayMax;<sp/>++ix)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>((ix&lt;xmin)||(ix&gt;=xmax))<sp/>||<sp/>((iy&lt;ymin)||(iy&gt;=ymax))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRow[ix*this-&gt;arrayInfo.<ref refid="struct_n_d_array_info_1add324622eaee79a9798bb62333ec61b5" kindref="member">xStride</ref>]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">epicsType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mask_val);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//(pArray<sp/>!=<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">asynStatus<sp/><ref refid="class_n_d_plugin_mask_1a02abff128aaa5a9a3baa5437ee5bf6bf" kindref="member">NDPluginMask::doMask</ref>(<ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pArray,<sp/><ref refid="struct_n_d_mask" kindref="compound">NDMask_t</ref><sp/>*pMask)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pArray<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(pArray-&gt;<ref refid="class_n_d_array_1ad3757e8e6a87bc8a5889f60a3d0cdb59" kindref="member">dataType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16aa4bc4803d2c1a0073497f0b4b4d2243f" kindref="member">NDInt8</ref>:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>doMaskT&lt;epicsInt8&gt;(pArray,<sp/>pMask);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16aa5f7c86d8f7853be5eb27c00481f93de" kindref="member">NDUInt8</ref>:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>doMaskT&lt;epicsUInt8&gt;(pArray,<sp/>pMask);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a92d371d7b532347d945fba329d356cd1" kindref="member">NDInt16</ref>:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>doMaskT&lt;epicsInt16&gt;(pArray,<sp/>pMask);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a174cfb9ba69c78761d4d9d25ec1bd8df" kindref="member">NDUInt16</ref>:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>doMaskT&lt;epicsUInt16&gt;(pArray,<sp/>pMask);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a460cbd8f43b3531669bc85cc3a4e9a80" kindref="member">NDInt32</ref>:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>doMaskT&lt;epicsInt32&gt;(pArray,<sp/>pMask);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a0492c093c2dcd6eebcaf15f57a2f359a" kindref="member">NDUInt32</ref>:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>doMaskT&lt;epicsUInt32&gt;(pArray,<sp/>pMask);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a9a2e64c19df36030bbd572addce4e835" kindref="member">NDFloat32</ref>:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>doMaskT&lt;epicsFloat32&gt;(pArray,<sp/>pMask);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a623c10faaa72cf1b79d5ab4916941298" kindref="member">NDFloat64</ref>:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>doMaskT&lt;epicsFloat64&gt;(pArray,<sp/>pMask);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_d_plugin_mask_1a2fac6f3d7e980a34157abef7a8fed837" kindref="member">NDPluginMask::processCallbacks</ref>(<ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pArray)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>with<sp/>the<sp/>mutex<sp/>already<sp/>locked.<sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>*<sp/>It<sp/>unlocks<sp/>it<sp/>during<sp/>long<sp/>calculations<sp/>when<sp/>private</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*<sp/>structures<sp/>don&apos;t<sp/>need<sp/>to<sp/>be<sp/>protected.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>use<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itemp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pOutput<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NDPluginMask::processCallbacks&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>base<sp/>class<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="class_n_d_plugin_driver_1a1aef91c358b7b8bde97fc1a01eb7c00d" kindref="member">NDPluginDriver::beginProcessCallbacks</ref>(pArray);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>plugin<sp/>only<sp/>works<sp/>with<sp/>1-D<sp/>or<sp/>2-D<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pArray-&gt;<ref refid="class_n_d_array_1a4769c6ebb8275710a58bd88dba086b71" kindref="member">ndims</ref><sp/>&lt;<sp/>1)<sp/>||<sp/>(pArray-&gt;<ref refid="class_n_d_array_1a4769c6ebb8275710a58bd88dba086b71" kindref="member">ndims</ref><sp/>&gt;<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>error,<sp/>number<sp/>of<sp/>array<sp/>dimensions<sp/>must<sp/>be<sp/>1<sp/>or<sp/>2\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functionName);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>always<sp/>keep<sp/>the<sp/>last<sp/>array<sp/>so<sp/>read()<sp/>can<sp/>use<sp/>it.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Release<sp/>previous<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classasyn_n_d_array_driver_1a6f5685f9951f6b3b897e85425b59ad69" kindref="member">pArrays</ref>[0])<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1a6f5685f9951f6b3b897e85425b59ad69" kindref="member">pArrays</ref>[0]-&gt;<ref refid="class_n_d_array_1a0c4c61ea4d44ce97db979d24305c996e" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>input<sp/>array<sp/>so<sp/>we<sp/>can<sp/>modify<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1a6f5685f9951f6b3b897e85425b59ad69" kindref="member">pArrays</ref>[0]<sp/>=<sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1ad3969854a37329ef4061cc560e9022dc" kindref="member">pNDArrayPool</ref>-&gt;<ref refid="class_n_d_array_pool_1a90dd764706fddbf69cde2fc498d4af9e" kindref="member">copy</ref>(pArray,<sp/>NULL,<sp/>1);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classasyn_n_d_array_driver_1a6f5685f9951f6b3b897e85425b59ad69" kindref="member">pArrays</ref>[0]<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>error.<sp/>Could<sp/>not<sp/>allocate<sp/>array<sp/>via<sp/>pNDArrayPool-&gt;copy.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functionName);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>pOutput<sp/>=<sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1a6f5685f9951f6b3b897e85425b59ad69" kindref="member">pArrays</ref>[0];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>information<sp/>about<sp/>the<sp/>array<sp/>needed<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>pOutput-&gt;<ref refid="class_n_d_array_1a47af97c0e2b8255d756207908f6b470d" kindref="member">getInfo</ref>(&amp;this-&gt;arrayInfo);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_n_d_plugin_mask_1ac4d58e4342df9d4c16ff3d30dfe27266" kindref="member">NDPluginMaskMaxSizeX</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)arrayInfo.<ref refid="struct_n_d_array_info_1a246cfc03b09db9de7685f5856617d377" kindref="member">xSize</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_n_d_plugin_mask_1a9b84a6c9a92bc16d066c29723bff2e92" kindref="member">NDPluginMaskMaxSizeY</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)arrayInfo.<ref refid="struct_n_d_array_info_1a8d8e4bbf0a527f1764e3286d871994dc" kindref="member">ySize</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>xArrayMax<sp/>=<sp/>(int)arrayInfo.<ref refid="struct_n_d_array_info_1a246cfc03b09db9de7685f5856617d377" kindref="member">xSize</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>yArrayMax<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)arrayInfo.<ref refid="struct_n_d_array_info_1a8d8e4bbf0a527f1764e3286d871994dc" kindref="member">ySize</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>the<sp/>masks<sp/>in<sp/>this<sp/>driver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mask<sp/>=<sp/>0;<sp/>mask<sp/>&lt;<sp/>this-&gt;maxMasks;<sp/>++mask)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>pMask<sp/>=<sp/>&amp;this-&gt;pMasks[mask];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(mask,<sp/><ref refid="class_n_d_plugin_mask_1a458abcc2d7098444752f9bdd1c6a01da" kindref="member">NDPluginMaskUse</ref>,<sp/>&amp;use);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_FLOW,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NDPluginMask::processCallbacks,<sp/>mask=%d,<sp/>use=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,<sp/>use);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!use)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMask<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Need<sp/>to<sp/>fetch<sp/>all<sp/>of<sp/>these<sp/>parameters<sp/>while<sp/>we<sp/>still<sp/>have<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(mask,<sp/><ref refid="class_n_d_plugin_mask_1aebaee0e1baa4e514c2a7eeb118052f47" kindref="member">NDPluginMaskPosX</ref>,<sp/><sp/>&amp;itemp);<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1a2688712e01c43ea6d393070dbbb49536" kindref="member">PosX</ref><sp/>=<sp/>itemp;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>pMask-&gt;<ref refid="struct_n_d_mask_1a2688712e01c43ea6d393070dbbb49536" kindref="member">PosX</ref><sp/>=<sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1ad935f1ff1a50822e317bdb321ce991ad" kindref="member">MAX</ref>(pMask-&gt;<ref refid="struct_n_d_mask_1a2688712e01c43ea6d393070dbbb49536" kindref="member">PosX</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>pMask-&gt;<ref refid="struct_n_d_mask_1a2688712e01c43ea6d393070dbbb49536" kindref="member">PosX</ref><sp/>=<sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1adcd021ac91d43a62b2cdecf9a5b971a7" kindref="member">MIN</ref>(pMask-&gt;<ref refid="struct_n_d_mask_1a2688712e01c43ea6d393070dbbb49536" kindref="member">PosX</ref>,<sp/>xArrayMax-1);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(mask,<sp/><ref refid="class_n_d_plugin_mask_1a24a660643cc7f39c1c2043d04a3bd6f2" kindref="member">NDPluginMaskSizeX</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>&amp;itemp);<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1acd851b71611e59af2b1297be2b27f9d9" kindref="member">SizeX</ref><sp/>=<sp/>itemp;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>pMask-&gt;<ref refid="struct_n_d_mask_1acd851b71611e59af2b1297be2b27f9d9" kindref="member">SizeX</ref><sp/>=<sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1ad935f1ff1a50822e317bdb321ce991ad" kindref="member">MAX</ref>(pMask-&gt;<ref refid="struct_n_d_mask_1acd851b71611e59af2b1297be2b27f9d9" kindref="member">SizeX</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>pMask-&gt;<ref refid="struct_n_d_mask_1acd851b71611e59af2b1297be2b27f9d9" kindref="member">SizeX</ref><sp/>=<sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1adcd021ac91d43a62b2cdecf9a5b971a7" kindref="member">MIN</ref>(pMask-&gt;<ref refid="struct_n_d_mask_1acd851b71611e59af2b1297be2b27f9d9" kindref="member">SizeX</ref>,<sp/>xArrayMax-(pMask-&gt;<ref refid="struct_n_d_mask_1a2688712e01c43ea6d393070dbbb49536" kindref="member">PosX</ref>));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pArray-&gt;<ref refid="class_n_d_array_1a4769c6ebb8275710a58bd88dba086b71" kindref="member">ndims</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(mask,<sp/><ref refid="class_n_d_plugin_mask_1a1a1d2fccd49497f56ef7e90a2ebb84a1" kindref="member">NDPluginMaskPosY</ref>,<sp/><sp/>&amp;itemp);<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1ad5006cb5a549050517c53228df1fc149" kindref="member">PosY</ref><sp/>=<sp/>itemp;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMask-&gt;<ref refid="struct_n_d_mask_1ad5006cb5a549050517c53228df1fc149" kindref="member">PosY</ref><sp/>=<sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1ad935f1ff1a50822e317bdb321ce991ad" kindref="member">MAX</ref>(pMask-&gt;<ref refid="struct_n_d_mask_1ad5006cb5a549050517c53228df1fc149" kindref="member">PosY</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMask-&gt;<ref refid="struct_n_d_mask_1ad5006cb5a549050517c53228df1fc149" kindref="member">PosY</ref><sp/>=<sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1adcd021ac91d43a62b2cdecf9a5b971a7" kindref="member">MIN</ref>(pMask-&gt;<ref refid="struct_n_d_mask_1ad5006cb5a549050517c53228df1fc149" kindref="member">PosY</ref>,<sp/>yArrayMax-1);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(mask,<sp/><ref refid="class_n_d_plugin_mask_1a76da8ab4836c921db9d751fb1b25a98a" kindref="member">NDPluginMaskSizeY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>&amp;itemp);<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1af9cc038e3d47160b57d4e13a8da7fe73" kindref="member">SizeY</ref><sp/>=<sp/>itemp;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMask-&gt;<ref refid="struct_n_d_mask_1af9cc038e3d47160b57d4e13a8da7fe73" kindref="member">SizeY</ref><sp/>=<sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1ad935f1ff1a50822e317bdb321ce991ad" kindref="member">MAX</ref>(pMask-&gt;<ref refid="struct_n_d_mask_1af9cc038e3d47160b57d4e13a8da7fe73" kindref="member">SizeY</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMask-&gt;<ref refid="struct_n_d_mask_1af9cc038e3d47160b57d4e13a8da7fe73" kindref="member">SizeY</ref><sp/>=<sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1adcd021ac91d43a62b2cdecf9a5b971a7" kindref="member">MIN</ref>(pMask-&gt;<ref refid="struct_n_d_mask_1af9cc038e3d47160b57d4e13a8da7fe73" kindref="member">SizeY</ref>,<sp/>yArrayMax-(pMask-&gt;<ref refid="struct_n_d_mask_1ad5006cb5a549050517c53228df1fc149" kindref="member">PosY</ref>));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(mask,<sp/><ref refid="class_n_d_plugin_mask_1a8bf637940892478e5bf0d03efd296b6c" kindref="member">NDPluginMaskVal</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itemp);<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1ad50ffcfaec098fa8d8140058e3e756ce" kindref="member">MaskVal</ref><sp/>=<sp/>itemp;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(mask,<sp/><ref refid="class_n_d_plugin_mask_1ababf9631f72c26c5f1ad80775846fc14" kindref="member">NDPluginMaskType</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itemp);<sp/>pMask-&gt;<ref refid="struct_n_d_mask_1a827d1936cebf7e9ea7be1c1c63963989" kindref="member">MaskType</ref><sp/>=<sp/>itemp;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>any<sp/>changed<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(mask,<sp/><ref refid="class_n_d_plugin_mask_1aebaee0e1baa4e514c2a7eeb118052f47" kindref="member">NDPluginMaskPosX</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pMask-&gt;<ref refid="struct_n_d_mask_1a2688712e01c43ea6d393070dbbb49536" kindref="member">PosX</ref>));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(mask,<sp/><ref refid="class_n_d_plugin_mask_1a24a660643cc7f39c1c2043d04a3bd6f2" kindref="member">NDPluginMaskSizeX</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pMask-&gt;<ref refid="struct_n_d_mask_1acd851b71611e59af2b1297be2b27f9d9" kindref="member">SizeX</ref>));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pArray-&gt;<ref refid="class_n_d_array_1a4769c6ebb8275710a58bd88dba086b71" kindref="member">ndims</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(mask,<sp/><ref refid="class_n_d_plugin_mask_1a1a1d2fccd49497f56ef7e90a2ebb84a1" kindref="member">NDPluginMaskPosY</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pMask-&gt;<ref refid="struct_n_d_mask_1ad5006cb5a549050517c53228df1fc149" kindref="member">PosY</ref>));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(mask,<sp/><ref refid="class_n_d_plugin_mask_1a76da8ab4836c921db9d751fb1b25a98a" kindref="member">NDPluginMaskSizeY</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pMask-&gt;<ref refid="struct_n_d_mask_1af9cc038e3d47160b57d4e13a8da7fe73" kindref="member">SizeY</ref>));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>with<sp/>the<sp/>lock<sp/>taken,<sp/>and<sp/>it<sp/>must<sp/>be<sp/>set<sp/>when<sp/>we<sp/>exit.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>following<sp/>code<sp/>can<sp/>be<sp/>exected<sp/>without<sp/>the<sp/>mutex<sp/>because<sp/>we<sp/>are<sp/>not<sp/>accessing<sp/>memory</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>other<sp/>threads<sp/>can<sp/>access.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>this-&gt;<ref refid="class_n_d_plugin_mask_1a02abff128aaa5a9a3baa5437ee5bf6bf" kindref="member">doMask</ref>(pOutput,<sp/>pMask);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(this-&gt;pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>doMask<sp/>(Mask=%d)<sp/>failed.<sp/>status=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functionName,<sp/>mask,<sp/>status);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks(mask);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>attributes<sp/>for<sp/>this<sp/>driver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1a7492ba858d885e2ba226a1c7ef9dcf72" kindref="member">getAttributes</ref>(this-&gt;<ref refid="classasyn_n_d_array_driver_1a6f5685f9951f6b3b897e85425b59ad69" kindref="member">pArrays</ref>[0]-&gt;<ref refid="classasyn_n_d_array_driver_1a7bed3ca3a144124eb31053eeecc990e9" kindref="member">pAttributeList</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>any<sp/>clients<sp/>who<sp/>have<sp/>registered<sp/>for<sp/>NDArray<sp/>callbacks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>doCallbacksGenericPointer(this-&gt;<ref refid="classasyn_n_d_array_driver_1a6f5685f9951f6b3b897e85425b59ad69" kindref="member">pArrays</ref>[0],<sp/><ref refid="classasyn_n_d_array_driver_1a2b2fe51fba9a6ee4146813eac0c47fd1" kindref="member">NDArrayData</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><ref refid="class_n_d_plugin_mask_1ac058f6a4a1eca52909f588cf61de8b3b" kindref="member">NDPluginMask::NDPluginMask</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queueSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockingCallbacks,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*NDArrayPort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NDArrayAddr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxMasks,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invoke<sp/>the<sp/>base<sp/>class<sp/>constructor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_n_d_plugin_driver" kindref="compound">NDPluginDriver</ref>(portName,<sp/>queueSize,<sp/>blockingCallbacks,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NDArrayPort,<sp/>NDArrayAddr,<sp/>maxMasks,<sp/>maxBuffers,<sp/>maxMemory,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynGenericPointerMask,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynGenericPointerMask,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASYN_MULTIDEVICE,<sp/>1,<sp/>priority,<sp/>stackSize,<sp/>1)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NDPluginMask&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;maxMasks<sp/>=<sp/>maxMasks;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pMasks<sp/>=<sp/>(<ref refid="struct_n_d_mask" kindref="compound">NDMask_t</ref><sp/>*)callocMustSucceed(maxMasks,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*this-&gt;pMasks),<sp/>functionName);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_dn_e_d_plugin_mask_8h_1a21542c685768057a04bca1a51fcc29ea" kindref="member">NDPluginMaskNameString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/>&amp;NDPluginMaskName);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_dn_e_d_plugin_mask_8h_1a17afdfceef4b6547dd1b85dd7a044986" kindref="member">NDPluginMaskUseString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;NDPluginMaskUse);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_dn_e_d_plugin_mask_8h_1a5bb4591a23cb3f6d51b0105dfba3c34b" kindref="member">NDPluginMaskMaxSizeXString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;NDPluginMaskMaxSizeX);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_dn_e_d_plugin_mask_8h_1a119b758b612661b414336a359b71426b" kindref="member">NDPluginMaskMaxSizeYString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;NDPluginMaskMaxSizeY);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_dn_e_d_plugin_mask_8h_1a0488c31ede849fb0b07830f2cace698e" kindref="member">NDPluginMaskPosXString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;NDPluginMaskPosX);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_dn_e_d_plugin_mask_8h_1af78aa977b2888a855dadfeb5106729f0" kindref="member">NDPluginMaskPosYString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;NDPluginMaskPosY);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_dn_e_d_plugin_mask_8h_1af56b7b9f08631a0409ac05652c399f2b" kindref="member">NDPluginMaskSizeXString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;NDPluginMaskSizeX);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_dn_e_d_plugin_mask_8h_1a4440caa83baedca13bb33803d9094d02" kindref="member">NDPluginMaskSizeYString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;NDPluginMaskSizeY);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_dn_e_d_plugin_mask_8h_1a22deb44dedb74459e0a65666840a2144" kindref="member">NDPluginMaskValString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;NDPluginMaskVal);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="_a_dn_e_d_plugin_mask_8h_1a86bbec28a1ad6d40454c7dc1c8bfaabe" kindref="member">NDPluginMaskTypeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/>&amp;NDPluginMaskType);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>xArrayMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>yArrayMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>plugin<sp/>type<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(NDPluginDriverPluginType,<sp/></highlight><highlight class="stringliteral">&quot;NDPluginMask&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>ArrayCallbacks<sp/>by<sp/>default<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(NDArrayCallbacks,<sp/>1);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>connect<sp/>to<sp/>the<sp/>array<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>connectToArrayPort();</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1a6783ec05f984005f2524afc16816f8aa" kindref="member">NDMaskConfigure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queueSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockingCallbacks,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*NDArrayPort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NDArrayAddr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxMasks,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_n_d_plugin_mask" kindref="compound">NDPluginMask</ref>(portName,<sp/>queueSize,<sp/>blockingCallbacks,<sp/>NDArrayPort,<sp/>NDArrayAddr,<sp/>maxMasks,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxBuffers,<sp/>maxMemory,<sp/>priority,<sp/>stackSize);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynSuccess);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EPICS<sp/>iocsh<sp/>shell<sp/>commands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg0<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;portName&quot;</highlight><highlight class="normal">,iocshArgString};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg1<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;frame<sp/>queue<sp/>size&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg2<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;blocking<sp/>callbacks&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg3<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;NDArrayPort&quot;</highlight><highlight class="normal">,iocshArgString};</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg4<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;NDArrayAddr&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg5<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;maxMasks&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg6<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;maxBuffers&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg7<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;maxMemory&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg8<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;priority&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>initArg9<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;stackSize&quot;</highlight><highlight class="normal">,iocshArgInt};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>initArgs[]<sp/>=<sp/>{&amp;initArg0,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg1,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg2,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg3,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg4,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg5,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg6,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg7,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg8,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;initArg9};</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshFuncDef<sp/>initFuncDef<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;NDMaskConfigure&quot;</highlight><highlight class="normal">,10,initArgs};</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initCallFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArgBuf<sp/>*args)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1a6783ec05f984005f2524afc16816f8aa" kindref="member">NDMaskConfigure</ref>(args[0].sval,<sp/>args[1].ival,<sp/>args[2].ival,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[3].sval,<sp/>args[4].ival,<sp/>args[5].ival,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[6].ival,<sp/>args[7].ival,<sp/>args[8].ival,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[9].ival);</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_dn_e_d_plugin_mask_8cpp_1a2ffe71e38675ccaf476b349eb28f3e12" kindref="member">NDMaskRegister</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>iocshRegister(&amp;initFuncDef,initCallFunc);</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="_a_dn_e_d_plugin_mask_8cpp_1ae6e531946cd2b1adeef871c9688128c5" kindref="member">epicsExportRegistrar</ref>(<ref refid="_a_dn_e_d_plugin_mask_8cpp_1a2ffe71e38675ccaf476b349eb28f3e12" kindref="member">NDMaskRegister</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDPluginMask.cpp"/>
  </compounddef>
</doxygen>
