<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="rate_test_8cpp" kind="file" language="C++">
    <compoundname>rateTest.cpp</compoundname>
    <includes local="yes">atcore.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">time.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/rateTest.cpp</label>
        <link refid="rate_test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>atcore.h</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="rate_test_8cpp_1aca34d8a3d1d7af9c1ba5e1e9ba22c4cd" prot="public" static="no">
        <name>EXTRACTLOWPACKED</name>
        <param><defname>SourcePtr</defname></param>
        <initializer>( (SourcePtr[0] &lt;&lt; 4) + (SourcePtr[1] &amp; 0xF) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/rateTest.cpp" line="8" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/rateTest.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_test_8cpp_1a0e0b893394aa295dff1809b37ebcba9d" prot="public" static="no">
        <name>EXTRACTHIGHPACKED</name>
        <param><defname>SourcePtr</defname></param>
        <initializer>( (SourcePtr[2] &lt;&lt; 4) + (SourcePtr[1] &gt;&gt; 4) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/rateTest.cpp" line="9" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/rateTest.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_test_8cpp_1aac028f4c15ac7f78a44be5db76cfbec7" prot="public" static="no">
        <name>NUM_BUFFERS</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/rateTest.cpp" line="11" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/rateTest.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="rate_test_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/rateTest.cpp" line="13" column="5" bodyfile="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/rateTest.cpp" bodystart="13" bodyend="147"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;atcore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXTRACTLOWPACKED(SourcePtr)<sp/>(<sp/>(SourcePtr[0]<sp/>&lt;&lt;<sp/>4)<sp/>+<sp/>(SourcePtr[1]<sp/>&amp;<sp/>0xF)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXTRACTHIGHPACKED(SourcePtr)<sp/>(<sp/>(SourcePtr[2]<sp/>&lt;&lt;<sp/>4)<sp/>+<sp/>(SourcePtr[1]<sp/>&gt;&gt;<sp/>4)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_BUFFERS<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="listdevices_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_retCode;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>AT_64<sp/>iNumberDevices<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>AT_H<sp/>Hndl;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frameRate=48.0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxFrameRate;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>transferRate;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames=320;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exposureTime<sp/>=<sp/>0.001;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>AT_64<sp/>imageSizeBytes;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufferSize;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>AT_U8<sp/>**buffers;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>AT_U8<sp/>*image;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>time_t<sp/>tStart,<sp/>tEnd;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>3)<sp/>exposureTime<sp/>=<sp/>atof(argv[3]);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>2)<sp/>frameRate<sp/><sp/><sp/><sp/>=<sp/>atof(argv[2]);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>1)<sp/>numFrames<sp/><sp/><sp/><sp/>=<sp/>atoi(argv[1]);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;frameRate=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>frameRate<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>numFrames=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>numFrames<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initialising<sp/>...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_InitialiseLibrary();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>initialising<sp/>library,<sp/>error=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i_retCode<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>AT_GetInt(AT_HANDLE_SYSTEM,<sp/>L</highlight><highlight class="stringliteral">&quot;Device<sp/>Count&quot;</highlight><highlight class="normal">,<sp/>&amp;iNumberDevices);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iNumberDevices<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>cameras<sp/>detected,<sp/>error=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i_retCode<sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_Open(0,<sp/>&amp;Hndl);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>condition,<sp/>could<sp/>not<sp/>initialise<sp/>camera,<sp/>error=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i_retCode<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>pixel<sp/>Encoding<sp/>to<sp/>the<sp/>desired<sp/>settings<sp/>Mono16<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_SetEnumeratedString(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;PixelEncoding&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;Mono16&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>condition,<sp/>could<sp/>not<sp/>set<sp/>pixel<sp/>encoding<sp/>to<sp/>Mono16&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>global<sp/>shutter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_SetEnumeratedString(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;ElectronicShutteringMode&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;Global&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>condition,<sp/>could<sp/>not<sp/>set<sp/>shutter<sp/>mode<sp/>to<sp/>Global&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>pixel<sp/>Readout<sp/>Rate<sp/>to<sp/>fastest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_SetEnumeratedString(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;PixelReadoutRate&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;280<sp/>MHz&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>condition,<sp/>could<sp/>not<sp/>set<sp/>readout<sp/>rate<sp/>to<sp/>280<sp/>MHz&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>pre-amp<sp/>gain<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_SetEnumeratedString(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;SimplePreAmpGainControl&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;16-bit<sp/>(low<sp/>noise<sp/>&amp;<sp/>high<sp/>well<sp/>capacity)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>condition,<sp/>could<sp/>not<sp/>set<sp/>pre-amp<sp/>gain<sp/>to<sp/>16-bit&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>Cycle<sp/>mode<sp/>to<sp/>fixed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_SetEnumeratedString(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;CycleMode&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;Fixed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>condition,<sp/>could<sp/>not<sp/>set<sp/>cycle<sp/>mode<sp/>to<sp/>Fixed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>frame<sp/>count<sp/>to<sp/>numFrames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_SetInt(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;FrameCount&quot;</highlight><highlight class="normal">,<sp/>numFrames);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>condition,<sp/>could<sp/>not<sp/>set<sp/>frame<sp/>count=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>numFrames<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>exposure<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_SetFloat(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;Exposure<sp/>Time&quot;</highlight><highlight class="normal">,<sp/>exposureTime);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>condition,<sp/>could<sp/>not<sp/>set<sp/>exposure<sp/>time<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>exposureTime<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>frame<sp/>rate<sp/>to<sp/>frameRate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_GetFloatMax(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;FrameRate&quot;</highlight><highlight class="normal">,<sp/>&amp;maxFrameRate);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Exposure<sp/>time=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>exposureTime<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>maximum<sp/>frame<sp/>rate=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>maxFrameRate<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_SetFloat(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;FrameRate&quot;</highlight><highlight class="normal">,<sp/>frameRate);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>condition,<sp/>could<sp/>not<sp/>set<sp/>frame<sp/>rate=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>frameRate<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>i_retCode<sp/>=<sp/>AT_GetFloat(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;FrameRate&quot;</highlight><highlight class="normal">,<sp/>&amp;frameRate);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>actual<sp/>frame<sp/>rate=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>frameRate<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>required<sp/>to<sp/>store<sp/>one<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>AT_GetInt(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;Image<sp/>Size<sp/>Bytes&quot;</highlight><highlight class="normal">,<sp/>&amp;imageSizeBytes);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>bufferSize<sp/>=<sp/>(int)(imageSizeBytes);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>and<sp/>queue<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>buffers<sp/>=<sp/>(AT_U8<sp/>**)calloc(<ref refid="rate_test_8cpp_1aac028f4c15ac7f78a44be5db76cfbec7" kindref="member">NUM_BUFFERS</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(AT_U8<sp/>*));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="rate_test_8cpp_1aac028f4c15ac7f78a44be5db76cfbec7" kindref="member">NUM_BUFFERS</ref>;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffers[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>(AT_U8*)_aligned_malloc(bufferSize,<sp/>8);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>8<sp/>byte<sp/>aligned<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>posix_memalign((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;buffers[i],<sp/>8,<sp/>bufferSize);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>i_retCode<sp/>=<sp/>AT_QueueBuffer(Hndl,<sp/>buffers[i],<sp/>bufferSize);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>i_retCode<sp/>=<sp/>AT_GetFloat(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;MaxInterfaceTransferRate&quot;</highlight><highlight class="normal">,<sp/>&amp;transferRate);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Max.<sp/>interface<sp/>transfer<sp/>rate=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>transferRate<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>acquisition<sp/>...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>tStart<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Start<sp/>the<sp/>Acquisition<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>AT_Command(Hndl,<sp/>L</highlight><highlight class="stringliteral">&quot;Acquisition<sp/>Start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;numFrames;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>i_retCode<sp/>=<sp/>AT_WaitBuffer(Hndl,<sp/>&amp;image,<sp/><sp/>&amp;bufferSize,<sp/>2000);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>tEnd<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>condition,<sp/>failure<sp/>return<sp/>from<sp/>AT_WaitBuffer=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i_retCode<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>frame<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>time=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tEnd-tStart<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>i_retCode<sp/>=<sp/>AT_QueueBuffer(Hndl,<sp/>image,<sp/>bufferSize);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_retCode<sp/>!=<sp/>AT_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>condition,<sp/>failure<sp/>return<sp/>from<sp/>AT_QueueBuffer=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i_retCode<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>AT_Close(Hndl);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>AT_FinaliseLibrary();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADAndor3/andor3App/src/rateTest.cpp"/>
  </compounddef>
</doxygen>
