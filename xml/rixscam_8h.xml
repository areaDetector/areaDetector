<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="rixscam_8h" kind="file" language="C++">
    <compoundname>rixscam.h</compoundname>
    <includes local="no">epicsEvent.h</includes>
    <includes refid="_a_d_driver_8h" local="yes">ADDriver.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">set</includes>
    <includes local="no">sstream</includes>
    <includes local="no">assert.h</includes>
    <includes local="yes">xcmclm.h</includes>
    <includedby refid="rixscam_8cpp" local="yes">/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.cpp</includedby>
    <incdepgraph>
      <node id="17">
        <label>ADCoreAPI.h</label>
        <link refid="_a_d_core_a_p_i_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ADCoreVersion.h</label>
        <link refid="_a_d_core_version_8h"/>
      </node>
      <node id="3">
        <label>ADDriver.h</label>
        <link refid="_a_d_driver_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Codec.h</label>
        <link refid="_codec_8h"/>
      </node>
      <node id="10">
        <label>NDArray.h</label>
        <link refid="_n_d_array_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>NDAttribute.h</label>
        <link refid="_n_d_attribute_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>NDAttributeList.h</label>
        <link refid="_n_d_attribute_list_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>asynNDArrayDriver.h</label>
        <link refid="asyn_n_d_array_driver_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h</label>
        <link refid="rixscam_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>assert.h</label>
      </node>
      <node id="16">
        <label>asynDriver.h</label>
      </node>
      <node id="9">
        <label>asynPortDriver.h</label>
      </node>
      <node id="12">
        <label>ellLib.h</label>
      </node>
      <node id="2">
        <label>epicsEvent.h</label>
      </node>
      <node id="5">
        <label>epicsMessageQueue.h</label>
      </node>
      <node id="8">
        <label>epicsMutex.h</label>
      </node>
      <node id="6">
        <label>epicsTime.h</label>
      </node>
      <node id="4">
        <label>epicsTypes.h</label>
      </node>
      <node id="18">
        <label>epicsVersion.h</label>
      </node>
      <node id="22">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>set</label>
      </node>
      <node id="24">
        <label>sstream</label>
      </node>
      <node id="15">
        <label>stdio.h</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="23">
        <label>vector</label>
      </node>
      <node id="26">
        <label>xcmclm.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.cpp</label>
        <link refid="rixscam_8cpp"/>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h</label>
        <link refid="rixscam_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_parameter_base" prot="public">ParameterBase</innerclass>
    <innerclass refid="class_read_only_parameter" prot="public">ReadOnlyParameter</innerclass>
    <innerclass refid="class_parameter" prot="public">Parameter</innerclass>
    <innerclass refid="class_multi_parameter" prot="public">MultiParameter</innerclass>
    <innerclass refid="classxcam_camera" prot="public">xcamCamera</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="rixscam_8h_1aec93e83855ac17c3c25c55c37ca186dd" prot="public" static="no">
        <name>BYTE</name>
        <initializer>unsigned char</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" line="10" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rixscam_8h_1afa9603dc411318fe13fb50cc4e507826" prot="public" static="no">
        <name>_STRING</name>
        <param><defname>x</defname></param>
        <initializer>#x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" line="13" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rixscam_8h_1a9e9c7019565ee800abaf5fef300b73db" prot="public" static="no">
        <name>STRING</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="rixscam_8h_1afa9603dc411318fe13fb50cc4e507826" kindref="member">_STRING</ref>(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" line="14" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rixscam_8h_1aadbd5c67dfc4a21ec4186fc08c8ce8a5" prot="public" static="no">
        <name>__Note__</name>
        <param><defname>x</defname></param>
        <initializer>message(__FILE__ &quot;(&quot; <ref refid="rixscam_8h_1a9e9c7019565ee800abaf5fef300b73db" kindref="member">STRING</ref>(__LINE__) &quot;) : Note &gt;&gt;&gt;&gt; &quot; x )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" line="15" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rixscam_8h_1a06d35c9e855820d455413c75704317d2" prot="public" static="no">
        <name>FIRST_XCAM_CAMERA_PARAM</name>
        <initializer>SoftVersion</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" line="352" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rixscam_8h_1afdcb5cac7ef16f9e4da6f9848c19248e" prot="public" static="no">
        <name>LAST_XCAM_CAMERA_PARAM</name>
        <initializer>SeqFilename</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" line="357" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rixscam_8h_1ac204b8e9428e6527811492cf772832ff" prot="public" static="no">
        <name>NUM_XCAM_CAMERA_PARAMS</name>
        <initializer>((int)(&amp;<ref refid="rixscam_8h_1afdcb5cac7ef16f9e4da6f9848c19248e" kindref="member">LAST_XCAM_CAMERA_PARAM</ref> - &amp;<ref refid="rixscam_8h_1a06d35c9e855820d455413c75704317d2" kindref="member">FIRST_XCAM_CAMERA_PARAM</ref> + 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" line="537" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h" bodystart="537" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;epicsEvent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_d_driver_8h" kindref="compound">ADDriver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="rixscam_8h_1aec93e83855ac17c3c25c55c37ca186dd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTE<sp/>unsigned<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xcmclm.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="rixscam_8h_1afa9603dc411318fe13fb50cc4e507826" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_STRING(x)<sp/>#x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="rixscam_8h_1a9e9c7019565ee800abaf5fef300b73db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRING(x)<sp/>_STRING(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="rixscam_8h_1aadbd5c67dfc4a21ec4186fc08c8ce8a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Note__(x)<sp/>message(__FILE__<sp/>&quot;(&quot;<sp/>STRING(__LINE__)<sp/>&quot;)<sp/>:<sp/>Note<sp/>&gt;&gt;&gt;&gt;<sp/>&quot;<sp/>x<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>was<sp/>included<sp/>from<sp/>Parameter.tlh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_parameter_base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_parameter_base" kindref="compound">ParameterBase</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="class_parameter_base_1a6b42c9d51638e2c70d33da47d0b1ab11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><ref refid="class_parameter_base_1a6b42c9d51638e2c70d33da47d0b1ab11" kindref="member">Initialize</ref>(asynPortDriver&amp;<sp/>driver)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25" refid="class_parameter_base_1a15d9d92d22ffa82846b30d8b59018085" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_parameter_base_1a15d9d92d22ffa82846b30d8b59018085" kindref="member">ParameterBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_parameter_base_1ab97e7d37cfc5230773ef4ac82e766a07" kindref="member">_name</ref>(name)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_parameter_base_1ac8a4e3bf271644c5a26f7c4b450b5ace" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynStatus<sp/><ref refid="class_parameter_base_1ac8a4e3bf271644c5a26f7c4b450b5ace" kindref="member">ParameterBase::SetParameter</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parameterIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>epicsInt32<sp/>value)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver.setIntegerParam(parameterIndex,<sp/>value);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_parameter_base_1ac07b71d11b4feff09d03a37feb7d6ffb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynStatus<sp/><ref refid="class_parameter_base_1ac8a4e3bf271644c5a26f7c4b450b5ace" kindref="member">ParameterBase::SetParameter</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parameterIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>epicsFloat64<sp/>value)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver.setDoubleParam(parameterIndex,<sp/>value);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_parameter_base_1a636d6f29870d0098d40b26c6ecba0f70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynStatus<sp/><ref refid="class_parameter_base_1a636d6f29870d0098d40b26c6ecba0f70" kindref="member">ParameterBase::GetParameter</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parameterIndex,<sp/>epicsInt32&amp;<sp/>value)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver.getIntegerParam(parameterIndex,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_parameter_base_1a4231bea23b8a736771fcb55d09bfa9d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynStatus<sp/><ref refid="class_parameter_base_1a636d6f29870d0098d40b26c6ecba0f70" kindref="member">ParameterBase::GetParameter</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parameterIndex,<sp/>epicsFloat64&amp;<sp/>value)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver.getDoubleParam(parameterIndex,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_parameter_base_1ab97e7d37cfc5230773ef4ac82e766a07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_parameter_base_1ab97e7d37cfc5230773ef4ac82e766a07" kindref="member">_name</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="56" refid="class_read_only_parameter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_read_only_parameter" kindref="compound">ReadOnlyParameter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_parameter_base" kindref="compound">ParameterBase</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="class_read_only_parameter_1a269680abc3b8736d2d93d043b0c31998" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a269680abc3b8736d2d93d043b0c31998" kindref="member">ReadOnlyParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>internalIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>defaultValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scale)<sp/>:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_parameter_base" kindref="compound">ParameterBase</ref>(name),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1acc6ddee63fde558da69a688bd4903630" kindref="member">_internalIndex</ref>(internalIndex),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a2076e00d3140de568192ed5c8d0fb33d" kindref="member">_parameterIndex</ref>(0),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref>(defaultValue),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a5427b5421ec85d7544604bd4ffb608d3" kindref="member">_scale</ref>(scale)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_read_only_parameter_1ad888d22d29ada9fe358f144f2aaa03c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1ad888d22d29ada9fe358f144f2aaa03c2" kindref="member">ReadOnlyParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>internalIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>defaultValue)<sp/>:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_parameter_base" kindref="compound">ParameterBase</ref>(name),</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1acc6ddee63fde558da69a688bd4903630" kindref="member">_internalIndex</ref>(internalIndex),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a2076e00d3140de568192ed5c8d0fb33d" kindref="member">_parameterIndex</ref>(0),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref>(defaultValue),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a5427b5421ec85d7544604bd4ffb608d3" kindref="member">_scale</ref>((T)1)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_read_only_parameter_1a86c039cecaca3299cc3e9e172c25ab3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a86c039cecaca3299cc3e9e172c25ab3d" kindref="member">ReadOnlyParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>internalIndex)<sp/>:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_parameter_base" kindref="compound">ParameterBase</ref>(name),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1acc6ddee63fde558da69a688bd4903630" kindref="member">_internalIndex</ref>(internalIndex),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a2076e00d3140de568192ed5c8d0fb33d" kindref="member">_parameterIndex</ref>(0),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref>((T)0),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a5427b5421ec85d7544604bd4ffb608d3" kindref="member">_scale</ref>((T)1)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_read_only_parameter_1a221b4d5008452216acbef71e6d911e84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><ref refid="class_read_only_parameter_1a221b4d5008452216acbef71e6d911e84" kindref="member">Initialize</ref>(asynPortDriver&amp;<sp/>driver)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/><ref refid="class_read_only_parameter_1a99809d5bca0211c7a39a31a62d1478b5" kindref="member">Create</ref>(driver,<sp/><ref refid="class_parameter_base_1ab97e7d37cfc5230773ef4ac82e766a07" kindref="member">_name</ref>,<sp/><ref refid="class_read_only_parameter_1a2076e00d3140de568192ed5c8d0fb33d" kindref="member">_parameterIndex</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_parameter_base_1ac8a4e3bf271644c5a26f7c4b450b5ace" kindref="member">SetParameter</ref>(driver,<sp/><ref refid="class_read_only_parameter_1a2076e00d3140de568192ed5c8d0fb33d" kindref="member">_parameterIndex</ref>,<sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_read_only_parameter_1aaa7b5bbf765d968b1e9b3f9dbbff5f7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_read_only_parameter_1aaa7b5bbf765d968b1e9b3f9dbbff5f7a" kindref="member">Value</ref>(asynPortDriver&amp;<sp/>driver)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>local<sp/>value<sp/>is<sp/>definitive<sp/>for<sp/>a<sp/>read-only<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>implement<sp/>SetValue<sp/>even<sp/>for<sp/>read-only<sp/>parameters,<sp/>because<sp/>the<sp/>&apos;read<sp/>only&apos;<sp/>is<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>point<sp/>of<sp/>view<sp/>of<sp/>the<sp/>outside<sp/>world;<sp/>we<sp/>still<sp/>have<sp/>to<sp/>set<sp/>the<sp/>parameter<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_read_only_parameter_1ace2a6e98cee5f85719781f402037f542" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><ref refid="class_read_only_parameter_1ace2a6e98cee5f85719781f402037f542" kindref="member">SetValue</ref>(asynPortDriver&amp;<sp/>driver,<sp/>T<sp/>newValue)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newValue<sp/>==<sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref><sp/>=<sp/>newValue;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_parameter_base_1ac8a4e3bf271644c5a26f7c4b450b5ace" kindref="member">SetParameter</ref>(driver,<sp/><ref refid="class_read_only_parameter_1a2076e00d3140de568192ed5c8d0fb33d" kindref="member">_parameterIndex</ref>,<sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_read_only_parameter_1a8438f42e3fa620de26252c73441885f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter_1a8438f42e3fa620de26252c73441885f0" kindref="member">ScaledValue</ref>(asynPortDriver&amp;<sp/>driver)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((<ref refid="class_read_only_parameter_1aaa7b5bbf765d968b1e9b3f9dbbff5f7a" kindref="member">Value</ref>(driver)<sp/>+<sp/><ref refid="class_read_only_parameter_1a5427b5421ec85d7544604bd4ffb608d3" kindref="member">_scale</ref><sp/>/<sp/>(T)2)<sp/>/<sp/><ref refid="class_read_only_parameter_1a5427b5421ec85d7544604bd4ffb608d3" kindref="member">_scale</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_read_only_parameter_1a58a3578a8da8d4597820c3da36132b52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter_1a58a3578a8da8d4597820c3da36132b52" kindref="member">SetValueAtMinimum</ref>(asynPortDriver&amp;<sp/>driver,<sp/>T<sp/>minimumValue)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>currentValue<sp/>=<sp/><ref refid="class_read_only_parameter_1aaa7b5bbf765d968b1e9b3f9dbbff5f7a" kindref="member">Value</ref>(driver);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentValue<sp/>&gt;=<sp/>minimumValue)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>value<sp/>is<sp/>already<sp/>&gt;=<sp/>the<sp/>required<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>minimum<sp/>multiple<sp/>of<sp/>_scale<sp/>that&apos;s<sp/>&gt;=<sp/>minimumVaue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaled<sp/>=<sp/>(int)ceil(minimumValue<sp/>/<sp/><ref refid="class_read_only_parameter_1a5427b5421ec85d7544604bd4ffb608d3" kindref="member">_scale</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>newValue<sp/>=<sp/>scaled<sp/>*<sp/><ref refid="class_read_only_parameter_1a5427b5421ec85d7544604bd4ffb608d3" kindref="member">_scale</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(newValue<sp/>&gt;=<sp/>minimumValue);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1ace2a6e98cee5f85719781f402037f542" kindref="member">SetValue</ref>(driver,<sp/>newValue);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_read_only_parameter_1adda70bf663987278dffc474e0f7f0b48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><ref refid="class_read_only_parameter_1adda70bf663987278dffc474e0f7f0b48" kindref="member">SetScaledValue</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newValue)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>internalValue<sp/>=<sp/>(T)newValue<sp/>*<sp/><ref refid="class_read_only_parameter_1a5427b5421ec85d7544604bd4ffb608d3" kindref="member">_scale</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter_1ace2a6e98cee5f85719781f402037f542" kindref="member">SetValue</ref>(driver,<sp/>internalValue);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="class_read_only_parameter_1aeaed7fcc23f1df9e9f362a48dc6b57e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter_1aeaed7fcc23f1df9e9f362a48dc6b57e5" kindref="member">Normalize</ref>(asynPortDriver&amp;<sp/>driver)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaled<sp/>=<sp/><ref refid="class_read_only_parameter_1a8438f42e3fa620de26252c73441885f0" kindref="member">ScaledValue</ref>(driver);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((scaled<sp/>*<sp/><ref refid="class_read_only_parameter_1a5427b5421ec85d7544604bd4ffb608d3" kindref="member">_scale</ref>)<sp/>!=<sp/><ref refid="class_read_only_parameter_1aaa7b5bbf765d968b1e9b3f9dbbff5f7a" kindref="member">Value</ref>(driver))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1adda70bf663987278dffc474e0f7f0b48" kindref="member">SetScaledValue</ref>(driver,<sp/>scaled);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_read_only_parameter_1a746bfb09439365fba6969d571ab2e43f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter_1a746bfb09439365fba6969d571ab2e43f" kindref="member">HasParameterIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexToMatch)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="155"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter_1a2076e00d3140de568192ed5c8d0fb33d" kindref="member">_parameterIndex</ref><sp/>==<sp/>indexToMatch;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>index<sp/>value<sp/>associated<sp/>with<sp/>the<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="class_read_only_parameter_1ac8b44cc510e7e0e0c6434478eb586875" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter_1ac8b44cc510e7e0e0c6434478eb586875" kindref="member">InternalIndex</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="161"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter_1acc6ddee63fde558da69a688bd4903630" kindref="member">_internalIndex</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166" refid="class_read_only_parameter_1a99809d5bca0211c7a39a31a62d1478b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><ref refid="class_read_only_parameter_1a99809d5bca0211c7a39a31a62d1478b5" kindref="member">Create</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>parameterIndex)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>executed<sp/>if<sp/>&lt;T&gt;<sp/>is<sp/>unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref>;<sp/></highlight><highlight class="comment">//<sp/>Local<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_read_only_parameter_1a2076e00d3140de568192ed5c8d0fb33d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter_1a2076e00d3140de568192ed5c8d0fb33d" kindref="member">_parameterIndex</ref>;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>numeric<sp/>index<sp/>by<sp/>which<sp/>the<sp/>variable<sp/>is<sp/>known<sp/>to<sp/>asynPortDriver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="class_read_only_parameter_1acc6ddee63fde558da69a688bd4903630" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter_1acc6ddee63fde558da69a688bd4903630" kindref="member">_internalIndex</ref>;<sp/></highlight><highlight class="comment">//<sp/>A<sp/>numeric<sp/>index<sp/>by<sp/>which<sp/>the<sp/>parameter<sp/>is<sp/>known<sp/>to<sp/>the<sp/>user<sp/>(e.g.<sp/>a<sp/>voltage<sp/>index)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_read_only_parameter_1a5427b5421ec85d7544604bd4ffb608d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_read_only_parameter_1a5427b5421ec85d7544604bd4ffb608d3" kindref="member">_scale</ref>;<sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>factor:<sp/>&lt;EPICS<sp/>value&gt;<sp/>=<sp/>&lt;Internal<sp/>value&gt;<sp/>*<sp/>_scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/>asynStatus<sp/><ref refid="class_read_only_parameter_1a99809d5bca0211c7a39a31a62d1478b5" kindref="member">ReadOnlyParameter&lt;epicsInt32&gt;::Create</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>parameterIndex)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver.createParam(name.c_str(),<sp/>asynParamInt32,<sp/>&amp;parameterIndex);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/>asynStatus<sp/><ref refid="class_read_only_parameter_1a99809d5bca0211c7a39a31a62d1478b5" kindref="member">ReadOnlyParameter&lt;epicsFloat64&gt;::Create</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>parameterIndex)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver.createParam(name.c_str(),<sp/>asynParamFloat64,<sp/>&amp;parameterIndex);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="190" refid="class_parameter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_parameter" kindref="compound">Parameter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter" kindref="compound">ReadOnlyParameter</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193" refid="class_parameter_1aec486fca8aa9e4343dcd7b96a3ac0518" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_parameter_1aec486fca8aa9e4343dcd7b96a3ac0518" kindref="member">Parameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>internalIndex,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>minimumValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>maximumValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>defaultValue)<sp/>:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter" kindref="compound">ReadOnlyParameter</ref>(name,<sp/>internalIndex,<sp/>defaultValue),</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_minValue(minimumValue),</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_maxValue(maximumValue)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(minimumValue<sp/>&lt;=<sp/>maximumValue);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(minimumValue<sp/>&lt;=<sp/>defaultValue);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(defaultValue<sp/>&lt;=<sp/>maximumValue);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_parameter_1ad4c4c09192f72e303af1a9c7b8e44ecf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_parameter_1ad4c4c09192f72e303af1a9c7b8e44ecf" kindref="member">Parameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>internalIndex,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>minimumValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>maximumValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>defaultValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scale)<sp/>:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter" kindref="compound">ReadOnlyParameter</ref>(name,<sp/>internalIndex,<sp/>defaultValue,<sp/>scale),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_minValue(minimumValue),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_maxValue(maximumValue)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(minimumValue<sp/>&lt;=<sp/>maximumValue);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(minimumValue<sp/>&lt;=<sp/>defaultValue);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(defaultValue<sp/>&lt;=<sp/>maximumValue);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="class_parameter_1a085073fd4be62e5f2a4ffe905365db24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_parameter_1a085073fd4be62e5f2a4ffe905365db24" kindref="member">Value</ref>(asynPortDriver&amp;<sp/>driver)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_parameter_base_1a636d6f29870d0098d40b26c6ecba0f70" kindref="member">GetParameter</ref>(driver,<sp/><ref refid="class_read_only_parameter_1a2076e00d3140de568192ed5c8d0fb33d" kindref="member">_parameterIndex</ref>,<sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref><sp/>&lt;<sp/>_minValue)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref><sp/>=<sp/>_minValue;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_parameter_base_1ac8a4e3bf271644c5a26f7c4b450b5ace" kindref="member">SetParameter</ref>(driver,<sp/><ref refid="class_read_only_parameter_1a2076e00d3140de568192ed5c8d0fb33d" kindref="member">_parameterIndex</ref>,<sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref><sp/>&gt;<sp/>_maxValue)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref><sp/>=<sp/>_maxValue;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_parameter_base_1ac8a4e3bf271644c5a26f7c4b450b5ace" kindref="member">SetParameter</ref>(driver,<sp/><ref refid="class_read_only_parameter_1a2076e00d3140de568192ed5c8d0fb33d" kindref="member">_parameterIndex</ref>,<sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_read_only_parameter_1a05796688e4c51e9990b5599155f90611" kindref="member">_value</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>_minValue;<sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>valid<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>_maxValue;<sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>valid<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueCount,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="239" refid="class_multi_parameter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_multi_parameter" kindref="compound">MultiParameter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_parameter_base" kindref="compound">ParameterBase</ref></highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="242" refid="class_multi_parameter_1a7d2f3b5b412f0a7455cb4f6aa5b129ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter_1a7d2f3b5b412f0a7455cb4f6aa5b129ec" kindref="member">MultiParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>rootName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>internalIndex,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>minimumValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>maximumValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>defaultValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scale)<sp/>:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_parameter_base" kindref="compound">ParameterBase</ref>(rootName),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter_1afed5c0fa8142cde5371ea2efee351e03" kindref="member">_internalIndex</ref>(internalIndex),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter_1aca0ee39cc587d2a11be847f8efbc7010" kindref="member">_minValue</ref>(minimumValue),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter_1a4310946168bf1e723993e7c68aaa2a45" kindref="member">_maxValue</ref>(maximumValue),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter_1a942c663bf4b18c486bd32064c3e81201" kindref="member">_defaultValue</ref>(defaultValue)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(minimumValue<sp/>&lt;=<sp/>maximumValue);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(minimumValue<sp/>&lt;=<sp/>defaultValue);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(defaultValue<sp/>&lt;=<sp/>maximumValue);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>valueCount;<sp/>++i)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>fullName;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fullName<sp/>&lt;&lt;<sp/><ref refid="class_parameter_base_1ab97e7d37cfc5230773ef4ac82e766a07" kindref="member">_name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter_1aadcf4d9e33251592c51569b312a3131c" kindref="member">_parameters</ref>.push_back(<ref refid="class_parameter" kindref="compound">Parameter&lt;T&gt;</ref>(fullName.str(),<sp/><ref refid="class_multi_parameter_1afed5c0fa8142cde5371ea2efee351e03" kindref="member">_internalIndex</ref>,<sp/><ref refid="class_multi_parameter_1aca0ee39cc587d2a11be847f8efbc7010" kindref="member">_minValue</ref>,<sp/><ref refid="class_multi_parameter_1a4310946168bf1e723993e7c68aaa2a45" kindref="member">_maxValue</ref>,<sp/><ref refid="class_multi_parameter_1a942c663bf4b18c486bd32064c3e81201" kindref="member">_defaultValue</ref>,<sp/>scale));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="class_multi_parameter_1a6793da3c212c9169579394a6bf14d5ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynStatus<sp/><ref refid="class_multi_parameter_1a6793da3c212c9169579394a6bf14d5ff" kindref="member">Initialize</ref>(asynPortDriver&amp;<sp/>driver)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>parameter<sp/>:<sp/><ref refid="class_multi_parameter_1aadcf4d9e33251592c51569b312a3131c" kindref="member">_parameters</ref>)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>parameter.Initialize(driver);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_multi_parameter_1a8e64c80bda425a7361083ad4f2fea2cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="class_multi_parameter_1a8e64c80bda425a7361083ad4f2fea2cf" kindref="member">Value</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1aadcf4d9e33251592c51569b312a3131c" kindref="member">_parameters</ref>[index].Value(driver);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="class_multi_parameter_1a280e82814c76108b29935647679967ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1a280e82814c76108b29935647679967ea" kindref="member">ScaledValue</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1aadcf4d9e33251592c51569b312a3131c" kindref="member">_parameters</ref>[index].ScaledValue(driver);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="class_multi_parameter_1ad9870c66c9c0ab80f95cd3326dd73de9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynStatus<sp/><ref refid="class_multi_parameter_1ad9870c66c9c0ab80f95cd3326dd73de9" kindref="member">SetValue</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/>T<sp/>newValue)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1aadcf4d9e33251592c51569b312a3131c" kindref="member">_parameters</ref>[index].SetValue(driver,<sp/>newValue);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="class_multi_parameter_1a11ec2d56a83b8fc086639c8142c4ce41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1a11ec2d56a83b8fc086639c8142c4ce41" kindref="member">SetValueAtMinimum</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/>T<sp/>minimumValue)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1aadcf4d9e33251592c51569b312a3131c" kindref="member">_parameters</ref>[index].SetValueAtMinimum(driver,<sp/>minimumValue);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="class_multi_parameter_1a8e40e4972c227758b12fdd983737a822" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynStatus<sp/><ref refid="class_multi_parameter_1a8e40e4972c227758b12fdd983737a822" kindref="member">SetScaledValue</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newValue)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1aadcf4d9e33251592c51569b312a3131c" kindref="member">_parameters</ref>[index].SetScaledValue(driver,<sp/>newValue);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="class_multi_parameter_1a9f241a9e521b2a7f51f94c08f179c154" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1a9f241a9e521b2a7f51f94c08f179c154" kindref="member">Normalize</ref>(asynPortDriver&amp;<sp/>driver,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1aadcf4d9e33251592c51569b312a3131c" kindref="member">_parameters</ref>[index].Normalize(driver);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="class_multi_parameter_1aaab4891c36056de9aad8b2323601e863" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1aaab4891c36056de9aad8b2323601e863" kindref="member">HasParameterIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexToMatch)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="307"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>parameter<sp/>:<sp/><ref refid="class_multi_parameter_1aadcf4d9e33251592c51569b312a3131c" kindref="member">_parameters</ref>)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parameter.HasParameterIndex(indexToMatch))</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="class_multi_parameter_1a0dd69fe0be54fb9c06bb964e7204984c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1a0dd69fe0be54fb9c06bb964e7204984c" kindref="member">InternalIndex</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>indexStep)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1aadcf4d9e33251592c51569b312a3131c" kindref="member">_parameters</ref>[index].InternalIndex()<sp/>+<sp/>(short)(index<sp/>+<sp/>1)<sp/>*<sp/>indexStep;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="323" refid="class_multi_parameter_1afed5c0fa8142cde5371ea2efee351e03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="class_multi_parameter_1afed5c0fa8142cde5371ea2efee351e03" kindref="member">_internalIndex</ref>;</highlight></codeline>
<codeline lineno="324" refid="class_multi_parameter_1a942c663bf4b18c486bd32064c3e81201" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_multi_parameter_1a942c663bf4b18c486bd32064c3e81201" kindref="member">_defaultValue</ref>;<sp/></highlight><highlight class="comment">//<sp/>Default,<sp/>and<sp/>initial,<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="class_multi_parameter_1aca0ee39cc587d2a11be847f8efbc7010" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_multi_parameter_1aca0ee39cc587d2a11be847f8efbc7010" kindref="member">_minValue</ref>;<sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>valid<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="class_multi_parameter_1a4310946168bf1e723993e7c68aaa2a45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_multi_parameter_1a4310946168bf1e723993e7c68aaa2a45" kindref="member">_maxValue</ref>;<sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>valid<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="class_multi_parameter_1aadcf4d9e33251592c51569b312a3131c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Parameter&lt;T&gt;&gt;<sp/><ref refid="class_multi_parameter_1aadcf4d9e33251592c51569b312a3131c" kindref="member">_parameters</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RIXSCAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="classxcam_camera" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">epicsShareClass<sp/><ref refid="classxcam_camera" kindref="compound">xcamCamera</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_a_d_driver" kindref="compound">ADDriver</ref><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classxcam_camera" kindref="compound">xcamCamera</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSizeY,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>the<sp/>methods<sp/>that<sp/>we<sp/>override<sp/>from<sp/>ADDriver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><ref refid="class_a_d_driver_1abef6916bb90d032a1aeb6894adef12a6" kindref="member">writeInt32</ref>(asynUser<sp/>*pasynUser,<sp/>epicsInt32<sp/>value);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/>writeFloat64(asynUser<sp/>*pasynUser,<sp/>epicsFloat64<sp/>value);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/><ref refid="classasyn_n_d_array_driver_1a84d981f8995d984035bb9feff727d520" kindref="member">writeOctet</ref>(asynUser<sp/>*pasynUser,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxChars,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*nActual);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_d_driver_1ac05bfd5d3c6bc63910d6fbd4fb909d50" kindref="member">setShutter</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>open);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classasyn_n_d_array_driver_1ac3f2d73a05eb54357ec3f052e1b000f2" kindref="member">report</ref>(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>details);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>should<sp/>be<sp/>private,<sp/>but<sp/>get<sp/>called<sp/>from<sp/>C,<sp/>so<sp/>must<sp/>be<sp/>public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>imageTask();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>temperatureTask(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Shutdown();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="351" refid="classxcam_camera_1a335f5222dfdf707d509992dbd05d6aca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classxcam_camera_1a335f5222dfdf707d509992dbd05d6aca" kindref="member">SoftVersion</ref>;</highlight></codeline>
<codeline lineno="352" refid="rixscam_8h_1a06d35c9e855820d455413c75704317d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIRST_XCAM_CAMERA_PARAM<sp/>SoftVersion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="classxcam_camera_1a25bee9f5655fd1c01b4c1dc5a67550be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classxcam_camera_1a25bee9f5655fd1c01b4c1dc5a67550be" kindref="member">IFSVersion</ref>;</highlight></codeline>
<codeline lineno="354" refid="classxcam_camera_1a9c1af15c9e92df4ab58df517f3dd343c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classxcam_camera_1a9c1af15c9e92df4ab58df517f3dd343c" kindref="member">FPGAVersion</ref>;</highlight></codeline>
<codeline lineno="355" refid="classxcam_camera_1adcb04b344c46cd5d4a379b4e9210106b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classxcam_camera_1adcb04b344c46cd5d4a379b4e9210106b" kindref="member">CamSerial</ref>;</highlight></codeline>
<codeline lineno="356" refid="classxcam_camera_1a9675289fc7b799f3af993345db3d500f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classxcam_camera_1a9675289fc7b799f3af993345db3d500f" kindref="member">SeqFilename</ref>;</highlight></codeline>
<codeline lineno="357" refid="rixscam_8h_1afdcb5cac7ef16f9e4da6f9848c19248e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAST_XCAM_CAMERA_PARAM<sp/>SeqFilename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>acquisition<sp/>task<sp/>doesn&apos;t<sp/>ensure<sp/>ordenation<sp/>between<sp/>this<sp/>mutex<sp/>lock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>port<sp/>lock,<sp/>so,<sp/>always<sp/>ensure<sp/>to<sp/>use<sp/>one<sp/>or<sp/>another<sp/>to<sp/>prevent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dead<sp/>lock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsMutex<sp/>_xcmclmMutex;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_sensorSizeX<sp/>=<sp/>1600;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_sensorSizeY<sp/>=<sp/>1600;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>check<sp/>at<sp/>these<sp/>time<sp/>intervals<sp/>to<sp/>see<sp/>if<sp/>any<sp/>of<sp/>the<sp/>major<sp/>settings<sp/>have<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_acquireTimeoutSeconds<sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>private<sp/>and<sp/>therefore<sp/>not<sp/>accessible<sp/>outside<sp/>the<sp/>class<sp/>-<sp/>let<sp/>alone<sp/>outside<sp/>the<sp/>dll.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>therefore<sp/>ignore<sp/>warnings<sp/>about<sp/>dll<sp/>linkages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>4251)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_newImageRequired;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_driverName;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_exiting;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>_serialNumbers;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;NDArray*&gt;<sp/>_ccdImages;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Included<sp/>from<sp/>PVDeclarations.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_ccdCountMax<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramSEQ_ADC_DELAY{</highlight><highlight class="stringliteral">&quot;SEQ_ADC_DELAY&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/>65535,<sp/>144};</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramSEQ_INT_MINUS_DELAY{</highlight><highlight class="stringliteral">&quot;SEQ_INT_MINUS_DELAY&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>65535,<sp/>3};</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramSEQ_INT_PLUS_DELAY{</highlight><highlight class="stringliteral">&quot;SEQ_INT_PLUS_DELAY&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>1,<sp/>65535,<sp/>3};</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramSEQ_INT_TIME{</highlight><highlight class="stringliteral">&quot;SEQ_INT_TIME&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>1,<sp/>65535,<sp/>50};</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramSEQ_SERIAL_T{</highlight><highlight class="stringliteral">&quot;SEQ_SERIAL_T&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>1,<sp/>65535,<sp/>1};</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramSEQ_PARALLEL_T{</highlight><highlight class="stringliteral">&quot;SEQ_PARALLEL_T&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>1,<sp/>65535,<sp/>255};</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramSEQ_SERIAL_CLOCK{</highlight><highlight class="stringliteral">&quot;SEQ_SERIAL_CLOCK&quot;</highlight><highlight class="normal">,<sp/>7,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramSEQ_PARALLEL_CLOCK{</highlight><highlight class="stringliteral">&quot;SEQ_PARALLEL_CLOCK&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>0,<sp/>1,<sp/>0};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramSEQ_NODE_SELECTION{</highlight><highlight class="stringliteral">&quot;SEQ_NODE_SELECTION&quot;</highlight><highlight class="normal">,<sp/>13,<sp/>0,<sp/>3,<sp/>0};</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter" kindref="compound">ReadOnlyParameter&lt;epicsInt32&gt;</ref><sp/>_paramSEQ_STATUS{</highlight><highlight class="stringliteral">&quot;SEQ_STATUS&quot;</highlight><highlight class="normal">,<sp/>68};</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter" kindref="compound">MultiParameter&lt;_ccdCountMax, epicsFloat64&gt;</ref><sp/>_paramVOLT_BIAS_OD{</highlight><highlight class="stringliteral">&quot;VOLT_BIAS_OD&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>0,<sp/>33.915,<sp/>0,<sp/>0.133};</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter" kindref="compound">MultiParameter&lt;_ccdCountMax, epicsFloat64&gt;</ref><sp/>_paramVOLT_BIAS_RD{</highlight><highlight class="stringliteral">&quot;VOLT_BIAS_RD&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>0,<sp/>23.97,<sp/>0,<sp/>0.094};</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter" kindref="compound">MultiParameter&lt;_ccdCountMax, epicsFloat64&gt;</ref><sp/>_paramVOLT_BIAS_DD{</highlight><highlight class="stringliteral">&quot;VOLT_BIAS_DD&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>0,<sp/>23.97,<sp/>0,<sp/>0.094};</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter" kindref="compound">MultiParameter&lt;_ccdCountMax, epicsFloat64&gt;</ref><sp/>_paramVOLT_BIAS_OG{</highlight><highlight class="stringliteral">&quot;VOLT_BIAS_OG&quot;</highlight><highlight class="normal">,<sp/>7,<sp/>0,<sp/>23.97,<sp/>0,<sp/>0.094};</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter" kindref="compound">MultiParameter&lt;_ccdCountMax, epicsFloat64&gt;</ref><sp/>_paramVOLT_BIAS_SS{</highlight><highlight class="stringliteral">&quot;VOLT_BIAS_SS&quot;</highlight><highlight class="normal">,<sp/>9,<sp/>0,<sp/>23.97,<sp/>0,<sp/>0.094};</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter" kindref="compound">MultiParameter&lt;_ccdCountMax, epicsFloat64&gt;</ref><sp/>_paramVOLT_BIAS_HVDC{</highlight><highlight class="stringliteral">&quot;VOLT_BIAS_HVDC&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>0,<sp/>23.97,<sp/>0,<sp/>0.094};</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter" kindref="compound">MultiParameter&lt;_ccdCountMax, epicsFloat64&gt;</ref><sp/>_paramVOLT_BIAS_PEDESTAL{</highlight><highlight class="stringliteral">&quot;VOLT_BIAS_PEDESTAL&quot;</highlight><highlight class="normal">,<sp/>10,<sp/>0,<sp/>14.025,<sp/>0,<sp/>0.055};</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter" kindref="compound">MultiParameter&lt;_ccdCountMax, epicsFloat64&gt;</ref><sp/>_paramVOLT_BIAS_HV{</highlight><highlight class="stringliteral">&quot;VOLT_BIAS_HV&quot;</highlight><highlight class="normal">,<sp/>11,<sp/>0,<sp/>49.98,<sp/>0,<sp/>0.196};</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter" kindref="compound">MultiParameter&lt;_ccdCountMax, epicsFloat64&gt;</ref><sp/>_paramVOLT_CLOCK_IMAGE{</highlight><highlight class="stringliteral">&quot;VOLT_CLOCK_IMAGE&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>14.025,<sp/>0,<sp/>0.055};</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter" kindref="compound">MultiParameter&lt;_ccdCountMax, epicsFloat64&gt;</ref><sp/>_paramVOLT_CLOCK_STORE{</highlight><highlight class="stringliteral">&quot;VOLT_CLOCK_STORE&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>14.025,<sp/>0,<sp/>0.055};</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter" kindref="compound">MultiParameter&lt;_ccdCountMax, epicsFloat64&gt;</ref><sp/>_paramVOLT_CLOCK_SERIAL{</highlight><highlight class="stringliteral">&quot;VOLT_CLOCK_SERIAL&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>0,<sp/>14.025,<sp/>0,<sp/>0.055};</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_parameter" kindref="compound">MultiParameter&lt;_ccdCountMax, epicsFloat64&gt;</ref><sp/>_paramVOLT_CLOCK_RESET{</highlight><highlight class="stringliteral">&quot;VOLT_CLOCK_RESET&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/>14.025,<sp/>0,<sp/>0.055};</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramCCD_POWER{</highlight><highlight class="stringliteral">&quot;CCD_POWER&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>1,<sp/>0};</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramRIXS_SIMULATION{</highlight><highlight class="stringliteral">&quot;RIXS_SIMULATION&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>1,<sp/>0};</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramRIXS_EVENTSPERFRAME{</highlight><highlight class="stringliteral">&quot;RIXS_EVENTSPERFRAME&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>10000,<sp/>100};</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramRIXS_BACKGROUNDLEVEL{</highlight><highlight class="stringliteral">&quot;RIXS_BACKGROUNDLEVEL&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>65535,<sp/>0};</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsFloat64&gt;</ref><sp/>_paramRIXS_EVENTHEIGHT{</highlight><highlight class="stringliteral">&quot;RIXS_EVENTHEIGHT&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>65535,<sp/>200};</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsFloat64&gt;</ref><sp/>_paramRIXS_EVENTRADIUS{</highlight><highlight class="stringliteral">&quot;RIXS_EVENTRADIUS&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0.001,<sp/>2,<sp/>1};</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramTEMP_PROP_GAIN{</highlight><highlight class="stringliteral">&quot;TEMP_PROP_GAIN&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>0,<sp/>255,<sp/>0};</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramTEMP_INT_GAIN{</highlight><highlight class="stringliteral">&quot;TEMP_INT_GAIN&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>0,<sp/>255,<sp/>0};</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramTEMP_DERIV_GAIN{</highlight><highlight class="stringliteral">&quot;TEMP_DERIV_GAIN&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>0,<sp/>255,<sp/>0};</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramTEMP_PROP_RATE{</highlight><highlight class="stringliteral">&quot;TEMP_PROP_RATE&quot;</highlight><highlight class="normal">,<sp/>10,<sp/>0,<sp/>65535,<sp/>0};</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramTEMP_INT_RATE{</highlight><highlight class="stringliteral">&quot;TEMP_INT_RATE&quot;</highlight><highlight class="normal">,<sp/>12,<sp/>0,<sp/>65535,<sp/>0};</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramTEMP_DERIV_RATE{</highlight><highlight class="stringliteral">&quot;TEMP_DERIV_RATE&quot;</highlight><highlight class="normal">,<sp/>14,<sp/>0,<sp/>65535,<sp/>0};</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramTEMP_ACCUMULATED_ERROR_LIMIT{</highlight><highlight class="stringliteral">&quot;TEMP_ACCUMULATED_ERROR_LIMIT&quot;</highlight><highlight class="normal">,<sp/>16,<sp/>0,<sp/>16777215,<sp/>0};</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramTEMP_OUTPUT_BIAS{</highlight><highlight class="stringliteral">&quot;TEMP_OUTPUT_BIAS&quot;</highlight><highlight class="normal">,<sp/>18,<sp/>0,<sp/>65535,<sp/>0};</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramTEMP_MANUAL_MODE{</highlight><highlight class="stringliteral">&quot;TEMP_MANUAL_MODE&quot;</highlight><highlight class="normal">,<sp/>19,<sp/>0,<sp/>1,<sp/>1};</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramTEMP_ENABLE{</highlight><highlight class="stringliteral">&quot;TEMP_ENABLE&quot;</highlight><highlight class="normal">,<sp/>20,<sp/>0,<sp/>1,<sp/>1};</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramTEMP_HEATER_SELECT{</highlight><highlight class="stringliteral">&quot;TEMP_HEATER_SELECT&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>1,<sp/>0};</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramTEMP_SENSOR_SELECT{</highlight><highlight class="stringliteral">&quot;TEMP_SENSOR_SELECT&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>1,<sp/>0};</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_read_only_parameter" kindref="compound">ReadOnlyParameter&lt;epicsInt32&gt;</ref><sp/>_paramCCD_COUNT{</highlight><highlight class="stringliteral">&quot;CCD_COUNT&quot;</highlight><highlight class="normal">,<sp/>0};</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsFloat64&gt;</ref><sp/>_paramADC_GAIN{</highlight><highlight class="stringliteral">&quot;ADC_GAIN&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>36.1119,<sp/>10,<sp/>0.0353};</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_parameter" kindref="compound">Parameter&lt;epicsInt32&gt;</ref><sp/>_paramADC_OFFSET{</highlight><highlight class="stringliteral">&quot;ADC_OFFSET&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>1020,<sp/>40,<sp/>4};</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_parameterContainerCount<sp/>=<sp/>43;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_parameterCount<sp/>=<sp/>67;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ParameterBase*&gt;<sp/>_allParams;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_ccdPowerOn;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_CCDPowerChanged;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_sequencerFilenameChanged;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_TriggerModeChanged;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>_voltageIndexStep<sp/>=<sp/>16;<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>this<sp/>*<sp/>&lt;ccd<sp/>number&gt;<sp/>to<sp/>the<sp/>internal<sp/>index,<sp/>to<sp/>get<sp/>register<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;MultiParameter&lt;_ccdCountMax,<sp/>epicsFloat64&gt;*&gt;<sp/>_voltageParams;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_voltageParamsChanged;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Parameter&lt;epicsInt32&gt;*&gt;<sp/>_tempControllerParams;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_tempControllerParamsChanged;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Parameter&lt;epicsInt32&gt;*&gt;<sp/>_sequencerParams;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_SequencerParametersChanged;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_acquireTimeChanged;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_adcGainOffsetChanged;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_shutterModeChanged;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_shutterDelayChanged;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_grabWaitFlag;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_grabWaitValue;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>_node;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mechanism<sp/>to<sp/>detect<sp/>changes<sp/>to<sp/>roi<sp/>parameters,<sp/>so<sp/>scan<sp/>does<sp/>not<sp/>have<sp/>to<sp/>be<sp/>set<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>no<sp/>changes<sp/>have<sp/>been<sp/>made</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_roiParametersChanged;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_callGrabSetup;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_switchModeCheck;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;int&gt;<sp/>_roiParameterIndices;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CCDCount()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_serialNumbers.size();<sp/>};</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>sequencer<sp/>from<sp/>the<sp/>file<sp/>specified<sp/>by<sp/>the<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>xcamCamera::LoadSequencer();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>CCD<sp/>power<sp/>according<sp/>to<sp/>the<sp/>parameter<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SetCCDPower();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>CCD<sp/>power<sp/>according<sp/>to<sp/>the<sp/>boolean<sp/>parameter.<sp/><sp/>If<sp/>force<sp/>is<sp/>true,<sp/>ignore<sp/>the<sp/>cached<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SetCCDPower(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>voltages,<sp/>if<sp/>the<sp/>power<sp/>is<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SetCCDVoltages();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ApplyVoltageConstraints();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>exposure<sp/>time<sp/>registers<sp/>from<sp/>the<sp/>AcquisitionTime<sp/>parameter,<sp/>and<sp/>update<sp/>the<sp/>readback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetExposureTime();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>temperature<sp/>controller<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetTemperatureController();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>ROI<sp/>and<sp/>binning<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConfigureROIBinning();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>ROI<sp/>and<sp/>binning<sp/>etc.<sp/>for<sp/>a<sp/>particular<sp/>axis<sp/>(i.e.<sp/>X<sp/>or<sp/>Y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConfigureROIBinningAxis(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxID,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>bin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>origin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>count);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConstrainToSensorAxis(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>globalOrigin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>globalSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>globalBin,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>localOrigin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>localSize,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>originOut,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>countOut);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>computeRIXSArray(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeY);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref>*<sp/>GetImage();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>configureCaptureParams();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAcquisition(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;acquisition_done);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsEventStatus<sp/>preAcquisition();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>temperatureControllerCommands</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_GET_RAW_PLANT_VALUE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_GET_SETPOINT<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_SET_SETPOINT<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_GET_PROPORTIONAL_GAIN<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_SET_PROPORTIONAL_GAIN<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_GET_INTEGRAL_GAIN<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_SET_INTEGRAL_GAIN<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_GET_DERIVATIVE_GAIN<sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_SET_DERIVATIVE_GAIN<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_GET_PROPORTIONAL_TIME<sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_SET_PROPORTIONAL_TIME<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_GET_INTEGRAL_RATE<sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_SET_INTEGRAL_RATE<sp/>=<sp/>12,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_GET_DERIVATIVE_RATE<sp/>=<sp/>13,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_SET_DERIVATIVE_RATE<sp/>=<sp/>14,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_GET_ACCUMULATED_ERROR_LIMIT<sp/>=<sp/>15,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_SET_ACCUMULATED_ERROR_LIMIT<sp/>=<sp/>16,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_GET_OUTPUT_BIAS_VALUE<sp/>=<sp/>17,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_SET_OUTPUT_BIAS_VALUE<sp/>=<sp/>18,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_SET_MANUAL_MODE<sp/>=<sp/>19,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMD_TEMP_SET_ENABLE_CONTROL<sp/>=<sp/>20</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EncodeTemperatureCelsius(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tempDegreesC)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(0.5<sp/>+<sp/>(tempDegreesC<sp/>+<sp/>260.0)<sp/>/<sp/>0.0000277);<sp/>};</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DecodeTemperatureCelsius(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoded)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)encoded<sp/>*<sp/>0.0000277)<sp/>-<sp/>260.0;<sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReportWriteStatus(asynUser<sp/>*pasynUser,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asynStatus<sp/>status,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>methodName);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Our<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsEventId<sp/>startEventId;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsEventId<sp/>stopEventId;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pRaw;</highlight></codeline>
<codeline lineno="535"><highlight class="normal">};</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537" refid="rixscam_8h_1ac204b8e9428e6527811492cf772832ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_XCAM_CAMERA_PARAMS<sp/>((int)(&amp;LAST_XCAM_CAMERA_PARAM<sp/>-<sp/>&amp;FIRST_XCAM_CAMERA_PARAM<sp/>+<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADRIXSCam/rixscamApp/src/rixscam.h"/>
  </compounddef>
</doxygen>
