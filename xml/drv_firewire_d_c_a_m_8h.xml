<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="drv_firewire_d_c_a_m_8h" kind="file" language="C++">
    <compoundname>drvFirewireDCAM.h</compoundname>
    <includedby refid="drv_firewire_d_c_a_m_8c" local="yes">/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/drvFirewireDCAM.c</includedby>
    <invincdepgraph>
      <node id="2">
        <label>/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/drvFirewireDCAM.c</label>
        <link refid="drv_firewire_d_c_a_m_8c"/>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/drvFirewireDCAM.h</label>
        <link refid="drv_firewire_d_c_a_m_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="drv_firewire_d_c_a_m_8h_1a6d50200dff8184c53c436103fd99bbdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FDC_InitBus</definition>
        <argsstring>(void)</argsstring>
        <name>FDC_InitBus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialise the firewire bus. </para>
        </briefdescription>
        <detaileddescription>
<para>This function need to be called only once to initialise the firewire bus before <ref refid="firewire_d_c_a_m_8cpp_1a07e2612cf58b6e2285debb47dca6af59" kindref="member">FDC_Config()</ref> can be called. The bus will be first be reset, then scanned for cameras and the number of cameras and their hexadecimal ID will be printed to stdout. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/drvFirewireDCAM.h" line="13" column="5" bodyfile="/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/firewireDCAM.cpp" bodystart="270" bodyend="292" declfile="/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/drvFirewireDCAM.h" declline="13" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="drv_firewire_d_c_a_m_8h_1a454ac2cac58a9bcff7b247de1d2ac293" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FDC_Config</definition>
        <argsstring>(const char *portName, const char *camid, int speed, int maxBuffers, size_t maxMemory, int colour)</argsstring>
        <name>FDC_Config</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>camid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxBuffers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxMemory</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colour</declname>
          <defname>disableScalable</defname>
        </param>
        <briefdescription>
<para>Configuration function to configure one camera. </para>
        </briefdescription>
        <detaileddescription>
<para>This function need to be called once for each camera to be used by the IOC. A call to this function instanciates one object from the <ref refid="class_firewire_d_c_a_m" kindref="compound">FirewireDCAM</ref> class. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>portName</parametername>
</parameternamelist>
<parameterdescription>
<para>Asyn port name to assign to the camera. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>camid</parametername>
</parameternamelist>
<parameterdescription>
<para>The camera ID or serial number in a hexadecimal string. Lower case and upper case letters can be used. This is used to identify a specific camera on the bus. For instance: &quot;0x00b09d01007139d0&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The bus speed to be used. This indicates whether to use the bus in 1394A or 1394B mode. Valid values are: 400 or 800. If an invalid value is entered the function will always default to 400 (legacy mode). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxBuffers</parametername>
</parameternamelist>
<parameterdescription>
<para>Maxiumum number of <ref refid="class_n_d_array" kindref="compound">NDArray</ref> objects (image buffers) this driver is allowed to allocate. This driver requires 2 buffers, and each queue element in a plugin can require one buffer which will all need to be added up in this parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxMemory</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum memory (in bytes) that this driver is allowed to allocate. So if max. size = 1024x768 (8bpp) and maxBuffers is, say 14. maxMemory = 1024x768x14 = 11010048 bytes (~11MB) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>disableScalable</parametername>
</parameternamelist>
<parameterdescription>
<para>Disable scalable modes if this is 1 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/drvFirewireDCAM.h" line="14" column="5" bodyfile="/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/firewireDCAM.cpp" bodystart="390" bodyend="398" declfile="/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/drvFirewireDCAM.h" declline="14" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="drv_firewire_d_c_a_m_8h_1a6527e58d139780c0ef02a3cab4f21421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FDC_ResetBus</definition>
        <argsstring>()</argsstring>
        <name>FDC_ResetBus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/drvFirewireDCAM.h" line="15" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/firewireDCAM.cpp" bodystart="400" bodyend="405" declfile="/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/drvFirewireDCAM.h" declline="15" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Header file for the firewireDCAM module. </para>
    </briefdescription>
    <detaileddescription>
<para>The only functions this module exports are the <ref refid="drv_firewire_d_c_a_m_8h_1a6d50200dff8184c53c436103fd99bbdd" kindref="member">FDC_InitBus()</ref> and <ref refid="drv_firewire_d_c_a_m_8h_1a454ac2cac58a9bcff7b247de1d2ac293" kindref="member">FDC_Config()</ref> to enable use of them in the IOC shell. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DRV_FIREWIREDCAM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRV_FIREWIREDCAM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="drv_firewire_d_c_a_m_8h_1a6d50200dff8184c53c436103fd99bbdd" kindref="member">FDC_InitBus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="drv_firewire_d_c_a_m_8h_1a454ac2cac58a9bcff7b247de1d2ac293" kindref="member">FDC_Config</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>camid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>speed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colour);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="drv_firewire_d_c_a_m_8h_1a6527e58d139780c0ef02a3cab4f21421" kindref="member">FDC_ResetBus</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/firewireDCAM/firewireDCAMApp/src/drvFirewireDCAM.h"/>
  </compounddef>
</doxygen>
