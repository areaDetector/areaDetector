<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_a_dn_e_d_axis_8c" kind="file" language="C++">
    <compoundname>ADnEDAxis.c</compoundname>
    <includes local="no">registryFunction.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">dbCommon.h</includes>
    <includes local="no">aSubRecord.h</includes>
    <includes local="no">epicsExport.h</includes>
    <includes local="no">cantProceed.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDAxis.c</label>
        <link refid="_a_dn_e_d_axis_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>aSubRecord.h</label>
      </node>
      <node id="8">
        <label>cantProceed.h</label>
      </node>
      <node id="5">
        <label>dbCommon.h</label>
      </node>
      <node id="7">
        <label>epicsExport.h</label>
      </node>
      <node id="2">
        <label>registryFunction.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_a_dn_e_d_axis_8c_1a7a556dadce9f085a068bb0cf3660f252" prot="public" static="yes" mutable="no">
        <type>registryFunctionRef</type>
        <definition>registryFunctionRef aSubRef[]</definition>
        <argsstring>[]</argsstring>
        <name>aSubRef</name>
        <initializer>= {
    {&quot;ADnEDAxisInit&quot;,(REGISTRYFUNCTION)<ref refid="_a_dn_e_d_axis_8c_1a6a43c290aa6b8290e432d48820189629" kindref="member">ADnEDAxisInit</ref>},
    {&quot;ADnEDAxisProcess&quot;,(REGISTRYFUNCTION)<ref refid="_a_dn_e_d_axis_8c_1a0cfa8783196f3d7fd30aba158f72c19d" kindref="member">ADnEDAxisProcess</ref>}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDAxis.c" line="80" column="28" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDAxis.c" bodystart="80" bodyend="83"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_a_dn_e_d_axis_8c_1a6a43c290aa6b8290e432d48820189629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ADnEDAxisInit</definition>
        <argsstring>(struct aSubRecord *psub)</argsstring>
        <name>ADnEDAxisInit</name>
        <param>
          <type>struct aSubRecord *</type>
          <declname>psub</declname>
        </param>
        <briefdescription>
<para>Functions for an aSub record to generate an array for an axis scale on a X/Y plot. </para>
        </briefdescription>
        <detaileddescription>
<para>Matt Pearson March 2015.</para>
<para>The record definition should look something like:</para>
<para><heading level="1">///</heading>
</para>
<para><heading level="1">/// INPA - Start value</heading>
</para>
<para><heading level="1">/// INPB - Size of the desired scale array (must be &lt;=NOVA)</heading>
</para>
<para><heading level="1">/// INPC - Bin size</heading>
</para>
<para><heading level="1">/// NOVA - Max size of the output array (cannot change)</heading>
</para>
<para><heading level="1">///</heading>
</para>
<para>record(aSub, &quot;$(P)$(R)Det$(DET):TOF:XAxis&quot;) { field(INAM, &quot;aSubInit&quot;) field(SNAM, &quot;aSubProcess&quot;) field(PREC, &quot;5&quot;) field(INPA, &quot;$(P)$(R)Det$(DET):TOF:XAxis_Start&quot;) field(INPB, &quot;$(P)$(R)Det$(DET):TOF:XAxis_Size&quot;) field(INPC, &quot;$(P)$(R)Det$(DET):TOF:XAxis_Bin&quot;) field(FTA, &quot;DOUBLE&quot;) field(FTB, &quot;LONG&quot;) field(FTC, &quot;DOUBLE&quot;) field(FTVA, &quot;DOUBLE&quot;) field(NOVA, &quot;$(TOFXSIZE)&quot;) &lt;- this is the max size of the TOF waveform for DETX } </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDAxis.c" line="40" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDAxis.c" bodystart="40" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="_a_dn_e_d_axis_8c_1a0cfa8783196f3d7fd30aba158f72c19d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ADnEDAxisProcess</definition>
        <argsstring>(struct aSubRecord *psub)</argsstring>
        <name>ADnEDAxisProcess</name>
        <param>
          <type>struct aSubRecord *</type>
          <declname>psub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDAxis.c" line="49" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDAxis.c" bodystart="49" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="_a_dn_e_d_axis_8c_1a6c209512e5eb6c28ccb68e14e87eae9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ADnEDAxis</definition>
        <argsstring>(void)</argsstring>
        <name>ADnEDAxis</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDAxis.c" line="85" column="6" bodyfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDAxis.c" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="_a_dn_e_d_axis_8c_1af6e00d0e5dd614e3c856c5dfbff9989c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>epicsExportRegistrar</definition>
        <argsstring>(ADnEDAxis)</argsstring>
        <name>epicsExportRegistrar</name>
        <param>
          <type><ref refid="_a_dn_e_d_axis_8c_1a6c209512e5eb6c28ccb68e14e87eae9b" kindref="member">ADnEDAxis</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDAxis.c" line="90" column="1" declfile="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDAxis.c" declline="90" declcolumn="1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;registryFunction.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbCommon.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;aSubRecord.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsExport.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cantProceed.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_a_dn_e_d_axis_8c_1a6a43c290aa6b8290e432d48820189629" kindref="member">ADnEDAxisInit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>aSubRecord<sp/>*psub)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psub-&gt;nova<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>psub-&gt;nova<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>psub-&gt;dpvt<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)callocMustSucceed(psub-&gt;nova,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;ADnEDAxis<sp/>calloc<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_a_dn_e_d_axis_8c_1a0cfa8783196f3d7fd30aba158f72c19d" kindref="member">ADnEDAxisProcess</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>aSubRecord<sp/>*psub)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxsize<sp/>=<sp/>psub-&gt;nova;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)psub-&gt;a)[0];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)psub-&gt;b)[0];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)psub-&gt;c)[0];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>maxsize)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pData<sp/>=<sp/>psub-&gt;dpvt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>point<sp/>=<sp/>size*bin;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;maxsize;<sp/>++<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>pData[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>point;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>point<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;size;<sp/>++<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>pData[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>point;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>point<sp/>+=<sp/>bin;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>memcpy(psub-&gt;vala,<sp/>pData,<sp/>maxsize*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>registryFunctionRef<sp/>aSubRef[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ADnEDAxisInit&quot;</highlight><highlight class="normal">,(REGISTRYFUNCTION)<ref refid="_a_dn_e_d_axis_8c_1a6a43c290aa6b8290e432d48820189629" kindref="member">ADnEDAxisInit</ref>},</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ADnEDAxisProcess&quot;</highlight><highlight class="normal">,(REGISTRYFUNCTION)<ref refid="_a_dn_e_d_axis_8c_1a0cfa8783196f3d7fd30aba158f72c19d" kindref="member">ADnEDAxisProcess</ref>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_dn_e_d_axis_8c_1a6c209512e5eb6c28ccb68e14e87eae9b" kindref="member">ADnEDAxis</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>registryFunctionRefAdd(aSubRef,NELEMENTS(aSubRef));</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="_a_dn_e_d_axis_8c_1af6e00d0e5dd614e3c856c5dfbff9989c" kindref="member">epicsExportRegistrar</ref>(<ref refid="_a_dn_e_d_axis_8c_1a6c209512e5eb6c28ccb68e14e87eae9b" kindref="member">ADnEDAxis</ref>);</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADnED/ADnEDApp/src/ADnEDAxis.c"/>
  </compounddef>
</doxygen>
