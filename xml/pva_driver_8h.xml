<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="pva_driver_8h" kind="file" language="C++">
    <compoundname>pvaDriver.h</compoundname>
    <includes local="no">pv/clientFactory.h</includes>
    <includes local="no">pv/pvAccess.h</includes>
    <includes local="no">pv/ntndarray.h</includes>
    <includedby refid="pva_driver_8cpp" local="yes">/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h</label>
        <link refid="pva_driver_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pv/clientFactory.h</label>
      </node>
      <node id="4">
        <label>pv/ntndarray.h</label>
      </node>
      <node id="3">
        <label>pv/pvAccess.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.cpp</label>
        <link refid="pva_driver_8cpp"/>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h</label>
        <link refid="pva_driver_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classpva_driver" prot="public">pvaDriver</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="pva_driver_8h_1a0349eae75061f5be13cb3844282b55f8" prot="public" static="no">
        <name>PVAOverrunCounterString</name>
        <initializer>&quot;OVERRUN_COUNTER&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" line="5" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pva_driver_8h_1aa7f5d07749696fc6e8d027f08e35868a" prot="public" static="no">
        <name>PVAPvNameString</name>
        <initializer>&quot;PV_NAME&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" line="6" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pva_driver_8h_1ae901827e6e69d0c6db540d75c9fcc934" prot="public" static="no">
        <name>PVAPvConnectionStatusString</name>
        <initializer>&quot;PV_CONNECTION&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" line="7" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pva_driver_8h_1ae578001fe043b4cca7a0edd801cfe9c4" prot="public" static="no">
        <name>DRIVER_VERSION</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" line="9" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pva_driver_8h_1a09d8a9e616d09d45e8f4c3ad80849872" prot="public" static="no">
        <name>DRIVER_REVISION</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" line="10" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pva_driver_8h_1a00a7ebec19bc60e5ee0344109af2fd82" prot="public" static="no">
        <name>DRIVER_MODIFICATION</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" line="11" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pva_driver_8h_1a632667a79818c169cfae38d29cb3403c" prot="public" static="no">
        <name>FIRST_PVA_DRIVER_PARAM</name>
        <initializer>PVAOverrunCounter</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" line="35" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pva_driver_8h_1a06c0ba07e0a146ec68919c556ba8e8ba" prot="public" static="no">
        <name>LAST_PVA_DRIVER_PARAM</name>
        <initializer>PVAPvConnectionStatus</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" line="38" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pva_driver_8h_1a2f12f35168be565b5750e3c04ed42fff" prot="public" static="no">
        <name>NUM_PVA_DRIVER_PARAMS</name>
        <initializer>((int)(&amp;<ref refid="pva_driver_8h_1a06c0ba07e0a146ec68919c556ba8e8ba" kindref="member">LAST_PVA_DRIVER_PARAM</ref> - &amp;<ref refid="pva_driver_8h_1a632667a79818c169cfae38d29cb3403c" kindref="member">FIRST_PVA_DRIVER_PARAM</ref> + 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" line="70" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" bodystart="70" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pva_driver_8h_1ab46079387bb91e1e1a5b9e956867e8e2" prot="public" static="no">
        <type>epics::pvAccess::Channel::shared_pointer</type>
        <definition>typedef epics::pvAccess::Channel::shared_pointer ChannelPtr</definition>
        <argsstring></argsstring>
        <name>ChannelPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" line="15" column="50" bodyfile="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pva_driver_8h_1a2087cab05b5c41a707018200e33eca3d" prot="public" static="no">
        <type>epics::pvAccess::ChannelProvider::shared_pointer</type>
        <definition>typedef epics::pvAccess::ChannelProvider::shared_pointer ChannelProviderPtr</definition>
        <argsstring></argsstring>
        <name>ChannelProviderPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" line="16" column="58" bodyfile="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pva_driver_8h_1a3b55b13077c4d7074a21de8f14f31ea8" prot="public" static="no">
        <type>std::tr1::shared_ptr&lt; <ref refid="classpva_driver" kindref="compound">pvaDriver</ref> &gt;</type>
        <definition>typedef std::tr1::shared_ptr&lt;pvaDriver&gt; pvaDriverPtr</definition>
        <argsstring></argsstring>
        <name>pvaDriverPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" line="17" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;pv/clientFactory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pv/pvAccess.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pv/ntndarray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="pva_driver_8h_1a0349eae75061f5be13cb3844282b55f8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PVAOverrunCounterString<sp/><sp/><sp/><sp/><sp/>&quot;OVERRUN_COUNTER&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="pva_driver_8h_1aa7f5d07749696fc6e8d027f08e35868a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PVAPvNameString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PV_NAME&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="pva_driver_8h_1ae901827e6e69d0c6db540d75c9fcc934" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PVAPvConnectionStatusString<sp/>&quot;PV_CONNECTION&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="pva_driver_8h_1ae578001fe043b4cca7a0edd801cfe9c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRIVER_VERSION<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="pva_driver_8h_1a09d8a9e616d09d45e8f4c3ad80849872" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRIVER_REVISION<sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="pva_driver_8h_1a00a7ebec19bc60e5ee0344109af2fd82" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRIVER_MODIFICATION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpva_driver" kindref="compound">pvaDriver</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="pva_driver_8h_1ab46079387bb91e1e1a5b9e956867e8e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>epics::pvAccess::Channel::shared_pointer<sp/><ref refid="pva_driver_8h_1ab46079387bb91e1e1a5b9e956867e8e2" kindref="member">ChannelPtr</ref>;</highlight></codeline>
<codeline lineno="16" refid="pva_driver_8h_1a2087cab05b5c41a707018200e33eca3d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>epics::pvAccess::ChannelProvider::shared_pointer<sp/><ref refid="pva_driver_8h_1a2087cab05b5c41a707018200e33eca3d" kindref="member">ChannelProviderPtr</ref>;</highlight></codeline>
<codeline lineno="17" refid="pva_driver_8h_1a3b55b13077c4d7074a21de8f14f31ea8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::tr1::shared_ptr&lt;pvaDriver&gt;<sp/><ref refid="pva_driver_8h_1a3b55b13077c4d7074a21de8f14f31ea8" kindref="member">pvaDriverPtr</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classpva_driver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">epicsShareClass<sp/><ref refid="classpva_driver" kindref="compound">pvaDriver</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_a_d_driver" kindref="compound">ADDriver</ref>,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>epics::pvAccess::ChannelRequester,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>epics::pvData::MonitorRequester</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpva_driver" kindref="compound">pvaDriver</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pvName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overriden<sp/>from<sp/>ADDriver:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/><ref refid="class_a_d_driver_1abef6916bb90d032a1aeb6894adef12a6" kindref="member">writeInt32</ref>(asynUser<sp/>*pasynUser,<sp/>epicsInt32<sp/>value);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/><ref refid="classasyn_n_d_array_driver_1a84d981f8995d984035bb9feff727d520" kindref="member">writeOctet</ref>(asynUser<sp/>*pasynUser,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nChars,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*nActual);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classasyn_n_d_array_driver_1ac3f2d73a05eb54357ec3f052e1b000f2" kindref="member">report</ref><sp/>(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>details);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34" refid="classpva_driver_1acabe6af627e8091c36cadde4facde46b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpva_driver_1acabe6af627e8091c36cadde4facde46b" kindref="member">PVAOverrunCounter</ref>;</highlight></codeline>
<codeline lineno="35" refid="pva_driver_8h_1a632667a79818c169cfae38d29cb3403c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FIRST_PVA_DRIVER_PARAM<sp/>PVAOverrunCounter<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classpva_driver_1afd8d5350b9d3055d78853cd2378d9b6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpva_driver_1afd8d5350b9d3055d78853cd2378d9b6d" kindref="member">PVAPvName</ref>;</highlight></codeline>
<codeline lineno="37" refid="classpva_driver_1a6d781e7b39bf6bf960a163f8626ede95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpva_driver_1a6d781e7b39bf6bf960a163f8626ede95" kindref="member">PVAPvConnectionStatus</ref>;</highlight></codeline>
<codeline lineno="38" refid="pva_driver_8h_1a06c0ba07e0a146ec68919c556ba8e8ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LAST_PVA_DRIVER_PARAM<sp/>PVAPvConnectionStatus<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_pvName;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_request;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>m_priority;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pva_driver_8h_1a2087cab05b5c41a707018200e33eca3d" kindref="member">ChannelProviderPtr</ref><sp/>m_provider;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pva_driver_8h_1ab46079387bb91e1e1a5b9e956867e8e2" kindref="member">ChannelPtr</ref><sp/>m_channel;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>epics::pvData::PVStructurePtr<sp/>m_pvRequest;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>epics::pvData::MonitorPtr<sp/>m_monitor;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pva_driver_8h_1a3b55b13077c4d7074a21de8f14f31ea8" kindref="member">pvaDriverPtr</ref><sp/>m_thisPtr;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>connectPv(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>pvName);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implemented<sp/>for<sp/>pvData::Requester</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>getRequesterName<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>message<sp/>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>message,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epics::pvData::MessageType<sp/>messageType);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implemented<sp/>for<sp/>pvAccess::ChannelRequester</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>channelCreated<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>epics::pvData::Status&amp;<sp/>status,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pva_driver_8h_1ab46079387bb91e1e1a5b9e956867e8e2" kindref="member">ChannelPtr</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>channel);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>channelStateChange<sp/>(<ref refid="pva_driver_8h_1ab46079387bb91e1e1a5b9e956867e8e2" kindref="member">ChannelPtr</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>channel,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epics::pvAccess::Channel::ConnectionState<sp/>state);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implemented<sp/>for<sp/>pvData::MonitorRequester</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>monitorConnect<sp/>(epics::pvData::Status<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>status,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epics::pvData::MonitorPtr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>monitor,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epics::pvData::StructureConstPtr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>structure);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>monitorEvent<sp/>(epics::pvData::MonitorPtr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>monitor);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unlisten<sp/>(epics::pvData::MonitorPtr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>monitor);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="pva_driver_8h_1a2f12f35168be565b5750e3c04ed42fff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_PVA_DRIVER_PARAMS<sp/>((int)(&amp;LAST_PVA_DRIVER_PARAM<sp/>-<sp/>&amp;FIRST_PVA_DRIVER_PARAM<sp/>+<sp/>1))</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/pvaDriver/pvaDriverApp/src/pvaDriver.h"/>
  </compounddef>
</doxygen>
