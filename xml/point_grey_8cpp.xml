<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="point_grey_8cpp" kind="file" language="C++">
    <compoundname>pointGrey.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">epicsEvent.h</includes>
    <includes local="no">epicsTime.h</includes>
    <includes local="no">epicsThread.h</includes>
    <includes local="no">iocsh.h</includes>
    <includes local="no">epicsString.h</includes>
    <includes local="no">epicsExit.h</includes>
    <includes local="no">FlyCapture2.h</includes>
    <includes refid="_a_d_driver_8h" local="yes">ADDriver.h</includes>
    <includes local="no">epicsExport.h</includes>
    <incdepgraph>
      <node id="9">
        <label>iocsh.h</label>
      </node>
      <node id="14">
        <label>epicsTypes.h</label>
      </node>
      <node id="19">
        <label>NDArray.h</label>
        <link refid="_n_d_array_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>NDAttributeList.h</label>
        <link refid="_n_d_attribute_list_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>epicsMutex.h</label>
      </node>
      <node id="11">
        <label>epicsExit.h</label>
      </node>
      <node id="26">
        <label>epicsVersion.h</label>
      </node>
      <node id="23">
        <label>string</label>
      </node>
      <node id="8">
        <label>epicsThread.h</label>
      </node>
      <node id="30">
        <label>epicsExport.h</label>
      </node>
      <node id="13">
        <label>ADDriver.h</label>
        <link refid="_a_d_driver_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ADCoreVersion.h</label>
        <link refid="_a_d_core_version_8h"/>
      </node>
      <node id="25">
        <label>ADCoreAPI.h</label>
        <link refid="_a_d_core_a_p_i_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>asynNDArrayDriver.h</label>
        <link refid="asyn_n_d_array_driver_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>epicsString.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>unistd.h</label>
      </node>
      <node id="21">
        <label>ellLib.h</label>
      </node>
      <node id="22">
        <label>NDAttribute.h</label>
        <link refid="_n_d_attribute_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp</label>
        <link refid="point_grey_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>asynDriver.h</label>
      </node>
      <node id="28">
        <label>Codec.h</label>
        <link refid="_codec_8h"/>
      </node>
      <node id="7">
        <label>epicsTime.h</label>
      </node>
      <node id="18">
        <label>asynPortDriver.h</label>
      </node>
      <node id="20">
        <label>set</label>
      </node>
      <node id="15">
        <label>epicsMessageQueue.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>epicsEvent.h</label>
      </node>
      <node id="12">
        <label>FlyCapture2.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structenum_struct__t" prot="public">enumStruct_t</innerclass>
    <innerclass refid="classpoint_grey" prot="public">pointGrey</innerclass>
    <innernamespace refid="namespace_fly_capture2">FlyCapture2</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="point_grey_8cpp_1ae578001fe043b4cca7a0edd801cfe9c4" prot="public" static="no">
        <name>DRIVER_VERSION</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="40" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a09d8a9e616d09d45e8f4c3ad80849872" prot="public" static="no">
        <name>DRIVER_REVISION</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="41" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a00a7ebec19bc60e5ee0344109af2fd82" prot="public" static="no">
        <name>DRIVER_MODIFICATION</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="42" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1aacc3ee1a7f283f8ef65cea31f4436a95" prot="public" static="no">
        <name>MAX</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>((x)&gt;(y)?(x):(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="46" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1ad171cfbca48fbfc751716b0adbd5f8f3" prot="public" static="no">
        <name>PGPropertyAvailString</name>
        <initializer>&quot;PG_PROP_AVAIL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="49" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1abc45e2fc56b70fbe0c76d2032bfb4a12" prot="public" static="no">
        <name>PGPropertyOnOffAvailString</name>
        <initializer>&quot;PG_PROP_ON_OFF_AVAIL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="50" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a68da257380d6ee44918827b5ef0417db" prot="public" static="no">
        <name>PGPropertyOnOffString</name>
        <initializer>&quot;PG_PROP_ON_OFF&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="51" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1ad3c9f6ae341771862dba178b8c037f00" prot="public" static="no">
        <name>PGPropertyOnePushAvailString</name>
        <initializer>&quot;PG_PROP_ONE_PUSH_AVAIL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="52" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a8c5739202e8f76e84c5c7b298ae7a674" prot="public" static="no">
        <name>PGPropertyOnePushString</name>
        <initializer>&quot;PG_PROP_ONE_PUSH&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="53" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a463c0758f7e20628b3457b98efe31931" prot="public" static="no">
        <name>PGPropertyAutoAvailString</name>
        <initializer>&quot;PG_PROP_AUTO_AVAIL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="54" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1ab46b48fa5143d05ae04601f72f55f7df" prot="public" static="no">
        <name>PGPropertyManAvailString</name>
        <initializer>&quot;PG_PROP_MAN_AVAIL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="55" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a84dda8637b7d927c5172ce294ff0c1c2" prot="public" static="no">
        <name>PGPropertyAutoModeString</name>
        <initializer>&quot;PG_PROP_AUTO_MODE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="56" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a073d2a669f50a61937a8db2d366110f5" prot="public" static="no">
        <name>PGPropertyAbsAvailString</name>
        <initializer>&quot;PG_PROP_ABS_AVAIL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="57" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1ab94b0c6d7f61339dd7b48d7750af3be3" prot="public" static="no">
        <name>PGPropertyAbsModeString</name>
        <initializer>&quot;PG_PROP_ABS_MODE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="58" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a4ccc909d30731a090e73ce055267bbcd" prot="public" static="no">
        <name>PGPropertyValueString</name>
        <initializer>&quot;PG_PROP_VAL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="59" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1aaba600218321c49fe6ca5ea9fc9ca4a7" prot="public" static="no">
        <name>PGPropertyValueBString</name>
        <initializer>&quot;PG_PROP_VAL_B&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="60" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1ae7423ae68d877845bef89c0a65b887a1" prot="public" static="no">
        <name>PGPropertyValueMaxString</name>
        <initializer>&quot;PG_PROP_VAL_MAX&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="61" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a223e281f38a3262c0d4de1fdec2e5637" prot="public" static="no">
        <name>PGPropertyValueMinString</name>
        <initializer>&quot;PG_PROP_VAL_MIN&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="62" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1ae91b1d10dae17bb6d9d749c3f5408908" prot="public" static="no">
        <name>PGPropertyValueAbsString</name>
        <initializer>&quot;PG_PROP_VAL_ABS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="63" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a0d65b9617c63f291193e60e4d031531c" prot="public" static="no">
        <name>PGPropertyValueAbsMaxString</name>
        <initializer>&quot;PG_PROP_VAL_ABS_MAX&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="64" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a41bcac0aa6a893918c187dc0228fe70a" prot="public" static="no">
        <name>PGPropertyValueAbsMinString</name>
        <initializer>&quot;PG_PROP_VAL_ABS_MIN&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="65" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1ab8e524ea8d5d3cd73c9526ee3a60e65d" prot="public" static="no">
        <name>PGGigEPropertyValueString</name>
        <initializer>&quot;PG_GIGE_PROP_VAL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="66" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a0c659db52f0961fb61bbabd1b820450b" prot="public" static="no">
        <name>PGGigEPropertyValueMaxString</name>
        <initializer>&quot;PG_GIGE_PROP_VAL_MAX&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="67" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a4597219169288d160e9f199cc43cfc69" prot="public" static="no">
        <name>PGGigEPropertyValueMinString</name>
        <initializer>&quot;PG_GIGE_PROP_VAL_MIN&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="68" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a5a40b846efd4e27ad0152a177656b6ac" prot="public" static="no">
        <name>PGVideoModeString</name>
        <initializer>&quot;PG_VIDEO_MODE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="69" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a05ddcaf8ad69de46f79f638b60a5f182" prot="public" static="no">
        <name>PGFormat7ModeString</name>
        <initializer>&quot;PG_FORMAT7_MODE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="70" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a494a69a8bfb353c854569a1ce41ccbcf" prot="public" static="no">
        <name>PGBinningModeString</name>
        <initializer>&quot;PG_BINNING_MODE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="71" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a962cac99b19d54f010bf0c5975a6a45f" prot="public" static="no">
        <name>PGFrameRateString</name>
        <initializer>&quot;PG_FRAME_RATE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="72" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a615fcaab3e9f108f019857f0153bfead" prot="public" static="no">
        <name>PGPixelFormatString</name>
        <initializer>&quot;PG_PIXEL_FORMAT&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="73" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a1435c20fc239bfe8cc07b9bad833ef5f" prot="public" static="no">
        <name>PGConvertPixelFormatString</name>
        <initializer>&quot;PG_CONVERT_PIXEL_FORMAT&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="74" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a883ca62bf62a6b58b9c287a2031b51d3" prot="public" static="no">
        <name>PGTriggerSourceString</name>
        <initializer>&quot;PG_TRIGGER_SOURCE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="75" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a98db1873eaa3f862914b49c2bebc0247" prot="public" static="no">
        <name>PGTriggerPolarityString</name>
        <initializer>&quot;PG_TRIGGER_POLARITY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="76" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a580e484c22ecd3ddab31b96aff67c2fd" prot="public" static="no">
        <name>PGSoftwareTriggerString</name>
        <initializer>&quot;PG_SOFTWARE_TRIGGER&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="77" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a7559e6b0ba7e1d0eea12ebe793f64a74" prot="public" static="no">
        <name>PGSkipFramesString</name>
        <initializer>&quot;PG_SKIP_FRAMES&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="78" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1afeb2299661217886bae3f3f3dfb8d158" prot="public" static="no">
        <name>PGStrobeSourceString</name>
        <initializer>&quot;PG_STROBE_SOURCE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="79" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1aa3caabfc2eaf3cc697cb23a3bc55155d" prot="public" static="no">
        <name>PGStrobePolarityString</name>
        <initializer>&quot;PG_STROBE_POLARITY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="80" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a6945943817c633943bfadf210288d0ff" prot="public" static="no">
        <name>PGStrobeEnableString</name>
        <initializer>&quot;PG_STROBE_ENABLE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="81" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a612de0a93ce13f905bcf59ffc0f6004a" prot="public" static="no">
        <name>PGStrobeDelayString</name>
        <initializer>&quot;PG_STROBE_DELAY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="82" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a4c1c786f7cd9e820929620095076734e" prot="public" static="no">
        <name>PGStrobeDurationString</name>
        <initializer>&quot;PG_STROBE_DURATION&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="83" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a86156288114e044aa72ca9ba134a423c" prot="public" static="no">
        <name>PGPacketSizeString</name>
        <initializer>&quot;PG_PACKET_SIZE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="84" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1aa217b7d7a8ec67f8ba6622525fb6b901" prot="public" static="no">
        <name>PGPacketSizeActualString</name>
        <initializer>&quot;PG_PACKET_SIZE_ACTUAL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="85" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a7b53c8b58b25fc8d74ca2c1051eb0b7c" prot="public" static="no">
        <name>PGMaxPacketSizeString</name>
        <initializer>&quot;PG_MAX_PACKET_SIZE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="86" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a9af6370943e7461b59cf8631603a504a" prot="public" static="no">
        <name>PGPacketDelayString</name>
        <initializer>&quot;PG_PACKET_DELAY&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="87" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1aa4fc3be38875ead593676df15fab65e8" prot="public" static="no">
        <name>PGPacketDelayActualString</name>
        <initializer>&quot;PG_PACKET_DELAY_ACTUAL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="88" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1acccf6298275921f9fa48620e55ae39bc" prot="public" static="no">
        <name>PGPacketResendEnableString</name>
        <initializer>&quot;PG_PACKET_RESEND_ENABLE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="89" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a0130477b8e013986b56c3364edb20a7a" prot="public" static="no">
        <name>PGBandwidthString</name>
        <initializer>&quot;PG_BANDWIDTH&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="90" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1af21a00ede6f4567431d4e304d9b3ce3d" prot="public" static="no">
        <name>PGTimeStampModeString</name>
        <initializer>&quot;PG_TIME_STAMP_MODE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="91" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1ab01dd7e6188489bd4e5d77fff7c94fd8" prot="public" static="no">
        <name>PGCorruptFramesString</name>
        <initializer>&quot;PG_CORRUPT_FRAMES&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="92" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a18f73b544823e5563fcac6da1842b58c" prot="public" static="no">
        <name>PGDriverDroppedString</name>
        <initializer>&quot;PG_DRIVER_DROPPED&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="93" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a1feee68e5cf641dc95c6b044ac8dcb38" prot="public" static="no">
        <name>PGTransmitFailedString</name>
        <initializer>&quot;PG_TRANSMIT_FAILED&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="94" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1ad7e3371cce09f00947579762bc4f029a" prot="public" static="no">
        <name>PGDroppedFramesString</name>
        <initializer>&quot;PG_DROPPED_FRAMES&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="95" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a2b6573ab5111e79e03216ce92942e25c" prot="public" static="no">
        <name>NUM_PROPERTIES</name>
        <initializer>UNSPECIFIED_PROPERTY_TYPE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="98" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a44d77a541523850f608940c22a46ac55" prot="public" static="no">
        <name>NUM_GIGE_PROPERTIES</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="100" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1ac615b62e4dc370d277f98f4e837bf954" prot="public" static="no">
        <name>NUM_TRIGGER_MODES</name>
        <initializer>17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="102" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a0968da1d6b313a86b3c837f8b3887eb1" prot="public" static="no">
        <name>MAX_ADDR</name>
        <initializer>NUM_MODES</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="105" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1ae1a70432cf02543f2f8e9432d6f0ef0c" prot="public" static="no">
        <name>NUM_GPIO_PINS</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="108" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a77804f73118c7934d33320d98838a96c" prot="public" static="no">
        <name>NUM_BINNING_MODES</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="111" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a7d1b6fa54b67628848fc9cf2a4d86352" prot="public" static="no">
        <name>NUM_CONVERT_PIXEL_FORMATS</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="114" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1af1a73210c98d1a63e7536582cf27b036" prot="public" static="no">
        <name>DEFAULT_PACKET_DELAY</name>
        <initializer>400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="117" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1ac8ed01652e565234764cd18be8a153f9" prot="public" static="no">
        <name>MAX_ENUM_STRING_SIZE</name>
        <initializer>26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="124" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a0e33566ac55fe207193900546d7bcae8" prot="public" static="no">
        <name>FIRST_PG_PARAM</name>
        <initializer>PGPropertyAvail</initializer>
        <briefdescription>
<para>Property is available (int32 read) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="334" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1adb06b37c13dd10fe0341e19c78f57b89" prot="public" static="no">
        <name>LAST_PG_PARAM</name>
        <initializer>PGDroppedFrames</initializer>
        <briefdescription>
<para>Number of dropped frames (int32 read) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="384" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="point_grey_8cpp_1a4ad5b0ce0b2e9a99a270f35877427e35" prot="public" static="no">
        <name>NUM_PG_PARAMS</name>
        <initializer>((int)(&amp;<ref refid="point_grey_8cpp_1adb06b37c13dd10fe0341e19c78f57b89" kindref="member">LAST_PG_PARAM</ref> - &amp;<ref refid="point_grey_8cpp_1a0e33566ac55fe207193900546d7bcae8" kindref="member">FIRST_PG_PARAM</ref> + 1))</initializer>
        <briefdescription>
<para>Number of asynPortDriver parameters this driver supports. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="466" column="9" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="466" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="point_grey_8cpp_1a06247911a7d3dd5967a46aece3b77d68" prot="public" static="no" strong="no">
        <type></type>
        <name>propValue_t</name>
        <enumvalue id="point_grey_8cpp_1a06247911a7d3dd5967a46aece3b77d68ae6ed6436d803389b011fb064995ebe72" prot="public">
          <name>propValueA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="point_grey_8cpp_1a06247911a7d3dd5967a46aece3b77d68a6b3f5244c9acacc5f348b4313c390f75" prot="public">
          <name>propValueB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="119" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="enum" id="point_grey_8cpp_1a8053ed4a167ef8b897bcafe3a1e73f16" prot="public" static="no" strong="no">
        <type></type>
        <name>binningMode_t</name>
        <enumvalue id="point_grey_8cpp_1a8053ed4a167ef8b897bcafe3a1e73f16a2b2f717ccd63f21fce0f3d6b3cc9ea26" prot="public">
          <name>BINNING_1X1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="point_grey_8cpp_1a8053ed4a167ef8b897bcafe3a1e73f16a825f2ef3fe359fecc4bf8ff770783f39" prot="public">
          <name>BINNING_2X2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="point_grey_8cpp_1a8053ed4a167ef8b897bcafe3a1e73f16a25fe917bf09833f78899b75264c74464" prot="public">
          <name>BINNING_4X4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="212" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="212" bodyend="216"/>
      </memberdef>
      <memberdef kind="enum" id="point_grey_8cpp_1af783dacc57e23ea8f6dd06e2e85e4420" prot="public" static="no" strong="no">
        <type></type>
        <name>PGTimeStamp_t</name>
        <enumvalue id="point_grey_8cpp_1af783dacc57e23ea8f6dd06e2e85e4420a475496f506c5a8e359073df849517415" prot="public">
          <name>TimeStampCamera</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="point_grey_8cpp_1af783dacc57e23ea8f6dd06e2e85e4420a5df3f40dae41b5c850670597ca891180" prot="public">
          <name>TimeStampEPICS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="point_grey_8cpp_1af783dacc57e23ea8f6dd06e2e85e4420aa20b2aee8c016471e3221765b3a1145c" prot="public">
          <name>TimeStampHybrid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="304" column="1" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="304" bodyend="308"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="point_grey_8cpp_1af0e94d13028051cd5339d204bfbb057d" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* driverName</definition>
        <argsstring></argsstring>
        <name>driverName</name>
        <initializer>= &quot;pointGrey&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="44" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a51a970b352c0191b8b87c4c433bd9db7" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* videoModeStrings[NUM_VIDEOMODES]</definition>
        <argsstring>[NUM_VIDEOMODES]</argsstring>
        <name>videoModeStrings</name>
        <initializer>= {
    &quot;160x120 YUV444&quot;,  
    &quot;320x240 YUV422&quot;, 
    &quot;640x480 YUV411&quot;, 
    &quot;640X480 YUV422&quot;,   
    &quot;640x480 RGB&quot;,   
    &quot;640x480 Mono8&quot;,   
    &quot;640x480 Mono16&quot;,
    &quot;800x600 YUV422&quot;,  
    &quot;800x600 RGB&quot;,    
    &quot;800x600 Mono8&quot;,  
    &quot;1024x768 YUV422&quot;,  
    &quot;1024x768 RGB&quot;,  
    &quot;1024x768 Mono8&quot;,  
    &quot;800x600 Mono16&quot;,  
    &quot;1024x768 Mono16&quot;,
    &quot;1280x960 YUV422&quot;, 
    &quot;1280x960 RGB&quot;,   
    &quot;1280x960 Mono8&quot;, 
    &quot;1600x1200 YUV422&quot;, 
    &quot;1600x1200 RGB&quot;, 
    &quot;1600x1200 Mono8&quot;, 
    &quot;1280x960 Mono16&quot;, 
    &quot;1600x1200 Mono16&quot;,
    &quot;Format7&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="130" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a7ec68ef87b8ed387b38ae8b851da18d2" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* frameRateStrings[NUM_FRAMERATES]</definition>
        <argsstring>[NUM_FRAMERATES]</argsstring>
        <name>frameRateStrings</name>
        <initializer>= {
    &quot;1.875&quot;,
    &quot;3.75&quot;,
    &quot;7.5&quot;,
    &quot;15&quot;,
    &quot;30&quot;,
    &quot;60&quot;,
    &quot;120&quot;,
    &quot;240&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="157" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a34b1105796045b8cf5444359720d8ceb" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* pixelFormatStrings[NUM_PIXEL_FORMATS]</definition>
        <argsstring>[NUM_PIXEL_FORMATS]</argsstring>
        <name>pixelFormatStrings</name>
        <initializer>= {
    &quot;Mono8&quot;,
    &quot;YUV411&quot;,
    &quot;YUV422&quot;,
    &quot;YUV444&quot;,
    &quot;RGB8&quot;,
    &quot;Mono16&quot;,
    &quot;RGB16&quot;,
    &quot;Mono16_Signed&quot;,
    &quot;RGB16_Signed&quot;,
    &quot;Raw8&quot;,
    &quot;Raw16&quot;,
    &quot;Mono12&quot;,
    &quot;Raw12&quot;,
    &quot;BGR&quot;,
    &quot;BGRU&quot;,
    &quot;BGR16&quot;,
    &quot;BGRU16&quot;,
    &quot;YUV422_JPEG&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="168" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a2e905fedf94f688689b6d8b482cdaa26" prot="public" static="yes" mutable="no">
        <type>const PixelFormat</type>
        <definition>const PixelFormat pixelFormatValues[NUM_PIXEL_FORMATS]</definition>
        <argsstring>[NUM_PIXEL_FORMATS]</argsstring>
        <name>pixelFormatValues</name>
        <initializer>= {
    PIXEL_FORMAT_MONO8,
    PIXEL_FORMAT_411YUV8,
    PIXEL_FORMAT_422YUV8,
    PIXEL_FORMAT_444YUV8,
    PIXEL_FORMAT_RGB8,
    PIXEL_FORMAT_MONO16,
    PIXEL_FORMAT_RGB16,
    PIXEL_FORMAT_S_MONO16,
    PIXEL_FORMAT_S_RGB16,
    PIXEL_FORMAT_RAW8,
    PIXEL_FORMAT_RAW16,
    PIXEL_FORMAT_MONO12,
    PIXEL_FORMAT_RAW12,
    PIXEL_FORMAT_BGR,
    PIXEL_FORMAT_BGRU,
    PIXEL_FORMAT_RGB,
    PIXEL_FORMAT_RGBU,
    PIXEL_FORMAT_BGR16,
    PIXEL_FORMAT_BGRU16,
    PIXEL_FORMAT_422YUV8_JPEG
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="189" column="26" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1aa3788d86069a8af11336fa3d51f0f97e" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* binningModeStrings[NUM_BINNING_MODES]</definition>
        <argsstring>[NUM_BINNING_MODES]</argsstring>
        <name>binningModeStrings</name>
        <initializer>= {
    &quot;1x1&quot;,
    &quot;2x2&quot;,
    &quot;4x4&quot;,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="218" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1aaa8e544fba199554413c4a4db41b967b" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int binningModeValues[NUM_BINNING_MODES]</definition>
        <argsstring>[NUM_BINNING_MODES]</argsstring>
        <name>binningModeValues</name>
        <initializer>= {
    1,
    2,
    4,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="224" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1aa5b0c30fb7a373dd4e5047855607be2d" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* convertPixelFormatStrings[NUM_CONVERT_PIXEL_FORMATS]</definition>
        <argsstring>[NUM_CONVERT_PIXEL_FORMATS]</argsstring>
        <name>convertPixelFormatStrings</name>
        <initializer>= {
    &quot;None&quot;,
    &quot;Mono8&quot;,
    &quot;Raw16&quot;,
    &quot;Mono16&quot;,
    &quot;RGB8&quot;,
    &quot;RGB16&quot;,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="230" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a94dc24493c5c1a64886ca2081e3f437b" prot="public" static="yes" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int convertPixelFormatValues[NUM_CONVERT_PIXEL_FORMATS]</definition>
        <argsstring>[NUM_CONVERT_PIXEL_FORMATS]</argsstring>
        <name>convertPixelFormatValues</name>
        <initializer>= {
    0,
    PIXEL_FORMAT_MONO8,
    PIXEL_FORMAT_RAW16,
    PIXEL_FORMAT_MONO16,
    PIXEL_FORMAT_RGB8,
    PIXEL_FORMAT_RGB16,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="239" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a4f43ed9173f1a5e10f4a9e08bc561fac" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* propertyTypeStrings[NUM_PROPERTIES]</definition>
        <argsstring>[NUM_PROPERTIES]</argsstring>
        <name>propertyTypeStrings</name>
        <initializer>= {
    &quot;Brightness&quot;,
    &quot;AutoExposuure&quot;,
    &quot;Sharpness&quot;,
    &quot;WhiteBalance&quot;,
    &quot;Hue&quot;,
    &quot;Saturation&quot;,
    &quot;Gamma&quot;,
    &quot;Iris&quot;,
    &quot;Focus&quot;,
    &quot;Zoom&quot;,
    &quot;Pan&quot;,
    &quot;Tilt&quot;,
    &quot;Shutter&quot;,
    &quot;Gain&quot;,
    &quot;TriggerMode&quot;,
    &quot;TriggerDelay&quot;,
    &quot;FrameRate&quot;,
    &quot;Temperature&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="248" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a59e562bc5d071e64933f7b15d1328617" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* gigEPropertyTypeStrings[NUM_GIGE_PROPERTIES]</definition>
        <argsstring>[NUM_GIGE_PROPERTIES]</argsstring>
        <name>gigEPropertyTypeStrings</name>
        <initializer>= {
    &quot;Heartbeat&quot;,
    &quot;HeartbeatTimeout&quot;,
    &quot;PacketSize&quot;,
    &quot;PacketDelay&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="269" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1af31cc772cfeb97d20dfe3373582fdbdf" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* triggerModeStrings[NUM_TRIGGER_MODES]</definition>
        <argsstring>[NUM_TRIGGER_MODES]</argsstring>
        <name>triggerModeStrings</name>
        <initializer>= {
    &quot;Internal&quot;,
    &quot;Ext. Standard&quot;,
    &quot;Bulb&quot;,
    &quot;Undefined&quot;,
    &quot;Skip frames&quot;,
    &quot;Multi-exposure&quot;,
    &quot;Multi-exposure bulb&quot;,
    &quot;Undefined&quot;,
    &quot;Undefined&quot;,
    &quot;Undefined&quot;,
    &quot;Undefined&quot;,
    &quot;Undefined&quot;,
    &quot;Undefined&quot;,
    &quot;Undefined&quot;,
    &quot;Low smear&quot;,
    &quot;Overlapped&quot;,
    &quot;Multi-shot&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="277" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a1b9b67ad0feb3cbeba2f9aaad566d7ab" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* GPIOStrings[NUM_GPIO_PINS]</definition>
        <argsstring>[NUM_GPIO_PINS]</argsstring>
        <name>GPIOStrings</name>
        <initializer>= {
    &quot;GPIO_0&quot;,
    &quot;GPIO_1&quot;,
    &quot;GPIO_2&quot;,
    &quot;GPIO_3&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="297" column="19" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a5b3cb40f99ecdaa383a0189445b38fbf" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg configArg0</definition>
        <argsstring></argsstring>
        <name>configArg0</name>
        <initializer>= {&quot;Port name&quot;, iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3037" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="3037" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a12e03f733e7768280d0205a2d8adeaab" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg configArg1</definition>
        <argsstring></argsstring>
        <name>configArg1</name>
        <initializer>= {&quot;cameraId&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3038" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="3038" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1ac0dc159931b84391cb7c0fed1fa7986f" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg configArg2</definition>
        <argsstring></argsstring>
        <name>configArg2</name>
        <initializer>= {&quot;traceMask&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3039" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="3039" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1ace59dfd97294c541e5bef057cdb513e7" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg configArg3</definition>
        <argsstring></argsstring>
        <name>configArg3</name>
        <initializer>= {&quot;memoryChannel&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3040" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="3040" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a340f9b3d99922a0aa2c3b150f5a34cd1" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg configArg4</definition>
        <argsstring></argsstring>
        <name>configArg4</name>
        <initializer>= {&quot;maxBuffers&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3041" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="3041" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a2c70847455a1f828f228bde88ad50ac0" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg configArg5</definition>
        <argsstring></argsstring>
        <name>configArg5</name>
        <initializer>= {&quot;maxMemory&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3042" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="3042" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1af3e6f0bc824622de5ce00d56c75a4fe8" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg configArg6</definition>
        <argsstring></argsstring>
        <name>configArg6</name>
        <initializer>= {&quot;priority&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3043" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="3043" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a0aa238c08f4c675a62450faafc9f3748" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg configArg7</definition>
        <argsstring></argsstring>
        <name>configArg7</name>
        <initializer>= {&quot;stackSize&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3044" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="3044" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1a552430c6092c73bc46cfa4a702f43ea6" prot="public" static="yes" mutable="no">
        <type>const iocshArg *const</type>
        <definition>const iocshArg* const configArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>configArgs</name>
        <initializer>= {&amp;configArg0,
                                              &amp;configArg1,
                                              &amp;configArg2,
                                              &amp;configArg3,
                                              &amp;configArg4,
                                              &amp;configArg5,
                                              &amp;configArg6,
                                              &amp;configArg7}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3045" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="3045" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="point_grey_8cpp_1ad34a502353d1cc0dd610cb791966775b" prot="public" static="yes" mutable="no">
        <type>const iocshFuncDef</type>
        <definition>const iocshFuncDef configpointGrey</definition>
        <argsstring></argsstring>
        <name>configpointGrey</name>
        <initializer>= {&quot;pointGreyConfig&quot;, 8, configArgs}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3053" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="3053" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="point_grey_8cpp_1a271c779ebbbf99f1e91806fa7f137c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pointGreyConfig</definition>
        <argsstring>(const char *portName, int cameraId, int traceMask, int memoryChannel, int maxBuffers, size_t maxMemory, int priority, int stackSize)</argsstring>
        <name>pointGreyConfig</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cameraId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>traceMask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>memoryChannel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxBuffers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxMemory</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stackSize</declname>
        </param>
        <briefdescription>
<para>Configuration function to configure one camera. </para>
        </briefdescription>
        <detaileddescription>
<para>This function need to be called once for each camera to be used by the IOC. A call to this function instanciates one object from the <ref refid="classpoint_grey" kindref="compound">pointGrey</ref> class. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">portName</parametername>
</parameternamelist>
<parameterdescription>
<para>asyn port name to assign to the camera. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cameraId</parametername>
</parameternamelist>
<parameterdescription>
<para>The camera index or serial number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">traceMask</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial value of the asynTraceMask. <linebreak/>
 If set to 0 or 1 then asynTraceMask will be set to ASYN_TRACE_ERROR. If set to 0x21 (ASYN_TRACE_WARNING | ASYN_TRACE_ERROR) then each call to the FlyCap2 library will be traced including during initialization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">memoryChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>The camera memory channel (non-volatile memory containing camera parameters) to load during initialization. If 0 no memory channel is loaded. If &gt;=1 thenRestoreFromMemoryChannel(memoryChannel-1) is called. <linebreak/>
 Set memoryChannel to 1 to work around a bug in the Linux GigE driver in R2.0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxBuffers</parametername>
</parameternamelist>
<parameterdescription>
<para>Maxiumum number of <ref refid="class_n_d_array" kindref="compound">NDArray</ref> objects (image buffers) this driver is allowed to allocate. This driver requires 2 buffers, and each queue element in a plugin can require one buffer which will all need to be added up in this parameter. 0=unlimited. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxMemory</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum memory (in bytes) that this driver is allowed to allocate. So if max. size = 1024x768 (8bpp) and maxBuffers is, say 14. maxMemory = 1024x768x14 = 11010048 bytes (~11MB). 0=unlimited. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">priority</parametername>
</parameternamelist>
<parameterdescription>
<para>The EPICS thread priority for this driver. 0=use asyn default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stackSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the stack for the EPICS port thread. 0=use asyn default. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="490" column="16" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="490" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="point_grey_8cpp_1ae3543f479f8be9313f858890b03971a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void c_shutdown</definition>
        <argsstring>(void *arg)</argsstring>
        <name>c_shutdown</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="497" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="497" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="point_grey_8cpp_1afc6ff0618bd23a64f62bdaa8662716b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void imageGrabTaskC</definition>
        <argsstring>(void *drvPvt)</argsstring>
        <name>imageGrabTaskC</name>
        <param>
          <type>void *</type>
          <declname>drvPvt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="503" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="503" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="point_grey_8cpp_1ad770aee80665342b5803974f683424bc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void configCallFunc</definition>
        <argsstring>(const iocshArgBuf *args)</argsstring>
        <name>configCallFunc</name>
        <param>
          <type>const iocshArgBuf *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3054" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="3054" bodyend="3059"/>
      </memberdef>
      <memberdef kind="function" id="point_grey_8cpp_1a8ebb4172e5d4ad12a25664623150284f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pointGreyRegister</definition>
        <argsstring>(void)</argsstring>
        <name>pointGreyRegister</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3062" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" bodystart="3062" bodyend="3065"/>
      </memberdef>
      <memberdef kind="function" id="point_grey_8cpp_1aa24b4e8378fd76b5bbb54ee7c0efbfa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>epicsExportRegistrar</definition>
        <argsstring>(pointGreyRegister)</argsstring>
        <name>epicsExportRegistrar</name>
        <param>
          <type>pointGreyRegister</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" line="3068" column="1" declfile="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp" declline="3068" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>pointGrey.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>a<sp/>driver<sp/>for<sp/>PointGrey<sp/>GigE,<sp/>Firewire,<sp/>and<sp/>USB3<sp/>cameras<sp/>using<sp/>their<sp/>FlyCapture2<sp/>SDK</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>It<sp/>is<sp/>based<sp/>on<sp/>the<sp/>FirewireWin<sp/>areaDetector<sp/>driver,<sp/>which<sp/>also<sp/>supports<sp/>Firewire<sp/>DCAM<sp/>drivers<sp/>on<sp/>Windows.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>However,<sp/>because<sp/>this<sp/>driver<sp/>uses<sp/>the<sp/>PointGrey<sp/>SDK<sp/>it<sp/>also<sp/>supports<sp/>USB3<sp/>cameras,<sp/>which<sp/>FirewireWin<sp/>does<sp/>not.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Mark<sp/>Rivers</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Univerity<sp/>of<sp/>Chicago</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Created:<sp/>January<sp/>29,<sp/>2014</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;tchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsEvent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsTime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsThread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iocsh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsString.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsExit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;FlyCapture2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">FlyCapture2;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_d_driver_8h" kindref="compound">ADDriver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;epicsExport.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRIVER_VERSION<sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRIVER_REVISION<sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRIVER_MODIFICATION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pointGrey&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX(x,y)<sp/>((x)&gt;(y)?(x):(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PointGrey<sp/>driver<sp/>specific<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyAvailString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_AVAIL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyOnOffAvailString<sp/><sp/><sp/><sp/>&quot;PG_PROP_ON_OFF_AVAIL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyOnOffString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_ON_OFF&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyOnePushAvailString<sp/><sp/>&quot;PG_PROP_ONE_PUSH_AVAIL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyOnePushString<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_ONE_PUSH&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyAutoAvailString<sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_AUTO_AVAIL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyManAvailString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_MAN_AVAIL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyAutoModeString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_AUTO_MODE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyAbsAvailString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_ABS_AVAIL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyAbsModeString<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_ABS_MODE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyValueString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_VAL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyValueBString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_VAL_B&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyValueMaxString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_VAL_MAX&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyValueMinString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_VAL_MIN&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyValueAbsString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PROP_VAL_ABS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyValueAbsMaxString<sp/><sp/><sp/>&quot;PG_PROP_VAL_ABS_MAX&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPropertyValueAbsMinString<sp/><sp/><sp/>&quot;PG_PROP_VAL_ABS_MIN&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGGigEPropertyValueString<sp/><sp/><sp/><sp/><sp/>&quot;PG_GIGE_PROP_VAL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGGigEPropertyValueMaxString<sp/><sp/>&quot;PG_GIGE_PROP_VAL_MAX&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGGigEPropertyValueMinString<sp/><sp/>&quot;PG_GIGE_PROP_VAL_MIN&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGVideoModeString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_VIDEO_MODE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGFormat7ModeString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_FORMAT7_MODE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGBinningModeString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_BINNING_MODE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGFrameRateString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_FRAME_RATE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPixelFormatString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PIXEL_FORMAT&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGConvertPixelFormatString<sp/><sp/><sp/><sp/>&quot;PG_CONVERT_PIXEL_FORMAT&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGTriggerSourceString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_TRIGGER_SOURCE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGTriggerPolarityString<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_TRIGGER_POLARITY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGSoftwareTriggerString<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_SOFTWARE_TRIGGER&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGSkipFramesString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_SKIP_FRAMES&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGStrobeSourceString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_STROBE_SOURCE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGStrobePolarityString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_STROBE_POLARITY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGStrobeEnableString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_STROBE_ENABLE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGStrobeDelayString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_STROBE_DELAY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGStrobeDurationString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_STROBE_DURATION&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPacketSizeString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PACKET_SIZE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPacketSizeActualString<sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PACKET_SIZE_ACTUAL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGMaxPacketSizeString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_MAX_PACKET_SIZE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPacketDelayString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_PACKET_DELAY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPacketDelayActualString<sp/><sp/><sp/><sp/><sp/>&quot;PG_PACKET_DELAY_ACTUAL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGPacketResendEnableString<sp/><sp/><sp/><sp/>&quot;PG_PACKET_RESEND_ENABLE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGBandwidthString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_BANDWIDTH&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGTimeStampModeString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_TIME_STAMP_MODE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGCorruptFramesString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_CORRUPT_FRAMES&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGDriverDroppedString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_DRIVER_DROPPED&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGTransmitFailedString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_TRANSMIT_FAILED&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PGDroppedFramesString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PG_DROPPED_FRAMES&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Point<sp/>Grey<sp/>does<sp/>not<sp/>define<sp/>a<sp/>NUM_PROPERTIES<sp/>constant,<sp/>but<sp/>it<sp/>can<sp/>be<sp/>set<sp/>as<sp/>follows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_PROPERTIES<sp/>UNSPECIFIED_PROPERTY_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_GIGE_PROPERTIES<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TRIGGER_MODES<sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>value<sp/>of<sp/>the<sp/>asyn<sp/>&quot;addr&quot;<sp/>is<sp/>the<sp/>largest<sp/>of<sp/>NUM_PROPERTIES,<sp/>NUM_PIXEL_FORMATS,<sp/>NUM_MODES,<sp/>NUM_VIDEO_MODES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_ADDR<sp/>NUM_MODES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>pins<sp/>for<sp/>strobe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_GPIO_PINS<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>binning<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_BINNING_MODES<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>pixel<sp/>formats<sp/>to<sp/>convert<sp/>to<sp/>when<sp/>the<sp/>input<sp/>pixel<sp/>format<sp/>is<sp/>PIXEL_FORMAT_RAW[8,12,16]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_CONVERT_PIXEL_FORMATS<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>packet<sp/>delay<sp/>in<sp/>microseconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_PACKET_DELAY<sp/>400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="point_grey_8cpp_1a06247911a7d3dd5967a46aece3b77d68ae6ed6436d803389b011fb064995ebe72" kindref="member">propValueA</ref>,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="point_grey_8cpp_1a06247911a7d3dd5967a46aece3b77d68a6b3f5244c9acacc5f348b4313c390f75" kindref="member">propValueB</ref></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}<sp/><ref refid="point_grey_8cpp_1a06247911a7d3dd5967a46aece3b77d68" kindref="member">propValue_t</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_ENUM_STRING_SIZE<sp/>26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[<ref refid="point_grey_8cpp_1ac8ed01652e565234764cd18be8a153f9" kindref="member">MAX_ENUM_STRING_SIZE</ref>];</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*videoModeStrings[NUM_VIDEOMODES]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;160x120<sp/>YUV444&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;320x240<sp/>YUV422&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;640x480<sp/>YUV411&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;640X480<sp/>YUV422&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;640x480<sp/>RGB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;640x480<sp/>Mono8&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;640x480<sp/>Mono16&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;800x600<sp/>YUV422&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;800x600<sp/>RGB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;800x600<sp/>Mono8&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1024x768<sp/>YUV422&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1024x768<sp/>RGB&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1024x768<sp/>Mono8&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;800x600<sp/>Mono16&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1024x768<sp/>Mono16&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1280x960<sp/>YUV422&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1280x960<sp/>RGB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1280x960<sp/>Mono8&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1600x1200<sp/>YUV422&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1600x1200<sp/>RGB&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1600x1200<sp/>Mono8&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1280x960<sp/>Mono16&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1600x1200<sp/>Mono16&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Format7&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*frameRateStrings[NUM_FRAMERATES]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1.875&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;3.75&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;7.5&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;15&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;30&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;60&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;120&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;240&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pixelFormatStrings[NUM_PIXEL_FORMATS]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mono8&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;YUV411&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;YUV422&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;YUV444&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RGB8&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mono16&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RGB16&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mono16_Signed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RGB16_Signed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Raw8&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Raw16&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mono12&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Raw12&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BGR&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BGRU&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BGR16&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BGRU16&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;YUV422_JPEG&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PixelFormat<sp/>pixelFormatValues[NUM_PIXEL_FORMATS]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_MONO8,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_411YUV8,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_422YUV8,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_444YUV8,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_RGB8,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_MONO16,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_RGB16,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_S_MONO16,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_S_RGB16,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_RAW8,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_RAW16,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_MONO12,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_RAW12,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_BGR,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_BGRU,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_RGB,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_RGBU,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_BGR16,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_BGRU16,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_422YUV8_JPEG</highlight></codeline>
<codeline lineno="210"><highlight class="normal">};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="point_grey_8cpp_1a8053ed4a167ef8b897bcafe3a1e73f16a2b2f717ccd63f21fce0f3d6b3cc9ea26" kindref="member">BINNING_1X1</ref>,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="point_grey_8cpp_1a8053ed4a167ef8b897bcafe3a1e73f16a825f2ef3fe359fecc4bf8ff770783f39" kindref="member">BINNING_2X2</ref>,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="point_grey_8cpp_1a8053ed4a167ef8b897bcafe3a1e73f16a25fe917bf09833f78899b75264c74464" kindref="member">BINNING_4X4</ref></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}<sp/><ref refid="point_grey_8cpp_1a8053ed4a167ef8b897bcafe3a1e73f16" kindref="member">binningMode_t</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*binningModeStrings[<ref refid="point_grey_8cpp_1a77804f73118c7934d33320d98838a96c" kindref="member">NUM_BINNING_MODES</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1x1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2x2&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;4x4&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="222"><highlight class="normal">};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binningModeValues[<ref refid="point_grey_8cpp_1a77804f73118c7934d33320d98838a96c" kindref="member">NUM_BINNING_MODES</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>4,</highlight></codeline>
<codeline lineno="228"><highlight class="normal">};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*convertPixelFormatStrings[<ref refid="point_grey_8cpp_1a7d1b6fa54b67628848fc9cf2a4d86352" kindref="member">NUM_CONVERT_PIXEL_FORMATS</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mono8&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Raw16&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mono16&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RGB8&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RGB16&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="237"><highlight class="normal">};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>convertPixelFormatValues[<ref refid="point_grey_8cpp_1a7d1b6fa54b67628848fc9cf2a4d86352" kindref="member">NUM_CONVERT_PIXEL_FORMATS</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_MONO8,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_RAW16,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_MONO16,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_RGB8,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXEL_FORMAT_RGB16,</highlight></codeline>
<codeline lineno="246"><highlight class="normal">};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*propertyTypeStrings[<ref refid="point_grey_8cpp_1a2b6573ab5111e79e03216ce92942e25c" kindref="member">NUM_PROPERTIES</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Brightness&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;AutoExposuure&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Sharpness&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WhiteBalance&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Hue&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Saturation&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Gamma&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Iris&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Focus&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Zoom&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pan&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Tilt&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shutter&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Gain&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TriggerMode&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TriggerDelay&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;FrameRate&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Temperature&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*gigEPropertyTypeStrings[<ref refid="point_grey_8cpp_1a44d77a541523850f608940c22a46ac55" kindref="member">NUM_GIGE_PROPERTIES</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Heartbeat&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;HeartbeatTimeout&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PacketSize&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PacketDelay&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">};</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*triggerModeStrings[<ref refid="point_grey_8cpp_1ac615b62e4dc370d277f98f4e837bf954" kindref="member">NUM_TRIGGER_MODES</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Internal&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ext.<sp/>Standard&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Bulb&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Skip<sp/>frames&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Multi-exposure&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Multi-exposure<sp/>bulb&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Low<sp/>smear&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Overlapped&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Multi-shot&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*GPIOStrings[<ref refid="point_grey_8cpp_1ae1a70432cf02543f2f8e9432d6f0ef0c" kindref="member">NUM_GPIO_PINS</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GPIO_0&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GPIO_1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GPIO_2&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GPIO_3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">};</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><ref refid="point_grey_8cpp_1af783dacc57e23ea8f6dd06e2e85e4420a475496f506c5a8e359073df849517415" kindref="member">TimeStampCamera</ref>,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><ref refid="point_grey_8cpp_1af783dacc57e23ea8f6dd06e2e85e4420a5df3f40dae41b5c850670597ca891180" kindref="member">TimeStampEPICS</ref>,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><ref refid="point_grey_8cpp_1af783dacc57e23ea8f6dd06e2e85e4420aa20b2aee8c016471e3221765b3a1145c" kindref="member">TimeStampHybrid</ref></highlight></codeline>
<codeline lineno="308"><highlight class="normal">}<sp/><ref refid="point_grey_8cpp_1af783dacc57e23ea8f6dd06e2e85e4420" kindref="member">PGTimeStamp_t</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classpoint_grey" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpoint_grey" kindref="compound">pointGrey</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_a_d_driver" kindref="compound">ADDriver</ref></highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpoint_grey" kindref="compound">pointGrey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cameraId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>traceMask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>memoryChannel,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>virtual<sp/>methods<sp/>to<sp/>override<sp/>from<sp/>ADDriver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/>writeInt32(<sp/>asynUser<sp/>*pasynUser,<sp/>epicsInt32<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/>writeFloat64(<sp/>asynUser<sp/>*pasynUser,<sp/>epicsFloat64<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>asynStatus<sp/>readEnum(asynUser<sp/>*pasynUser,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strings[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>severities[],<sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nElements,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*nIn);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>report(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>details);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>imageGrabTask();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shutdown();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyAvail;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>FIRST_PG_PARAM<sp/>PGPropertyAvail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyOnOffAvail;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyOnOff;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyOnePushAvail;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyOnePush;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyAutoAvail;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyManAvail;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyAutoMode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyAbsAvail;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyAbsMode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyValue;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyValueB;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyValueMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyValueMin;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyValueAbs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyValueAbsMax;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPropertyValueAbsMin;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGGigEPropertyValue;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGGigEPropertyValueMax;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGGigEPropertyValueMin;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGVideoMode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGFormat7Mode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGBinningMode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGFrameRate;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPixelFormat;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGConvertPixelFormat;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGTriggerSource;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGTriggerPolarity;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGSoftwareTrigger;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGSkipFrames;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGStrobeSource;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGStrobePolarity;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGStrobeEnable;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGStrobeDelay;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGStrobeDuration;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPacketSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPacketSizeActual;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGMaxPacketSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPacketDelay;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPacketDelayActual;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGPacketResendEnable;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGBandwidth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGTimeStampMode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGCorruptFrames;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGDriverDropped;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGTransmitFailed;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PGDroppedFrames;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LAST_PG_PARAM<sp/>PGDroppedFrames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>methods<sp/>to<sp/>this<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>grabImage();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>startCapture();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>stopCapture();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>asynStatus<sp/>checkError(Error<sp/>error,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>connectCamera();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>disconnectCamera();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>readStatus();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>camera<sp/>property<sp/>control<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setPropertyValue(PropertyType<sp/>propType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,<sp/><ref refid="point_grey_8cpp_1a06247911a7d3dd5967a46aece3b77d68" kindref="member">propValue_t</ref><sp/>valType);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setGigEPropertyValue(GigEPropertyType<sp/>propType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setPropertyAbsValue(PropertyType<sp/>propType,<sp/>epicsFloat64<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setPropertyAutoMode(PropertyType<sp/>propType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setPropertyOnOff(PropertyType<sp/>propType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>onOff);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setPropertyOnePush(PropertyType<sp/>propType);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setVideoMode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setFrameRate(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rate);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setVideoModeAndFrameRate(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameRate);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setImageParams();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setFormat7Params();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setGigEImageParams();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>createStaticEnums();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>createDynamicEnums();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>getAllProperties();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>getAllGigEProperties();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>getGigEConfigParams();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getPixelFormatIndex(PixelFormat<sp/>pixelFormat);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setTrigger();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>softwareTrigger();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>setStrobe();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cameraId_;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>memoryChannel_;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bus_manager" kindref="compound">BusManager</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pBusMgr_;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>PGRGuid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pGuid_;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraBase<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pCameraBase_;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>Camera<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pCamera_;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>GigECamera<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pGigECamera_;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pCameraInfo_;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>Format7Info<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pFormat7Info_;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>GigEImageSettingsInfo<sp/>*pGigEImageSettingsInfo_;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>Image<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pPGRawImage_;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>Image<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pPGConvertedImage_;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>TriggerMode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pTriggerMode_;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>TriggerModeInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pTriggerModeInfo_;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraStats<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pCameraStats_;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>StrobeControl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pStrobeControl_;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>StrobeInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pStrobeInfo_;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>Property<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*allProperties_[<ref refid="point_grey_8cpp_1a2b6573ab5111e79e03216ce92942e25c" kindref="member">NUM_PROPERTIES</ref>];</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyInfo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*allPropInfos_<sp/>[<ref refid="point_grey_8cpp_1a2b6573ab5111e79e03216ce92942e25c" kindref="member">NUM_PROPERTIES</ref>];</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>GigEProperty<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*allGigEProperties_[<ref refid="point_grey_8cpp_1a44d77a541523850f608940c22a46ac55" kindref="member">NUM_GIGE_PROPERTIES</ref>];</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>GigEConfig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pGigEConfig_;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValidVideoModes_;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValidFormat7Modes_;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValidBinningModes_;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValidFrameRates_;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValidPixelFormats_;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValidConvertPixelFormats_;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValidTriggerModes_;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValidTriggerSources_;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValidStrobeSources_;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref><sp/>videoModeEnums_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[NUM_VIDEOMODES];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref><sp/>format7ModeEnums_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[NUM_MODES];</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref><sp/>binningModeEnums_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="point_grey_8cpp_1a77804f73118c7934d33320d98838a96c" kindref="member">NUM_BINNING_MODES</ref>];</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref><sp/>frameRateEnums_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[NUM_FRAMERATES];</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref><sp/>pixelFormatEnums_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[NUM_PIXEL_FORMATS];</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref><sp/>convertPixelFormatEnums_<sp/>[NUM_PIXEL_FORMATS];</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref><sp/>triggerModeEnums_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="point_grey_8cpp_1ac615b62e4dc370d277f98f4e837bf954" kindref="member">NUM_TRIGGER_MODES</ref>];</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref><sp/>triggerSourceEnums_<sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="point_grey_8cpp_1ae1a70432cf02543f2f8e9432d6f0ef0c" kindref="member">NUM_GPIO_PINS</ref>];</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref><sp/>strobeSourceEnums_<sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="point_grey_8cpp_1ae1a70432cf02543f2f8e9432d6f0ef0c" kindref="member">NUM_GPIO_PINS</ref>];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exiting_;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsEventId<sp/>startEventId_;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pRaw_;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">};</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_PG_PARAMS<sp/>((int)(&amp;LAST_PG_PARAM<sp/>-<sp/>&amp;FIRST_PG_PARAM<sp/>+<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="point_grey_8cpp_1a271c779ebbbf99f1e91806fa7f137c1a" kindref="member">pointGreyConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cameraId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>traceMask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>memoryChannel,<sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classpoint_grey" kindref="compound">pointGrey</ref>(<sp/>portName,<sp/>cameraId,<sp/>traceMask,<sp/>memoryChannel,<sp/>maxBuffers,<sp/>maxMemory,<sp/>priority,<sp/>stackSize);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_server_8cpp_1ae7b0efc9c16f820fb943a67625b2018a" kindref="member">c_shutdown</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><ref refid="classpoint_grey" kindref="compound">pointGrey</ref><sp/>*p<sp/>=<sp/>(<ref refid="classpoint_grey" kindref="compound">pointGrey</ref><sp/>*)arg;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="classpoint_grey_1a904abc52db9807744a1aab90d558deb1" kindref="member">shutdown</ref>();</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>imageGrabTaskC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*drvPvt)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpoint_grey" kindref="compound">pointGrey</ref><sp/>*pPvt<sp/>=<sp/>(<ref refid="classpoint_grey" kindref="compound">pointGrey</ref><sp/>*)drvPvt;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="classpoint_grey_1ae003d11855522f847b3d4fa7b473a5e5" kindref="member">imageGrabTask</ref>();</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><ref refid="classpoint_grey_1a8585b81fe1dfec4c5a7e993ba58cd8c8" kindref="member">pointGrey::pointGrey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cameraId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>traceMask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>memoryChannel,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize<sp/>)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_a_d_driver" kindref="compound">ADDriver</ref>(portName,<sp/><ref refid="point_grey_8cpp_1a0968da1d6b313a86b3c837f8b3887eb1" kindref="member">MAX_ADDR</ref>,<sp/><ref refid="point_grey_8cpp_1a4ad5b0ce0b2e9a99a270f35877427e35" kindref="member">NUM_PG_PARAMS</ref>,<sp/>maxBuffers,<sp/>maxMemory,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynEnumMask,<sp/>asynEnumMask,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASYN_CANBLOCK<sp/>|<sp/>ASYN_MULTIDEVICE,<sp/>1,<sp/>priority,<sp/>stackSize),</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>cameraId_(cameraId),<sp/>memoryChannel_(memoryChannel),<sp/>pGuid_(0),<sp/>exiting_(0),<sp/>pRaw_(NULL)</highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pointGrey&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyType<sp/>propType;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(traceMask<sp/>==<sp/>0)<sp/>traceMask<sp/>=<sp/>ASYN_TRACE_ERROR;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>pasynTrace-&gt;setTraceMask(pasynUserSelf,<sp/>traceMask);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1ad171cfbca48fbfc751716b0adbd5f8f3" kindref="member">PGPropertyAvailString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a50ae5223ac71c6e158e466fdeab6038b" kindref="member">PGPropertyAvail</ref>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1abc45e2fc56b70fbe0c76d2032bfb4a12" kindref="member">PGPropertyOnOffAvailString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a03a3ccf4cacebd245577c23f3f083f1c" kindref="member">PGPropertyOnOffAvail</ref>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a68da257380d6ee44918827b5ef0417db" kindref="member">PGPropertyOnOffString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a68c1081ac90854fd617e13b83b835e08" kindref="member">PGPropertyOnOff</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1ad3c9f6ae341771862dba178b8c037f00" kindref="member">PGPropertyOnePushAvailString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a781d7b8e8a9715cb8a8cdc98e001b7ac" kindref="member">PGPropertyOnePushAvail</ref>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a8c5739202e8f76e84c5c7b298ae7a674" kindref="member">PGPropertyOnePushString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a1aed3a675b2ccdf34719c7ca2a96a5cc" kindref="member">PGPropertyOnePush</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a463c0758f7e20628b3457b98efe31931" kindref="member">PGPropertyAutoAvailString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a50decb5b21a5b44b262f2427da4e13c3" kindref="member">PGPropertyAutoAvail</ref>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1ab46b48fa5143d05ae04601f72f55f7df" kindref="member">PGPropertyManAvailString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1aeac0f8bf1772f599bd655de717ffabc5" kindref="member">PGPropertyManAvail</ref>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a84dda8637b7d927c5172ce294ff0c1c2" kindref="member">PGPropertyAutoModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1ad0b3bf36980d2c7720866c5a85b69732" kindref="member">PGPropertyAutoMode</ref>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a073d2a669f50a61937a8db2d366110f5" kindref="member">PGPropertyAbsAvailString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a63f57ed1e0038b9b1acdb7b972ac1047" kindref="member">PGPropertyAbsAvail</ref>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1ab94b0c6d7f61339dd7b48d7750af3be3" kindref="member">PGPropertyAbsModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a2b72e6495dfe45231ac29303af902641" kindref="member">PGPropertyAbsMode</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a4ccc909d30731a090e73ce055267bbcd" kindref="member">PGPropertyValueString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a3a0a732383ef0c7a697ea18f1ae611b4" kindref="member">PGPropertyValue</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1aaba600218321c49fe6ca5ea9fc9ca4a7" kindref="member">PGPropertyValueBString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1ae8dad86581728a440d186f7215a7b83a" kindref="member">PGPropertyValueB</ref>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1ae7423ae68d877845bef89c0a65b887a1" kindref="member">PGPropertyValueMaxString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1ab7109a5b41cb042b6ad012d6c9ea274d" kindref="member">PGPropertyValueMax</ref>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a223e281f38a3262c0d4de1fdec2e5637" kindref="member">PGPropertyValueMinString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a5e343e09316e50747836e51e80ce0c7f" kindref="member">PGPropertyValueMin</ref>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1ae91b1d10dae17bb6d9d749c3f5408908" kindref="member">PGPropertyValueAbsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpoint_grey_1a13b0e4e890ae97e5bff5693f78841d63" kindref="member">PGPropertyValueAbs</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a0d65b9617c63f291193e60e4d031531c" kindref="member">PGPropertyValueAbsMaxString</ref>,<sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpoint_grey_1afe70bd1ca4e33e29b7d95ac98a7ba0df" kindref="member">PGPropertyValueAbsMax</ref>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a41bcac0aa6a893918c187dc0228fe70a" kindref="member">PGPropertyValueAbsMinString</ref>,<sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpoint_grey_1a8ccb2d1d04066c0dac373368d16153a8" kindref="member">PGPropertyValueAbsMin</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1ab8e524ea8d5d3cd73c9526ee3a60e65d" kindref="member">PGGigEPropertyValueString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a1d5eaca85cdf5e2e5910794d667e1c92" kindref="member">PGGigEPropertyValue</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a0c659db52f0961fb61bbabd1b820450b" kindref="member">PGGigEPropertyValueMaxString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a1da5f5c491b764a4086bca99dfcafe10" kindref="member">PGGigEPropertyValueMax</ref>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a4597219169288d160e9f199cc43cfc69" kindref="member">PGGigEPropertyValueMinString</ref>,<sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a2902c949f3287faa1454c83f43aff7b9" kindref="member">PGGigEPropertyValueMin</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a5a40b846efd4e27ad0152a177656b6ac" kindref="member">PGVideoModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a57f1347bcd594f54fd0130025bf0b7fb" kindref="member">PGVideoMode</ref>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a05ddcaf8ad69de46f79f638b60a5f182" kindref="member">PGFormat7ModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a029510048f3c9a2f3bb4acf1e6423051" kindref="member">PGFormat7Mode</ref>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a494a69a8bfb353c854569a1ce41ccbcf" kindref="member">PGBinningModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a542aa32ca6c6f30fe499a88e18915d33" kindref="member">PGBinningMode</ref>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a962cac99b19d54f010bf0c5975a6a45f" kindref="member">PGFrameRateString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a79a2ed83cf0ebd65e9c68051bdd4cddd" kindref="member">PGFrameRate</ref>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a615fcaab3e9f108f019857f0153bfead" kindref="member">PGPixelFormatString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a57b568b83dc44556ed0a5950289b6df9" kindref="member">PGPixelFormat</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a1435c20fc239bfe8cc07b9bad833ef5f" kindref="member">PGConvertPixelFormatString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a872565ea522c2c70b2c6a94d0cad3db3" kindref="member">PGConvertPixelFormat</ref>);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a883ca62bf62a6b58b9c287a2031b51d3" kindref="member">PGTriggerSourceString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1ad413903ad8667c04350abed947e6e1ed" kindref="member">PGTriggerSource</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a98db1873eaa3f862914b49c2bebc0247" kindref="member">PGTriggerPolarityString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a824d9fc7c3eb8b0f53c2c1de560d466d" kindref="member">PGTriggerPolarity</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a580e484c22ecd3ddab31b96aff67c2fd" kindref="member">PGSoftwareTriggerString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a8d1d60832812b04a93a44246e3cd222b" kindref="member">PGSoftwareTrigger</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a7559e6b0ba7e1d0eea12ebe793f64a74" kindref="member">PGSkipFramesString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a071bcf217255e695add34f56159c659c" kindref="member">PGSkipFrames</ref>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1afeb2299661217886bae3f3f3dfb8d158" kindref="member">PGStrobeSourceString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1afc8c4ac61e4dbaf51f93965f6c49cbcd" kindref="member">PGStrobeSource</ref>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1aa3caabfc2eaf3cc697cb23a3bc55155d" kindref="member">PGStrobePolarityString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1abcedc7e80cda881c468c9ce278663dfc" kindref="member">PGStrobePolarity</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a6945943817c633943bfadf210288d0ff" kindref="member">PGStrobeEnableString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a7ab81414e6ac4303b0c34fdc490f61f6" kindref="member">PGStrobeEnable</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a612de0a93ce13f905bcf59ffc0f6004a" kindref="member">PGStrobeDelayString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpoint_grey_1a92b130978fe05dfbf51f4b3e2887f6ff" kindref="member">PGStrobeDelay</ref>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a4c1c786f7cd9e820929620095076734e" kindref="member">PGStrobeDurationString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpoint_grey_1a6472f670704c26903a2494347d93af33" kindref="member">PGStrobeDuration</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a86156288114e044aa72ca9ba134a423c" kindref="member">PGPacketSizeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1ac7dee34f4a0cb3f8ff90dc784c665527" kindref="member">PGPacketSize</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1aa217b7d7a8ec67f8ba6622525fb6b901" kindref="member">PGPacketSizeActualString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a0f268d32bb9ec757fd79f53855751c75" kindref="member">PGPacketSizeActual</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a7b53c8b58b25fc8d74ca2c1051eb0b7c" kindref="member">PGMaxPacketSizeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a33efadffe6207c0bb789df09259411c7" kindref="member">PGMaxPacketSize</ref>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a9af6370943e7461b59cf8631603a504a" kindref="member">PGPacketDelayString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a3e8d201b5f32f6431337b1a003ee9a20" kindref="member">PGPacketDelay</ref>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1aa4fc3be38875ead593676df15fab65e8" kindref="member">PGPacketDelayActualString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1ab1233b9a19c7bca7d7aa8478c11bb574" kindref="member">PGPacketDelayActual</ref>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1acccf6298275921f9fa48620e55ae39bc" kindref="member">PGPacketResendEnableString</ref>,<sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a140a30d45ee5b45f559c05704078df54" kindref="member">PGPacketResendEnable</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a0130477b8e013986b56c3364edb20a7a" kindref="member">PGBandwidthString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/>&amp;<ref refid="classpoint_grey_1af10c7c163fa49e09d65ea6a38a2ed9ac" kindref="member">PGBandwidth</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1af21a00ede6f4567431d4e304d9b3ce3d" kindref="member">PGTimeStampModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a68d9cc3eb74484d167b132973eb0b9e9" kindref="member">PGTimeStampMode</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1ab01dd7e6188489bd4e5d77fff7c94fd8" kindref="member">PGCorruptFramesString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1ae5fbc618db10c0098c567870a78af44a" kindref="member">PGCorruptFrames</ref>);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a18f73b544823e5563fcac6da1842b58c" kindref="member">PGDriverDroppedString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a3000e108a78e226a6e22dc9a1218ed7a" kindref="member">PGDriverDropped</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1a1feee68e5cf641dc95c6b044ac8dcb38" kindref="member">PGTransmitFailedString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1ac021fed7ce75fa32131da88f7672d627" kindref="member">PGTransmitFailed</ref>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>createParam(<ref refid="point_grey_8cpp_1ad7e3371cce09f00947579762bc4f029a" kindref="member">PGDroppedFramesString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/>&amp;<ref refid="classpoint_grey_1a47eca17e9c10e7f3ea44de4167ebcf33" kindref="member">PGDroppedFrames</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>initial<sp/>values<sp/>of<sp/>some<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1af71358738ff1dbe4c9185f105807f799" kindref="member">NDDataType</ref>,<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16aa5f7c86d8f7853be5eb27c00481f93de" kindref="member">NDUInt8</ref>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1abf7b27064b0d69440f16feb1e19f6cf2" kindref="member">NDColorMode</ref>,<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812a7ce7370097e884f4954fc8b3d069a620" kindref="member">NDColorModeMono</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1a72fac0fbaa730672f9a3a6da8c1d1a97" kindref="member">NDArraySizeZ</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a23f8a7537c0c221ed3c5a72af90e276e" kindref="member">ADMinX</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1ae1b0c891ee0ecd596439b29e32e068e4" kindref="member">ADMinY</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a57f1347bcd594f54fd0130025bf0b7fb" kindref="member">PGVideoMode</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a029510048f3c9a2f3bb4acf1e6423051" kindref="member">PGFormat7Mode</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a79a2ed83cf0ebd65e9c68051bdd4cddd" kindref="member">PGFrameRate</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1a9f521abfc93c9ccba2b0e83acace6d0e" kindref="member">ADStringToServer</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&lt;not<sp/>used<sp/>by<sp/>driver&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1adb837da5ddf5ba868ea2dea316254c41" kindref="member">ADStringFromServer</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&lt;not<sp/>used<sp/>by<sp/>driver&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1ad413903ad8667c04350abed947e6e1ed" kindref="member">PGTriggerSource</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1afc8c4ac61e4dbaf51f93965f6c49cbcd" kindref="member">PGStrobeSource</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a542aa32ca6c6f30fe499a88e18915d33" kindref="member">PGBinningMode</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>camera<sp/>control<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>pBusMgr_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_bus_manager" kindref="compound">BusManager</ref>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>pGuid_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PGRGuid;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>pCameraInfo_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CameraInfo;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>pFormat7Info_<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Format7Info;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>pGigEImageSettingsInfo_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GigEImageSettingsInfo;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>pPGRawImage_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Image;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>pPGConvertedImage_<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Image;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>pTriggerMode_<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TriggerMode;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>pTriggerModeInfo_<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TriggerModeInfo;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>pCameraStats_<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CameraStats;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>pStrobeControl_<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StrobeControl;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>pStrobeInfo_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StrobeInfo;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>connectCamera();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/><sp/>camera<sp/>connection<sp/>failed<sp/>(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>status);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>report()<sp/>to<sp/>get<sp/>a<sp/>list<sp/>of<sp/>available<sp/>cameras</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpoint_grey_1ad82328c7fa0ccc585e7e39991a373aa4" kindref="member">report</ref>(<ref refid="namespacemake_adl_1a3f4a3faa9267f79b85de3e74ef54d173" kindref="member">stdout</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>array<sp/>of<sp/>property<sp/>objects,<sp/>one<sp/>for<sp/>each<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="point_grey_8cpp_1a2b6573ab5111e79e03216ce92942e25c" kindref="member">NUM_PROPERTIES</ref>;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propType<sp/>=<sp/>(PropertyType)<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allProperties_[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Property(propType);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allPropInfos_[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PropertyInfo(propType);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllProperties();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;<ref refid="point_grey_8cpp_1a44d77a541523850f608940c22a46ac55" kindref="member">NUM_GIGE_PROPERTIES</ref>;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allGigEProperties_[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GigEProperty();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allGigEProperties_[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]-&gt;propType<sp/>=<sp/>(GigEPropertyType)<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllGigEProperties();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>pGigEConfig_=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GigEConfig();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>getGigEConfigParams();</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>createStaticEnums();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>createDynamicEnums();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>numValidFrameRates_<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(frameRateEnums_[0].</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Undefined1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>frameRateEnums_[0].<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(frameRateEnums_[1].</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Undefined2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>frameRateEnums_[1].<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>numValidPixelFormats_<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(pixelFormatEnums_[0].</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Undefined1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>pixelFormatEnums_[0].<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(pixelFormatEnums_[1].</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Undefined2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>pixelFormatEnums_[1].<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>and<sp/>set<sp/>maximum<sp/>packet<sp/>size<sp/>and<sp/>default<sp/>packet<sp/>delay<sp/>for<sp/>GigE<sp/>cameras</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pGigECamera_)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetSize;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;DiscoverGigEPacketSize(&amp;packetSize);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;DiscoverGigEPacketSize&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>was<sp/>an<sp/>error<sp/>getting<sp/>the<sp/>packet<sp/>size,<sp/>use<sp/>1440<sp/>as<sp/>default;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packetSize<sp/>=<sp/>1440;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>DiscoverGigEPacketSize,<sp/>pGigECamera_=%p,<sp/>packetSize=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>packetSize);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a33efadffe6207c0bb789df09259411c7" kindref="member">PGMaxPacketSize</ref>,<sp/>packetSize);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a3e8d201b5f32f6431337b1a003ee9a20" kindref="member">PGPacketDelay</ref>,<sp/><ref refid="point_grey_8cpp_1af1a73210c98d1a63e7536582cf27b036" kindref="member">DEFAULT_PACKET_DELAY</ref>);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setGigEPropertyValue(PACKET_SIZE,<sp/>packetSize);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setGigEPropertyValue(PACKET_DELAY,<sp/><ref refid="point_grey_8cpp_1af1a73210c98d1a63e7536582cf27b036" kindref="member">DEFAULT_PACKET_DELAY</ref>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>and<sp/>set<sp/>Enable<sp/>Packet<sp/>resend<sp/>property<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pGigEConfig_)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEConfig(pGigEConfig_);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEConfig&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>should<sp/>not<sp/>be<sp/>an<sp/>error<sp/>getting<sp/>the<sp/>config<sp/>parmas,<sp/>but<sp/>in<sp/>case<sp/>set<sp/>some<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGigEConfig_<sp/>-&gt;<sp/>enablePacketResend=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGigEConfig_<sp/>-&gt;<sp/>registerTimeoutRetries<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGigEConfig_-&gt;<sp/>registerTimeout<sp/>=<sp/>20000;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>GetGigEConfig,<sp/>pGigEConfig_=%p,<sp/>packetResendEnable=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigEConfig_,<sp/>pGigEConfig_-&gt;enablePacketResend);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a140a30d45ee5b45f559c05704078df54" kindref="member">PGPacketResendEnable</ref>,<sp/>pGigEConfig_-&gt;enablePacketResend);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>startEventId_<sp/>=<sp/>epicsEventCreate(epicsEventEmpty);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>launch<sp/>image<sp/>read<sp/>task<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsThreadCreate(</highlight><highlight class="stringliteral">&quot;PointGreyImageTask&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadPriorityMedium,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadGetStackSize(epicsThreadStackMedium),</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageGrabTaskC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shutdown<sp/>on<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsAtExit(<ref refid="ffmpeg_server_8cpp_1ae7b0efc9c16f820fb943a67625b2018a" kindref="member">c_shutdown</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>asynStatus<sp/>pointGrey::checkError(Error<sp/>error,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*PGRFunction)</highlight></codeline>
<codeline lineno="708"><highlight class="normal">{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>PGRERROR_OK)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>ERROR<sp/>calling<sp/>%s<sp/>Type=%d<sp/>Description=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>PGRFunction,<sp/>error.GetType(),<sp/>error.GetDescription());</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpoint_grey_1a904abc52db9807744a1aab90d558deb1" kindref="member">pointGrey::shutdown</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>exiting_<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pGuid_)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnectCamera();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCameraBase_;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">asynStatus<sp/>pointGrey::connectCamera(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>Format7Info<sp/>f7Info;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>FC2Version<sp/>version;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>EmbeddedImageInfo<sp/>embeddedInfo;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>InterfaceType<sp/>interfaceType;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCameras;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tempString[sk_maxStringLength];</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;connectCamera&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pBusMgr_-&gt;GetNumOfCameras(&amp;numCameras);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetNumOfCameras&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>BusManager::GetNumOfCameras,<sp/>pBusMgr_=%p,<sp/>numCameras=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pBusMgr_,<sp/>numCameras);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numCameras<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>no<sp/>cameras<sp/>found\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cameraId_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>BusManager::GetCameraFromIndex,<sp/>pBusMgr_=%p,<sp/>pGuid_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pBusMgr_,<sp/>pGuid_);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pBusMgr_-&gt;GetCameraFromIndex(0,<sp/>pGuid_);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetCameraFromIndex&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>BusManager::GetCameraFromSerialNumber,<sp/>pBusMgr_=%p,<sp/>cameraId_=%d,<sp/>pGuid_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pBusMgr_,<sp/>cameraId_,<sp/>pGuid_);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pBusMgr_-&gt;GetCameraFromSerialNumber(cameraId_,<sp/>pGuid_);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetCameraFromSerialNumber&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pBusMgr_-&gt;GetInterfaceTypeFromGuid(pGuid_,<sp/>&amp;interfaceType);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetInterfaceTypeFromGuid&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>BusManager::GetInterfaceTypeFromGuid,<sp/>pBusMgr_=%p,<sp/>interfaceType=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pBusMgr_,<sp/>interfaceType);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>appropriate<sp/>camera<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interfaceType<sp/>==<sp/>INTERFACE_GIGE)<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCameraBase_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GigECamera;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCamera_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGigECamera_<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">GigECamera*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pCameraBase_);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pGigECamera_<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>error<sp/>casting<sp/>camera<sp/>to<sp/>GigECamera\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCameraBase_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Camera;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGigECamera_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCamera_<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">Camera*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pCameraBase_);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCamera_<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>error<sp/>casting<sp/>camera<sp/>to<sp/>Camera\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>to<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::Connect,<sp/>pGuid_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGuid_);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;Connect(pGuid_);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;Connect&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>from<sp/>memory<sp/>channel<sp/>if<sp/>it<sp/>was<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memoryChannel_<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numMemoryChannels;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetMemoryChannelInfo(&amp;numMemoryChannels);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>GetMemoryChannelInfo,<sp/>pCameraBase_=%p,<sp/>numMemoryChannels=%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>numMemoryChannels);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memoryChannel_<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>numMemoryChannels)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>memory<sp/>channel=%d<sp/>invalid,<sp/>numMemoryChannels=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>memoryChannel_,<sp/>numMemoryChannels);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>RestoreFromMemoryChannel,<sp/>pCameraBase_=%p,<sp/>memoryChannel=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>memoryChannel_-1);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;RestoreFromMemoryChannel(memoryChannel_-1);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;RestoreFromMemoryChannel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>camera<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetCameraInfo(pCameraInfo_);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetCameraInfo&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>CameraBase::GetCameraInfo,<sp/>pCameraInfo_=%p,<sp/>pCameraInfo_-&gt;serialNumber=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraInfo_,<sp/>pCameraInfo_-&gt;serialNumber);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(tempString,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tempString),<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>pCameraInfo_-&gt;serialNumber);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1aa4d910fd087c8eb02f3437b18b80bba1" kindref="member">ADSerialNumber</ref>,<sp/>tempString);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1a2deb25acd798e9e0da6c52741a07b915" kindref="member">ADManufacturer</ref>,<sp/>pCameraInfo_-&gt;vendorName);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1a4c15720b7002ec1ff9278058240d82da" kindref="member">ADModel</ref>,<sp/>pCameraInfo_-&gt;modelName);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1a4eadbf94d756dcf7b61d624f791fd516" kindref="member">ADFirmwareVersion</ref>,<sp/>pCameraInfo_-&gt;firmwareVersion);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(tempString,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tempString),<sp/></highlight><highlight class="stringliteral">&quot;%d.%d.%d&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="point_grey_8cpp_1ae578001fe043b4cca7a0edd801cfe9c4" kindref="member">DRIVER_VERSION</ref>,<sp/><ref refid="point_grey_8cpp_1a09d8a9e616d09d45e8f4c3ad80849872" kindref="member">DRIVER_REVISION</ref>,<sp/><ref refid="point_grey_8cpp_1a00a7ebec19bc60e5ee0344109af2fd82" kindref="member">DRIVER_MODIFICATION</ref>);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1a2be0f672f139c59f942bedfd7d94ff0f" kindref="member">NDDriverVersion</ref>,tempString);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>Utilities::GetLibraryVersion(&amp;version);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsSnprintf(tempString,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tempString),<sp/></highlight><highlight class="stringliteral">&quot;%d.%d.%d&quot;</highlight><highlight class="normal">,<sp/>version.major,<sp/>version.minor,<sp/>version.type);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>Utilities::GetLibraryVersion,<sp/>version=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>tempString);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1a89d5bd570163bd569bc6d2a2163da9c2" kindref="member">ADSDKVersion</ref>,<sp/>tempString);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>and<sp/>set<sp/>the<sp/>embedded<sp/>image<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::GetEmbeddedImageInfo,<sp/>&amp;embeddedInfo=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>&amp;embeddedInfo);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetEmbeddedImageInfo(&amp;embeddedInfo);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetEmbeddedImageInfo&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>the<sp/>timestamp<sp/>and<sp/>frame<sp/>counter<sp/>information<sp/>to<sp/>be<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>embeddedInfo.timestamp.onOff<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>embeddedInfo.frameCounter.onOff<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::SetEmbeddedImageInfo,<sp/>&amp;embeddedInfo=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>&amp;embeddedInfo);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;SetEmbeddedImageInfo(&amp;embeddedInfo);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetEmbeddedImageInfo&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal">asynStatus<sp/>pointGrey::disconnectCamera(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;disconnectCamera&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCameraBase_-&gt;IsConnected())<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::Disconnect,<sp/>pCameraBase_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;Disconnect();</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;Disconnect&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s:%s<sp/>disconnect<sp/>camera<sp/>OK\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpoint_grey_1ae003d11855522f847b3d4fa7b473a5e5" kindref="member">pointGrey::imageGrabTask</ref>()</highlight></codeline>
<codeline lineno="881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageCounter;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numImages,<sp/>numImagesCounter;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageMode;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arrayCallbacks;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsTimeStamp<sp/>startTime;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>acquire;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;imageGrabTask&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>acquisition<sp/>active?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>&amp;acquire);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>are<sp/>not<sp/>acquiring<sp/>then<sp/>wait<sp/>for<sp/>a<sp/>semaphore<sp/>that<sp/>is<sp/>given<sp/>when<sp/>acquisition<sp/>is<sp/>started<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!acquire)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5aabf2281b95d16f607f1a7b1c5a8bd" kindref="member">ADStatusIdle</ref>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>a<sp/>signal<sp/>that<sp/>tells<sp/>this<sp/>thread<sp/>that<sp/>the<sp/>transmission</highlight></codeline>
<codeline lineno="903"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>has<sp/>started<sp/>and<sp/>we<sp/>can<sp/>start<sp/>asking<sp/>for<sp/>image<sp/>buffers...<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_FLOW,</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>waiting<sp/>for<sp/>acquire<sp/>to<sp/>start\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>the<sp/>lock<sp/>while<sp/>we<sp/>wait<sp/>for<sp/>an<sp/>event<sp/>that<sp/>says<sp/>acquire<sp/>has<sp/>started,<sp/>then<sp/>lock<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsEventWait(startEventId_);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_FLOW,</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>started!\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a8cdc9e9fbabaadaa3c87108aad2e2895" kindref="member">ADNumImagesCounter</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>current<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;startTime);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>now<sp/>waiting<sp/>for<sp/>an<sp/>image<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5f0661ab013affe1ec15bf297bcf40f" kindref="member">ADStatusWaiting</ref>);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>callbacks<sp/>to<sp/>update<sp/>any<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>grabImage();</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynError)<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remember<sp/>to<sp/>release<sp/>the<sp/>NDArray<sp/>back<sp/>to<sp/>the<sp/>pool<sp/>now</highlight></codeline>
<codeline lineno="928"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>we<sp/>are<sp/>not<sp/>using<sp/>it<sp/>(we<sp/>didn&apos;t<sp/>get<sp/>an<sp/>image...)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRaw_)<sp/>pRaw_-&gt;<ref refid="class_n_d_array_1a0c4c61ea4d44ce97db979d24305c996e" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRaw_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1abec5f5fc9922549d745d7dc7f19243ea" kindref="member">NDArrayCounter</ref>,<sp/>&amp;imageCounter);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>,<sp/>&amp;numImages);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a8cdc9e9fbabaadaa3c87108aad2e2895" kindref="member">ADNumImagesCounter</ref>,<sp/>&amp;numImagesCounter);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a7dcba273d750e726bb3f5e4b7a38f53a" kindref="member">ADImageMode</ref>,<sp/>&amp;imageMode);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1af2354f73acece6ee2427f5069b16fdb5" kindref="member">NDArrayCallbacks</ref>,<sp/>&amp;arrayCallbacks);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageCounter++;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numImagesCounter++;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1abec5f5fc9922549d745d7dc7f19243ea" kindref="member">NDArrayCounter</ref>,<sp/>imageCounter);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a8cdc9e9fbabaadaa3c87108aad2e2895" kindref="member">ADNumImagesCounter</ref>,<sp/>numImagesCounter);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arrayCallbacks)<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>NDArray<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doCallbacksGenericPointer(pRaw_,<sp/><ref refid="classasyn_n_d_array_driver_1a2b2fe51fba9a6ee4146813eac0c47fd1" kindref="member">NDArrayData</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>the<sp/>NDArray<sp/>buffer<sp/>now<sp/>that<sp/>we<sp/>are<sp/>done<sp/>with<sp/>it.</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>After<sp/>the<sp/>callback<sp/>just<sp/>above<sp/>we<sp/>don&apos;t<sp/>need<sp/>it<sp/>anymore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRaw_-&gt;<ref refid="class_n_d_array_1a0c4c61ea4d44ce97db979d24305c996e" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRaw_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>acquisition<sp/>is<sp/>done<sp/>if<sp/>we<sp/>are<sp/>in<sp/>single<sp/>or<sp/>multiple<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((imageMode<sp/>==<sp/><ref refid="_a_d_driver_8h_1a4e304cb4683f0862cc3ca9b5fff213e2a03aaf45614e5ce358814831296e3ca7a" kindref="member">ADImageSingle</ref>)<sp/>||<sp/>((imageMode<sp/>==<sp/><ref refid="_a_d_driver_8h_1a4e304cb4683f0862cc3ca9b5fff213e2adead2fd35be4d7d411f48c04d00d576c" kindref="member">ADImageMultiple</ref>)<sp/>&amp;&amp;<sp/>(numImagesCounter<sp/>&gt;=<sp/>numImages)))<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>stopCapture();</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal">asynStatus<sp/>pointGrey::grabImage()</highlight></codeline>
<codeline lineno="962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows,<sp/>nCols,<sp/>stride;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>PixelFormat<sp/>pixelFormat;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>BayerTileFormat<sp/><ref refid="_a_d_pylon_8cpp_1ad9d146b03dbf0bed289f260de75ee03a" kindref="member">bayerFormat</ref>;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16" kindref="member">NDDataType_t</ref><sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812" kindref="member">NDColorMode_t</ref><sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref>;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>Image<sp/>*pPGImage;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageMetadata<sp/>metaData;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>TimeStamp<sp/>timeStamp;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>convertPixelFormat;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numColors;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dims[3];</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixelSize;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dataSize,<sp/>dataSizePG;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bandwidth;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frameRate;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pData;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDims;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeStampMode;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;grabImage&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unlock<sp/>the<sp/>driver<sp/>while<sp/>we<sp/>wait<sp/>for<sp/>a<sp/>new<sp/>image<sp/>to<sp/>be<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::RetrieveBuffer,<sp/>pCameraBase_=%p,<sp/>pPGRawImage_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pPGRawImage_);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;RetrieveBuffer(pPGRawImage_);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>PGRERROR_OK)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>==<sp/>PGRERROR_ISOCH_NOT_STARTED)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>an<sp/>expected<sp/>error<sp/>if<sp/>acquisition<sp/>was<sp/>stopped<sp/>externally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;RetrieveBuffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>==<sp/>PGRERROR_IMAGE_CONSISTENCY_ERROR)<sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Any<sp/>other<sp/>error<sp/>we<sp/>turn<sp/>off<sp/>acquisition<sp/>and<sp/>return<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>pPGRawImage_-&gt;GetDimensions(&amp;nRows,<sp/>&amp;nCols,<sp/>&amp;stride,<sp/>&amp;pixelFormat,<sp/>&amp;<ref refid="_a_d_pylon_8cpp_1ad9d146b03dbf0bed289f260de75ee03a" kindref="member">bayerFormat</ref>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>metaData<sp/>=<sp/>pPGRawImage_-&gt;GetMetadata();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamp<sp/>=<sp/>pPGRawImage_-&gt;GetTimeStamp();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>pPGImage<sp/>=<sp/>pPGRawImage_;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>bandwidth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>dataSizePG<sp/>=<sp/>pPGRawImage_-&gt;GetReceivedDataSize();</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(FRAME_RATE,<sp/><ref refid="classpoint_grey_1a13b0e4e890ae97e5bff5693f78841d63" kindref="member">PGPropertyValueAbs</ref>,<sp/>&amp;frameRate);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>bandwidth<sp/>=<sp/>frameRate<sp/>*<sp/>dataSizePG<sp/>/<sp/>(1024<sp/>*<sp/>1024);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="classpoint_grey_1af10c7c163fa49e09d65ea6a38a2ed9ac" kindref="member">PGBandwidth</ref>,<sp/>bandwidth);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>incoming<sp/>pixel<sp/>format<sp/>is<sp/>raw[8,12,16]<sp/>or<sp/>mono12<sp/>and<sp/>convertPixelFormat<sp/>is<sp/>non-zero<sp/>then<sp/>convert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>pixel<sp/>format<sp/>of<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a872565ea522c2c70b2c6a94d0cad3db3" kindref="member">PGConvertPixelFormat</ref>,<sp/>&amp;convertPixelFormat);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((pixelFormat<sp/>==<sp/>PIXEL_FORMAT_RAW8)<sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pixelFormat<sp/>==<sp/>PIXEL_FORMAT_RAW12)<sp/><sp/>||</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pixelFormat<sp/>==<sp/>PIXEL_FORMAT_MONO12)<sp/>||</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pixelFormat<sp/>==<sp/>PIXEL_FORMAT_RAW16))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convertPixelFormat<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>Image::Convert,<sp/>pPGRawImage_=%p,<sp/>convertPixelFormat=%d,<sp/>pPGConvertedImage_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pPGRawImage_,<sp/>convertPixelFormat,<sp/>pPGConvertedImage_);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pPGRawImage_-&gt;Convert((PixelFormat)convertPixelFormat,<sp/>pPGConvertedImage_);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;Convert&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPGImage<sp/>=<sp/>pPGConvertedImage_;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>pPGImage-&gt;GetDimensions(&amp;nRows,<sp/>&amp;nCols,<sp/>&amp;stride,<sp/>&amp;pixelFormat,<sp/>&amp;<ref refid="_a_d_pylon_8cpp_1ad9d146b03dbf0bed289f260de75ee03a" kindref="member">bayerFormat</ref>);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pixelFormat)<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PIXEL_FORMAT_MONO8:</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PIXEL_FORMAT_RAW8:</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref><sp/>=<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16aa5f7c86d8f7853be5eb27c00481f93de" kindref="member">NDUInt8</ref>;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>=<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812a7ce7370097e884f4954fc8b3d069a620" kindref="member">NDColorModeMono</ref>;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numColors<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixelSize<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PIXEL_FORMAT_RGB8:</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref><sp/>=<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16aa5f7c86d8f7853be5eb27c00481f93de" kindref="member">NDUInt8</ref>;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>=<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812ab189c5eca6618929ea57f516e3dd5e5d" kindref="member">NDColorModeRGB1</ref>;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numColors<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixelSize<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PIXEL_FORMAT_MONO16:</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PIXEL_FORMAT_RAW16:</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref><sp/>=<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a174cfb9ba69c78761d4d9d25ec1bd8df" kindref="member">NDUInt16</ref>;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>=<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812a7ce7370097e884f4954fc8b3d069a620" kindref="member">NDColorModeMono</ref>;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numColors<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixelSize<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PIXEL_FORMAT_S_MONO16:</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref><sp/>=<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a92d371d7b532347d945fba329d356cd1" kindref="member">NDInt16</ref>;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>=<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812a7ce7370097e884f4954fc8b3d069a620" kindref="member">NDColorModeMono</ref>;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numColors<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixelSize<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PIXEL_FORMAT_RGB16:</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref><sp/>=<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a174cfb9ba69c78761d4d9d25ec1bd8df" kindref="member">NDUInt16</ref>;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>=<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812ab189c5eca6618929ea57f516e3dd5e5d" kindref="member">NDColorModeRGB1</ref>;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numColors<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixelSize<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PIXEL_FORMAT_S_RGB16:</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref><sp/>=<sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16a92d371d7b532347d945fba329d356cd1" kindref="member">NDInt16</ref>;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>=<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812ab189c5eca6618929ea57f516e3dd5e5d" kindref="member">NDColorModeRGB1</ref>;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numColors<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixelSize<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>unsupported<sp/>pixel<sp/>format=0x%x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pixelFormat);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numColors<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nDims<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[0]<sp/>=<sp/>nCols;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[1]<sp/>=<sp/>nRows;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nDims<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[0]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[1]<sp/>=<sp/>nCols;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[2]<sp/>=<sp/>nRows;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>dataSize<sp/>=<sp/>dims[0]<sp/>*<sp/>dims[1]<sp/>*<sp/>pixelSize;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nDims<sp/>==<sp/>3)<sp/>dataSize<sp/>*=<sp/>dims[2];</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>dataSizePG<sp/>=<sp/>pPGImage-&gt;GetDataSize();</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note,<sp/>we<sp/>should<sp/>be<sp/>testing<sp/>for<sp/>equality<sp/>here.<sp/><sp/>However,<sp/>there<sp/>appears<sp/>to<sp/>be<sp/>a<sp/>bug<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SDK<sp/>when<sp/>images<sp/>are<sp/>converted.<sp/><sp/>When<sp/>converting<sp/>from<sp/>raw8<sp/>to<sp/>mono8,<sp/>for<sp/>example,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>returned<sp/>by<sp/>GetDataSize<sp/>is<sp/>the<sp/>size<sp/>of<sp/>an<sp/>RGB8<sp/>image,<sp/>not<sp/>a<sp/>mono8<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataSize<sp/>&gt;<sp/>dataSizePG)<sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>data<sp/>size<sp/>mismatch:<sp/>calculated=%lu,<sp/>reported=%lu\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)dataSize,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)dataSizePG);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>asynError;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1a79c89c00ea62734d82c89e09ea8aa47b" kindref="member">NDArraySizeX</ref>,<sp/>nCols);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1a75753778fe16182d0771e924f05bde33" kindref="member">NDArraySizeY</ref>,<sp/>nRows);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1abf6f05821c7d1a9ab6aef60c9374281e" kindref="member">NDArraySize</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)dataSize);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1af71358738ff1dbe4c9185f105807f799" kindref="member">NDDataType</ref>,<ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nDims<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>=<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812ab189c5eca6618929ea57f516e3dd5e5d" kindref="member">NDColorModeRGB1</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>color<sp/>mode<sp/>is<sp/>currently<sp/>set<sp/>to<sp/>Bayer<sp/>leave<sp/>it<sp/>alone<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1abf7b27064b0d69440f16feb1e19f6cf2" kindref="member">NDColorMode</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref>);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>!=<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812a043dd66624f7f43ea76139f685e73afe" kindref="member">NDColorModeBayer</ref>)<sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref><sp/>=<sp/><ref refid="_n_d_array_8h_1a158fa3df51916c6942849dccdc7c5812a7ce7370097e884f4954fc8b3d069a620" kindref="member">NDColorModeMono</ref>;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1abf7b27064b0d69440f16feb1e19f6cf2" kindref="member">NDColorMode</ref>,<sp/><ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref>);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>pRaw_<sp/>=<sp/><ref refid="classasyn_n_d_array_driver_1ad3969854a37329ef4061cc560e9022dc" kindref="member">pNDArrayPool</ref>-&gt;<ref refid="class_n_d_array_pool_1a26b4360694655c4af6c853c2f3d2ce5e" kindref="member">alloc</ref>(nDims,<sp/>dims,<sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pRaw_)<sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>didn&apos;t<sp/>get<sp/>a<sp/>valid<sp/>buffer<sp/>from<sp/>the<sp/>NDArrayPool<sp/>we<sp/>must<sp/>abort</highlight></codeline>
<codeline lineno="1123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>acquisition<sp/>as<sp/>we<sp/>have<sp/>nowhere<sp/>to<sp/>dump<sp/>the<sp/>data...<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eaa7a82915dd5a2bbab87f1ee1b606c335" kindref="member">ADStatusAborting</ref>);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>[%s]<sp/>ERROR:<sp/>Serious<sp/>problem:<sp/>not<sp/>enough<sp/>buffers<sp/>left!<sp/>Aborting<sp/>acquisition!\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>portName);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asynError);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>pData<sp/>=<sp/>pPGImage-&gt;GetData();</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(pRaw_-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>,<sp/>pData,<sp/>dataSize);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>frame<sp/>number<sp/>into<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>pRaw_-&gt;<ref refid="class_n_d_array_1a62f165653bd0099f31b3d276bdb81d3c" kindref="member">uniqueId</ref><sp/>=<sp/>metaData.embeddedFrameCounter;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a68d9cc3eb74484d167b132973eb0b9e9" kindref="member">PGTimeStampMode</ref>,<sp/>&amp;timeStampMode);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>updateTimeStamp(&amp;pRaw_-&gt;<ref refid="class_n_d_array_1a107537f0e084674fbec9225cf63c3979" kindref="member">epicsTS</ref>);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>timestamps<sp/>in<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(timeStampMode)<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="point_grey_8cpp_1af783dacc57e23ea8f6dd06e2e85e4420a475496f506c5a8e359073df849517415" kindref="member">TimeStampCamera</ref>:</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>Point<sp/>Grey<sp/>cameras<sp/>return<sp/>seconds<sp/>and<sp/>microseconds,<sp/>others<sp/>cycleSeconds,<sp/>etc.<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeStamp.seconds<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRaw_-&gt;<ref refid="class_n_d_array_1ac449943846ba4c5c18aa1ca5559470c2" kindref="member">timeStamp</ref><sp/>=<sp/>(double)timeStamp.seconds<sp/>+<sp/></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)timeStamp.microSeconds<sp/>/<sp/>1.e6;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRaw_-&gt;<ref refid="class_n_d_array_1ac449943846ba4c5c18aa1ca5559470c2" kindref="member">timeStamp</ref><sp/>=<sp/>(double)timeStamp.cycleSeconds<sp/>+<sp/></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)timeStamp.cycleCount<sp/>/<sp/>8000.<sp/>+<sp/></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(double)timeStamp.cycleOffset<sp/>/<sp/>8000.<sp/>/<sp/>3072.;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>camera<sp/>timestamps<sp/>are<sp/>in<sp/>Posix<sp/>epoch.<sp/><sp/>Convert<sp/>to<sp/>EPICS<sp/>epoch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRaw_-&gt;<ref refid="class_n_d_array_1ac449943846ba4c5c18aa1ca5559470c2" kindref="member">timeStamp</ref><sp/>-=<sp/>POSIX_TIME_AT_EPICS_EPOCH;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="point_grey_8cpp_1af783dacc57e23ea8f6dd06e2e85e4420a5df3f40dae41b5c850670597ca891180" kindref="member">TimeStampEPICS</ref>:</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRaw_-&gt;<ref refid="class_n_d_array_1ac449943846ba4c5c18aa1ca5559470c2" kindref="member">timeStamp</ref><sp/>=<sp/>pRaw_-&gt;<ref refid="class_n_d_array_1a107537f0e084674fbec9225cf63c3979" kindref="member">epicsTS</ref>.secPastEpoch<sp/>+<sp/>pRaw_-&gt;<ref refid="class_n_d_array_1a107537f0e084674fbec9225cf63c3979" kindref="member">epicsTS</ref>.nsec/1e9;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="point_grey_8cpp_1af783dacc57e23ea8f6dd06e2e85e4420aa20b2aee8c016471e3221765b3a1145c" kindref="member">TimeStampHybrid</ref>:</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now<sp/>we<sp/>just<sp/>use<sp/>EPICS<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRaw_-&gt;<ref refid="class_n_d_array_1ac449943846ba4c5c18aa1ca5559470c2" kindref="member">timeStamp</ref><sp/>=<sp/>pRaw_-&gt;<ref refid="class_n_d_array_1a107537f0e084674fbec9225cf63c3979" kindref="member">epicsTS</ref>.secPastEpoch<sp/>+<sp/>pRaw_-&gt;<ref refid="class_n_d_array_1a107537f0e084674fbec9225cf63c3979" kindref="member">epicsTS</ref>.nsec/1e9;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>any<sp/>attributes<sp/>that<sp/>have<sp/>been<sp/>defined<sp/>for<sp/>this<sp/>driver<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1a7492ba858d885e2ba226a1c7ef9dcf72" kindref="member">getAttributes</ref>(pRaw_-&gt;<ref refid="class_n_d_array_1af5aad7b41118f465621cf045ed957469" kindref="member">pAttributeList</ref>);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>the<sp/>status<sp/>to<sp/>be<sp/>readout...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea5003d693acdadfbc99a71af956993290" kindref="member">ADStatusReadout</ref>);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>pRaw_-&gt;<ref refid="class_n_d_array_1af5aad7b41118f465621cf045ed957469" kindref="member">pAttributeList</ref>-&gt;<ref refid="class_n_d_attribute_list_1aa86fbdd59e20b734b86b2464f470d752" kindref="member">add</ref>(</highlight><highlight class="stringliteral">&quot;ColorMode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Color<sp/>mode&quot;</highlight><highlight class="normal">,<sp/><ref refid="_n_d_attribute_8h_1a8a795995acde8458f43ac9b01376ef07a52a96048ab842e5ee55012e5abd38088" kindref="member">NDAttrInt32</ref>,<sp/>&amp;<ref refid="_a_d_pylon_8cpp_1a3c447dc29e8a7c4be4fda5f438b28904" kindref="member">colorMode</ref>);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal">asynStatus<sp/><ref refid="classpoint_grey_1a52b94fc43b333cf4aeaac9b8a08c8b2f" kindref="member">pointGrey::writeInt32</ref>(<sp/>asynUser<sp/>*pasynUser,<sp/>epicsInt32<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addr;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyType<sp/>propType;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;writeInt32&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>pasynManager-&gt;getAddr(pasynUser,<sp/>&amp;addr);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr<sp/>&lt;<sp/>0)<sp/>addr=0;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>propType<sp/>=<sp/>(PropertyType)<sp/>addr;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>value<sp/>in<sp/>the<sp/>parameter<sp/>library.<sp/><sp/>This<sp/>may<sp/>change<sp/>later<sp/>but<sp/>that&apos;s<sp/>OK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>acquisition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>startCapture();</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>stopCapture();</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1a23f8a7537c0c221ed3c5a72af90e276e" kindref="member">ADMinX</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1ae1b0c891ee0ecd596439b29e32e068e4" kindref="member">ADMinY</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a029510048f3c9a2f3bb4acf1e6423051" kindref="member">PGFormat7Mode</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a57b568b83dc44556ed0a5950289b6df9" kindref="member">PGPixelFormat</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a542aa32ca6c6f30fe499a88e18915d33" kindref="member">PGBinningMode</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1ac7dee34f4a0cb3f8ff90dc784c665527" kindref="member">PGPacketSize</ref>)<sp/><sp/>||</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a3e8d201b5f32f6431337b1a003ee9a20" kindref="member">PGPacketDelay</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a140a30d45ee5b45f559c05704078df54" kindref="member">PGPacketResendEnable</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setImageParams();</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a3a0a732383ef0c7a697ea18f1ae611b4" kindref="member">PGPropertyValue</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setPropertyValue(propType,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,<sp/><ref refid="point_grey_8cpp_1a06247911a7d3dd5967a46aece3b77d68ae6ed6436d803389b011fb064995ebe72" kindref="member">propValueA</ref>);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1ae8dad86581728a440d186f7215a7b83a" kindref="member">PGPropertyValueB</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setPropertyValue(propType,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,<sp/><ref refid="point_grey_8cpp_1a06247911a7d3dd5967a46aece3b77d68a6b3f5244c9acacc5f348b4313c390f75" kindref="member">propValueB</ref>);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1ad0b3bf36980d2c7720866c5a85b69732" kindref="member">PGPropertyAutoMode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setPropertyAutoMode(propType,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a68c1081ac90854fd617e13b83b835e08" kindref="member">PGPropertyOnOff</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setPropertyOnOff(propType,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a1aed3a675b2ccdf34719c7ca2a96a5cc" kindref="member">PGPropertyOnePush</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setPropertyOnePush(propType);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a57f1347bcd594f54fd0130025bf0b7fb" kindref="member">PGVideoMode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setVideoMode(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a79a2ed83cf0ebd65e9c68051bdd4cddd" kindref="member">PGFrameRate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setFrameRate(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1ae191abe1436e6dd02510fcbbac59dbc1" kindref="member">ADTriggerMode</ref>)<sp/><sp/>||<sp/></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>)<sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1a25e11dff81ea84715fc8fe5ca290bacb" kindref="member">ADNumExposures</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a071bcf217255e695add34f56159c659c" kindref="member">PGSkipFrames</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setTrigger();</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a8d1d60832812b04a93a44246e3cd222b" kindref="member">PGSoftwareTrigger</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>softwareTrigger();</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1afc8c4ac61e4dbaf51f93965f6c49cbcd" kindref="member">PGStrobeSource</ref>)<sp/>||<sp/></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a7ab81414e6ac4303b0c34fdc490f61f6" kindref="member">PGStrobeEnable</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1abcedc7e80cda881c468c9ce278663dfc" kindref="member">PGStrobePolarity</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setStrobe();</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1adbd8c8af9cf7a17913f16ecd0252eaba" kindref="member">ADReadStatus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>readStatus();</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>parameter<sp/>belongs<sp/>to<sp/>a<sp/>base<sp/>class<sp/>call<sp/>its<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>&lt;<sp/><ref refid="point_grey_8cpp_1a0e33566ac55fe207193900546d7bcae8" kindref="member">FIRST_PG_PARAM</ref>)<sp/>status<sp/>=<sp/><ref refid="class_a_d_driver_1abef6916bb90d032a1aeb6894adef12a6" kindref="member">ADDriver::writeInt32</ref>(pasynUser,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACEIO_DRIVER,<sp/></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>function=%d,<sp/>addr=%d,<sp/>value=%d,<sp/>status=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>addr,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,<sp/>status);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks(addr);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal">asynStatus<sp/><ref refid="classpoint_grey_1a5d717b53647b4be2897dd5350e37f42f" kindref="member">pointGrey::writeFloat64</ref>(<sp/>asynUser<sp/>*pasynUser,<sp/>epicsFloat64<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addr;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyType<sp/>propertyType;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;writeFloat64&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>pasynManager-&gt;getAddr(pasynUser,<sp/>&amp;addr);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr<sp/>&lt;<sp/>0)<sp/>addr=0;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>propertyType<sp/>=<sp/>(PropertyType)addr;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>value<sp/>in<sp/>the<sp/>parameter<sp/>library.<sp/><sp/>This<sp/>may<sp/>change<sp/>later<sp/>but<sp/>that&apos;s<sp/>OK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setDoubleParam(addr,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a13b0e4e890ae97e5bff5693f78841d63" kindref="member">PGPropertyValueAbs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setPropertyAbsValue(propertyType,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyType<sp/>=<sp/>SHUTTER;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Camera<sp/>units<sp/>are<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setPropertyAbsValue(propertyType,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>*1000.);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1af7a169a1ab5a9069c5d556bf5c7ac387" kindref="member">ADGain</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyType<sp/>=<sp/>GAIN;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setPropertyAbsValue(propertyType,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1a8d5333aa86509cbd8f5fd824e79b2799" kindref="member">ADAcquirePeriod</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyType<sp/>=<sp/>FRAME_RATE;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Camera<sp/>units<sp/>are<sp/>fps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setPropertyAbsValue(propertyType,<sp/>1./<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a92b130978fe05dfbf51f4b3e2887f6ff" kindref="member">PGStrobeDelay</ref>)<sp/><sp/>||<sp/></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a6472f670704c26903a2494347d93af33" kindref="member">PGStrobeDuration</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>setStrobe();</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>parameter<sp/>belongs<sp/>to<sp/>a<sp/>base<sp/>class<sp/>call<sp/>its<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>&lt;<sp/><ref refid="point_grey_8cpp_1a0e33566ac55fe207193900546d7bcae8" kindref="member">FIRST_PG_PARAM</ref>)<sp/>status<sp/>=<sp/>ADDriver::writeFloat64(pasynUser,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUser,<sp/>ASYN_TRACEIO_DRIVER,<sp/></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>function=%d,<sp/>addr=%d,<sp/>value=%f,<sp/>status=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>addr,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,<sp/>status);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks(addr);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal">asynStatus<sp/><ref refid="classpoint_grey_1ae04c0fe04d64c357673002f03712f130" kindref="member">pointGrey::readEnum</ref>(asynUser<sp/>*pasynUser,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strings[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>severities[],<sp/></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nElements,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*nIn)</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref><sp/>*pEnum;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numEnums;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a57f1347bcd594f54fd0130025bf0b7fb" kindref="member">PGVideoMode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>videoModeEnums_;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numEnums<sp/>=<sp/>numValidVideoModes_;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a029510048f3c9a2f3bb4acf1e6423051" kindref="member">PGFormat7Mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>format7ModeEnums_;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numEnums<sp/>=<sp/>numValidFormat7Modes_;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a542aa32ca6c6f30fe499a88e18915d33" kindref="member">PGBinningMode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>binningModeEnums_;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numEnums<sp/>=<sp/>numValidBinningModes_;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a79a2ed83cf0ebd65e9c68051bdd4cddd" kindref="member">PGFrameRate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>frameRateEnums_;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numEnums<sp/>=<sp/>numValidFrameRates_;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a57b568b83dc44556ed0a5950289b6df9" kindref="member">PGPixelFormat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>pixelFormatEnums_;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numEnums<sp/>=<sp/>numValidPixelFormats_;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1a872565ea522c2c70b2c6a94d0cad3db3" kindref="member">PGConvertPixelFormat</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>convertPixelFormatEnums_;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numEnums<sp/>=<sp/>numValidConvertPixelFormats_;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_a_d_driver_1ae191abe1436e6dd02510fcbbac59dbc1" kindref="member">ADTriggerMode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>triggerModeEnums_;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numEnums<sp/>=<sp/>numValidTriggerModes_;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1ad413903ad8667c04350abed947e6e1ed" kindref="member">PGTriggerSource</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>triggerSourceEnums_;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numEnums<sp/>=<sp/>numValidTriggerSources_;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classpoint_grey_1afc8c4ac61e4dbaf51f93965f6c49cbcd" kindref="member">PGStrobeSource</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>strobeSourceEnums_;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numEnums<sp/>=<sp/>numValidStrobeSources_;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*nIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/>((<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;numEnums)<sp/>&amp;&amp;<sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nElements));<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strings[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>])<sp/>free(strings[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strings[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>epicsStrDup(pEnum-&gt;<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>pEnum-&gt;<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>severities[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum++;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>*nIn<sp/>=<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal">asynStatus<sp/>pointGrey::setPropertyAutoMode(PropertyType<sp/>propType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>Property<sp/>*pProperty<sp/>=<sp/>allProperties_[propType];</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyInfo<sp/>*pPropInfo<sp/>=<sp/>allPropInfos_[propType];</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;setPropertyAutoMode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>check<sp/>if<sp/>the<sp/>propertyType<sp/>is<sp/>valid<sp/>for<sp/>this<sp/>camera<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pProperty-&gt;present)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>desired<sp/>mode<sp/>is<sp/>even<sp/>supported<sp/>by<sp/>the<sp/>camera<sp/>on<sp/>this<sp/>propertyType<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>not,<sp/>return<sp/>with<sp/>no<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pPropInfo-&gt;manualSupported)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pPropInfo-&gt;autoSupported)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>propertyType<sp/>mode<sp/>to<sp/>the<sp/>camera<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>pProperty-&gt;autoManualMode<sp/>=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::SetProperty,<sp/>pCameraBase_=%p,<sp/>pProperty=%p,<sp/>pProperty-&gt;type=%d,<sp/>pProperty-&gt;autoManualMode=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pProperty,<sp/>pProperty-&gt;type,<sp/>pProperty-&gt;autoManualMode);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;SetProperty(pProperty);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetProperty&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>all<sp/>properties<sp/>to<sp/>see<sp/>if<sp/>any<sp/>settings<sp/>have<sp/>changed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllProperties();</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal">asynStatus<sp/>pointGrey::setPropertyOnOff(PropertyType<sp/>propType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>onOff)</highlight></codeline>
<codeline lineno="1407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>Property<sp/>*pProperty<sp/>=<sp/>allProperties_[propType];</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyInfo<sp/>*pPropInfo<sp/>=<sp/>allPropInfos_[propType];</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;setPropertyAutoMode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>check<sp/>if<sp/>the<sp/>propertyType<sp/>is<sp/>valid<sp/>for<sp/>this<sp/>camera<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pProperty-&gt;present)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>onOff<sp/>is<sp/>supported<sp/>by<sp/>the<sp/>camera<sp/>on<sp/>this<sp/>propertyType<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pPropInfo-&gt;onOffSupported)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>onOff<sp/>mode<sp/>to<sp/>the<sp/>camera<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>pProperty-&gt;onOff<sp/>=<sp/>onOff<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::SetProperty,<sp/>pCameraBase_=%p,<sp/>pProperty=%p,<sp/>pProperty-&gt;type=%d,<sp/>pProperty-&gt;onOff=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pProperty,<sp/>pProperty-&gt;type,<sp/>pProperty-&gt;onOff);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;SetProperty(pProperty);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetProperty&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>all<sp/>properties<sp/>to<sp/>see<sp/>if<sp/>any<sp/>settings<sp/>have<sp/>changed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllProperties();</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal">asynStatus<sp/>pointGrey::setPropertyOnePush(PropertyType<sp/>propType)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>Property<sp/>*pProperty<sp/>=<sp/>allProperties_[propType];</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyInfo<sp/>*pPropInfo<sp/>=<sp/>allPropInfos_[propType];</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;setPropertyAutoMode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>check<sp/>if<sp/>the<sp/>propertyType<sp/>is<sp/>valid<sp/>for<sp/>this<sp/>camera<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pProperty-&gt;present)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>onePush<sp/>is<sp/>supported<sp/>by<sp/>the<sp/>camera<sp/>on<sp/>this<sp/>propertyType<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pPropInfo-&gt;onePushSupported)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>onePush<sp/>to<sp/>the<sp/>camera<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>pProperty-&gt;onePush<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::SetProperty,<sp/>pCameraBase_=%p,<sp/>pProperty=%p,<sp/>pProperty-&gt;type=%d,<sp/>pProperty-&gt;onePush=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pProperty,<sp/>pProperty-&gt;type,<sp/>pProperty-&gt;onePush);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;SetProperty(pProperty);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>onePush<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>pProperty-&gt;onePush<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetProperty&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>all<sp/>properties<sp/>to<sp/>see<sp/>if<sp/>any<sp/>settings<sp/>have<sp/>changed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllProperties();</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal">asynStatus<sp/>pointGrey::setPropertyValue(PropertyType<sp/>propType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,<sp/><ref refid="point_grey_8cpp_1a06247911a7d3dd5967a46aece3b77d68" kindref="member">propValue_t</ref><sp/>valType)</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>Property<sp/>*pProperty<sp/>=<sp/>allProperties_[propType];</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyInfo<sp/>*pPropInfo<sp/>=<sp/>allPropInfos_[propType];</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;setPropertyValue&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>check<sp/>if<sp/>the<sp/>propertyType<sp/>is<sp/>valid<sp/>for<sp/>this<sp/>camera<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pProperty-&gt;present)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>absolute<sp/>mode<sp/>control<sp/>for<sp/>this<sp/>propertyType<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>pProperty-&gt;absControl<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>value<sp/>is<sp/>within<sp/>the<sp/>expected<sp/>boundaries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)pPropInfo-&gt;min<sp/>||<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)pPropInfo-&gt;max)<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>error<sp/>setting<sp/>propertyType<sp/>%s,<sp/>value<sp/>%d<sp/>is<sp/>out<sp/>of<sp/>range<sp/>[%d..%d]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>propertyTypeStrings[propType],<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,<sp/>pPropInfo-&gt;min,<sp/>pPropInfo-&gt;max);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valType<sp/>==<sp/><ref refid="point_grey_8cpp_1a06247911a7d3dd5967a46aece3b77d68ae6ed6436d803389b011fb064995ebe72" kindref="member">propValueA</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProperty-&gt;valueA<sp/>=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProperty-&gt;valueB<sp/>=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::SetProperty,<sp/>pCameraBase_=%p,<sp/>pProperty=%p,<sp/>pProperty-&gt;type=%d,<sp/>pProperty-&gt;valueA=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pProperty,<sp/>pProperty-&gt;type,<sp/>pProperty-&gt;valueA);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;SetProperty(pProperty);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetProperty&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>all<sp/>properties<sp/>to<sp/>see<sp/>if<sp/>any<sp/>settings<sp/>have<sp/>changed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllProperties();</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal">asynStatus<sp/>pointGrey::setGigEPropertyValue(GigEPropertyType<sp/>propType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>GigEProperty<sp/>*pProperty<sp/>=<sp/>allGigEProperties_[propType];</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;setGigEPropertyValue&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pGigECamera_<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>check<sp/>if<sp/>the<sp/>propertyType<sp/>is<sp/>writeable<sp/>for<sp/>this<sp/>camera<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pProperty-&gt;isWritable)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>value<sp/>is<sp/>within<sp/>the<sp/>expected<sp/>boundaries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)pProperty-&gt;min<sp/>||<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)pProperty-&gt;max)<sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>error<sp/>setting<sp/>propertyType<sp/>%s,<sp/>value<sp/>%d<sp/>is<sp/>out<sp/>of<sp/>range<sp/>[%d..%d]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>gigEPropertyTypeStrings[propType],<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,<sp/>pProperty-&gt;min,<sp/>pProperty-&gt;max);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>pProperty-&gt;value<sp/>=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::SetGigEProperty,<sp/>pGigECamera_=%p,<sp/>pProperty=%p,<sp/>pProperty-&gt;propType=%d,<sp/>pProperty-&gt;value=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>pProperty,<sp/>pProperty-&gt;propType,<sp/>pProperty-&gt;value);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;SetGigEProperty(pProperty);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetGigeEProperty&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>all<sp/>properties<sp/>to<sp/>see<sp/>if<sp/>any<sp/>settings<sp/>have<sp/>changed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllProperties();</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllGigEProperties();</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal">asynStatus<sp/>pointGrey::setPropertyAbsValue(PropertyType<sp/>propType,<sp/>epicsFloat64<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>Property<sp/>*pProperty<sp/>=<sp/>allProperties_[propType];</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyInfo<sp/>*pPropInfo<sp/>=<sp/>allPropInfos_[propType];</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;setPropertyAbsValue&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>check<sp/>if<sp/>the<sp/>propertyType<sp/>is<sp/>valid<sp/>for<sp/>this<sp/>camera<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pProperty-&gt;present)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>specific<sp/>propertyType<sp/>supports<sp/>absolute<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pPropInfo-&gt;absValSupported)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>absolute<sp/>mode<sp/>control<sp/>for<sp/>this<sp/>propertyType<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/>pProperty-&gt;absControl<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>value<sp/>is<sp/>within<sp/>the<sp/>expected<sp/>boundaries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>pPropInfo-&gt;absMin<sp/>||<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&gt;<sp/>pPropInfo-&gt;absMax)<sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>error<sp/>setting<sp/>propertyType<sp/>%s,<sp/>value<sp/>%.5f<sp/>is<sp/>out<sp/>of<sp/>range<sp/>[%.3f..%.3f]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>propertyTypeStrings[propType],<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,<sp/>pPropInfo-&gt;absMin,<sp/>pPropInfo-&gt;absMax);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>propertyType<sp/>value<sp/>in<sp/>the<sp/>camera<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/>pProperty-&gt;absValue<sp/>=<sp/>(float)<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::SetProperty,<sp/>pCameraBase_=%p,<sp/>pProperty=%p,<sp/>pProperty-&gt;type=%d,<sp/>pProperty-&gt;absValue=%f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pProperty,<sp/>pProperty-&gt;type,<sp/>pProperty-&gt;absValue);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;SetProperty(pProperty);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetProperty&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>error<sp/>setting<sp/>propertyType<sp/>%s,<sp/>value<sp/>%.5f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>propertyTypeStrings[propType],<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>all<sp/>properties<sp/>to<sp/>see<sp/>if<sp/>any<sp/>settings<sp/>have<sp/>changed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllProperties();</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal">asynStatus<sp/>pointGrey::setVideoMode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="1579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameRate;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>frame<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a79a2ed83cf0ebd65e9c68051bdd4cddd" kindref="member">PGFrameRate</ref>,<sp/>&amp;frameRate);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setVideoModeAndFrameRate(mode,<sp/>frameRate);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1586"><highlight class="normal">asynStatus<sp/>pointGrey::setFrameRate(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameRate)</highlight></codeline>
<codeline lineno="1587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>videoMode;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>video<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a57f1347bcd594f54fd0130025bf0b7fb" kindref="member">PGVideoMode</ref>,<sp/>&amp;videoMode);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setVideoModeAndFrameRate(videoMode,<sp/>frameRate);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1594"><highlight class="normal">asynStatus<sp/>pointGrey::setVideoModeAndFrameRate(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>videoModeIn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameRateIn)</highlight></codeline>
<codeline lineno="1595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resumeAcquire;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/>FrameRate<sp/>frameRate<sp/>=<sp/>(FrameRate)frameRateIn;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/>VideoMode<sp/>videoMode<sp/>=<sp/>(VideoMode)videoModeIn;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supported;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;setVideoModeAndFrameRate&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCamera_<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VIDEOMODE_FORMAT7<sp/>must<sp/>be<sp/>treated<sp/>differently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(videoMode<sp/>==<sp/>VIDEOMODE_FORMAT7)<sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setImageParams();</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Must<sp/>stop<sp/>capture<sp/>before<sp/>changing<sp/>the<sp/>video<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>Camera::StopCapture,<sp/>pCamera_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;StopCapture();</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resumeAcquire<sp/>=<sp/>(error<sp/>==<sp/>PGRERROR_OK);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Attempt<sp/>to<sp/>write<sp/>the<sp/>video<sp/>mode<sp/>to<sp/>camera<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>Camera::SetVideoModeAndFrameRate,<sp/>pCamera_=%p,<sp/>videoMode=%d,<sp/>frameRate=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_,<sp/>videoMode,<sp/>frameRate);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;SetVideoModeAndFrameRate(videoMode,<sp/>frameRate);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetVideoModeAndFrameRate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resumeAcquire)<sp/>{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>Camera::StartCapture,<sp/>pCamera_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;StartCapture();</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;StartCapture&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetVideoModeAndFrameRateInfo(videoMode,<sp/>frameRate,<sp/>&amp;supported);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetVideoModeAndFrameRateInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>Camera::GetVideoModeAndFrameRateInfo,<sp/>pCamera_=%p,<sp/>videoMode=%d,<sp/>frameRate=%d,<sp/>supported=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_,<sp/>videoMode,<sp/>frameRate,<sp/>supported);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!supported)<sp/>{</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>camera<sp/>does<sp/>not<sp/>support<sp/>mode<sp/>%d<sp/>with<sp/>framerate<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>videoMode,<sp/>frameRate);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>video<sp/>mode<sp/>changes<sp/>the<sp/>supported<sp/>values<sp/>of<sp/>frame<sp/>rate<sp/>change<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDynamicEnums();</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>video<sp/>mode<sp/>changes<sp/>the<sp/>available<sp/>properties<sp/>can<sp/>also<sp/>change<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getAllProperties();</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointGrey::getPixelFormatIndex(PixelFormat<sp/>pixelFormat)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>pixel<sp/>format<sp/>index<sp/>corresponding<sp/>to<sp/>the<sp/>actual<sp/>pixelFormat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;(int)NUM_PIXEL_FORMATS;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixelFormatValues[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>==<sp/>pixelFormat)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal">asynStatus<sp/>pointGrey::setImageParams()</highlight></codeline>
<codeline lineno="1662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;setImageParams&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCamera_)<sp/></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setFormat7Params();</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pGigECamera_)<sp/></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setGigEImageParams();</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>unknown<sp/>camera<sp/>type\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal">asynStatus<sp/>pointGrey::setFormat7Params()</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>videoMode;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>Format7ImageSettings<sp/>f7Settings;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>Format7PacketInfo<sp/>f7PacketInfo;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>PixelFormat<sp/>pixelFormat;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supported;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>f7SettingsValid;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resumeAcquire;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f7Mode;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itemp;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percentage;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetSize;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetSizeActual;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeX,<sp/>sizeY,<sp/>minX,<sp/>minY;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>hsMax,<sp/>vsMax,<sp/>hsUnit,<sp/>vsUnit;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>hpMax,<sp/>vpMax,<sp/>hpUnit,<sp/>vpUnit;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;setFormat7Params&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pCamera_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>current<sp/>video<sp/>mode<sp/>from<sp/>EPICS.<sp/><sp/>It<sp/>may<sp/>have<sp/>just<sp/>been<sp/>changed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a57f1347bcd594f54fd0130025bf0b7fb" kindref="member">PGVideoMode</ref>,<sp/>&amp;videoMode);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>not<sp/>format<sp/>7<sp/>then<sp/>silently<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(videoMode<sp/>!=<sp/>VIDEOMODE_FORMAT7)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a029510048f3c9a2f3bb4acf1e6423051" kindref="member">PGFormat7Mode</ref>,<sp/>&amp;f7Mode);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>format7<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>pFormat7Info_-&gt;mode<sp/>=<sp/>(Mode)f7Mode;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetFormat7Info(pFormat7Info_,<sp/>&amp;supported);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetFormat7Info&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>Camera::GetFormat7Info,<sp/>pCamera_=%p,<sp/>pFormat7Info_=%p,<sp/>supported=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_,<sp/>pFormat7Info_,<sp/>supported);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!supported)<sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,<sp/></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>camera<sp/>does<sp/>not<sp/>support<sp/>mode<sp/>Format7<sp/>mode<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>f7Mode);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/>&amp;sizeX);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>,<sp/>&amp;sizeY);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a23f8a7537c0c221ed3c5a72af90e276e" kindref="member">ADMinX</ref>,<sp/>&amp;minX);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1ae1b0c891ee0ecd596439b29e32e068e4" kindref="member">ADMinY</ref>,<sp/>&amp;minY);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a57b568b83dc44556ed0a5950289b6df9" kindref="member">PGPixelFormat</ref>,<sp/>&amp;itemp);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>pixelFormat<sp/>=<sp/>(PixelFormat)itemp;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>size<sp/>limits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>hsMax<sp/>=<sp/>pFormat7Info_-&gt;maxWidth;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>vsMax<sp/>=<sp/>pFormat7Info_-&gt;maxHeight;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/>hsMax);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>,<sp/>vsMax);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>size<sp/>units<sp/>(minimum<sp/>increment)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>hsUnit<sp/>=<sp/>pFormat7Info_-&gt;imageHStepSize;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>vsUnit<sp/>=<sp/>pFormat7Info_-&gt;imageVStepSize;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>offset<sp/>units<sp/>(minimum<sp/>increment)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>hpUnit<sp/>=<sp/>pFormat7Info_-&gt;offsetHStepSize;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>vpUnit<sp/>=<sp/>pFormat7Info_-&gt;offsetVStepSize;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>logic<sp/>probably<sp/>needs<sp/>work!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>hpMax<sp/>=<sp/>hsMax;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>vpMax<sp/>=<sp/>vsMax;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACEIO_DRIVER,<sp/></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s<sp/>hsMax=%d,<sp/>vsMax=%d,<sp/>hsUnit=%d,<sp/>vsUnit=%d,<sp/>hpMax=%d,<sp/>vpMax=%d,<sp/>hpUnit=%d,<sp/>vpUnit=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>hsMax,<sp/>vsMax,<sp/>hsUnit,<sp/>vsUnit,<sp/><sp/>hpMax,<sp/>vpMax,<sp/>hpUnit,<sp/>vpUnit);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>the<sp/>requested<sp/>values<sp/>to<sp/>obey<sp/>the<sp/>increment<sp/>and<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeX<sp/>%<sp/>hsUnit)<sp/>sizeX<sp/>=<sp/>(sizeX/hsUnit)<sp/>*<sp/>hsUnit;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeY<sp/>%<sp/>vsUnit)<sp/>sizeY<sp/>=<sp/>(sizeY/vsUnit)<sp/>*<sp/>vsUnit;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minX<sp/>%<sp/>hpUnit)<sp/><sp/>minX<sp/><sp/>=<sp/>(minX/hpUnit)<sp/><sp/>*<sp/>hpUnit;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minY<sp/>%<sp/>vpUnit)<sp/><sp/>minY<sp/><sp/>=<sp/>(minY/vpUnit)<sp/><sp/>*<sp/>vpUnit;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeX<sp/>&lt;<sp/>hsUnit)<sp/>sizeX<sp/>=<sp/>hsUnit;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeX<sp/>&gt;<sp/>hsMax)<sp/><sp/>sizeX<sp/>=<sp/>hsMax;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeY<sp/>&lt;<sp/>vsUnit)<sp/>sizeY<sp/>=<sp/>vsUnit;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeY<sp/>&gt;<sp/>vsMax)<sp/><sp/>sizeY<sp/>=<sp/>vsMax;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minX<sp/>&lt;<sp/>0)<sp/>minX<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minX<sp/>&gt;<sp/>hpMax)<sp/><sp/>minX<sp/>=<sp/>hpMax;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minY<sp/>&lt;<sp/>0)<sp/>minY<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minY<sp/>&gt;<sp/>vpMax)<sp/><sp/>minY<sp/>=<sp/>vpMax;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>f7Settings.mode<sp/><sp/><sp/><sp/>=<sp/>(Mode)f7Mode;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>f7Settings.offsetX<sp/>=<sp/>minX;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>f7Settings.offsetY<sp/>=<sp/>minY;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/>f7Settings.width<sp/><sp/><sp/>=<sp/>sizeX;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>f7Settings.height<sp/><sp/>=<sp/>sizeY;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>f7Settings.pixelFormat<sp/>=<sp/>pixelFormat;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>Camera::ValidateFormat7Settings\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pCamera_=%p,<sp/>&amp;f7Settings=%p,<sp/>&amp;f7SettingsValid=%p,<sp/>&amp;f7PacketInfo=%p\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>f7Settings:<sp/>mode=%d,<sp/>offsetX=%d,<sp/>offsetY=%d,<sp/>width=%d,<sp/>height=%d,<sp/>pixelFormat=0x%x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_,<sp/>&amp;f7Settings,<sp/>&amp;f7SettingsValid,<sp/>&amp;f7PacketInfo,</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f7Settings.mode,<sp/>f7Settings.offsetX,<sp/>f7Settings.offsetY,<sp/>f7Settings.width,<sp/>f7Settings.height,<sp/></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f7Settings.pixelFormat);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;ValidateFormat7Settings(&amp;f7Settings,<sp/>&amp;f7SettingsValid,<sp/>&amp;f7PacketInfo);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;ValidateFormat7Settings&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>Camera::ValidateFormat7Settings<sp/>returned<sp/>f7SettingsValid=%d\n&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>f7PacketInfo:<sp/>unit=%d,<sp/>max=%d,<sp/>recommended=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>f7SettingsValid,</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f7PacketInfo.unitBytesPerPacket,<sp/>f7PacketInfo.maxBytesPerPacket,<sp/>f7PacketInfo.recommendedBytesPerPacket);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f7SettingsValid)<sp/>{</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>ERROR<sp/>ValidateFormat7Settings<sp/>returned<sp/>false\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Must<sp/>stop<sp/>acquisition<sp/>before<sp/>changing<sp/>the<sp/>video<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>Camera::StopCapture,<sp/>pCamera_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;StopCapture();</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/>resumeAcquire<sp/>=<sp/>(error<sp/>==<sp/>PGRERROR_OK);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1ac7dee34f4a0cb3f8ff90dc784c665527" kindref="member">PGPacketSize</ref>,<sp/>&amp;itemp);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>packetSize<sp/>=<sp/>itemp;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a33efadffe6207c0bb789df09259411c7" kindref="member">PGMaxPacketSize</ref>,<sp/>f7PacketInfo.maxBytesPerPacket);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packetSize<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packetSize<sp/>=<sp/>f7PacketInfo.recommendedBytesPerPacket;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Packet<sp/>size<sp/>must<sp/>be<sp/>a<sp/>multiple<sp/>of<sp/>unitBytesPerPacket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packetSize<sp/>=<sp/>(packetSize/f7PacketInfo.unitBytesPerPacket)<sp/>*<sp/>f7PacketInfo.unitBytesPerPacket;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(packetSize<sp/>&lt;<sp/>pFormat7Info_-&gt;minPacketSize)<sp/>packetSize<sp/>=<sp/>pFormat7Info_-&gt;minPacketSize;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packetSize<sp/>&gt;<sp/>f7PacketInfo.maxBytesPerPacket)<sp/>packetSize<sp/>=<sp/>f7PacketInfo.maxBytesPerPacket;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>Camera::SetFormat7Configuration\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pCamera_=%p,<sp/>&amp;f7Settings=%p,<sp/>packetSize=%d\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>f7Settings:<sp/>mode=%d,<sp/>offsetX=%d,<sp/>offsetY=%d,<sp/>width=%d,<sp/>height=%d,<sp/>pixelFormat=0x%x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_,<sp/>&amp;f7Settings,<sp/>packetSize,</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f7Settings.mode,<sp/>f7Settings.offsetX,<sp/>f7Settings.offsetY,<sp/>f7Settings.width,<sp/>f7Settings.height,<sp/></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f7Settings.pixelFormat);</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;SetFormat7Configuration(&amp;f7Settings,<sp/>packetSize);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/>checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetFormat7Configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resumeAcquire)<sp/>{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>Camera::StartCapture,<sp/>pCamera_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_);</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;StartCapture();</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;StartCapture&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>back<sp/>the<sp/>actual<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetFormat7Configuration(&amp;f7Settings,<sp/>&amp;packetSizeActual,<sp/>&amp;percentage);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetFormat7Configuration&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>Camera::GetFormat7Configuration\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pCamera_=%p,<sp/>&amp;f7Settings=%p,<sp/>packetSizeActual=%d,<sp/>percentage=%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>f7Settings:<sp/>mode=%d,<sp/>offsetX=%d,<sp/>offsetY=%d,<sp/>width=%d,<sp/>height=%d,<sp/>pixelFormat=0x%x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_,<sp/>&amp;f7Settings,<sp/>packetSizeActual,<sp/>percentage,</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f7Settings.mode,<sp/>f7Settings.offsetX,<sp/>f7Settings.offsetY,<sp/>f7Settings.width,<sp/>f7Settings.height,<sp/></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f7Settings.pixelFormat);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a23f8a7537c0c221ed3c5a72af90e276e" kindref="member">ADMinX</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f7Settings.offsetX);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1ae1b0c891ee0ecd596439b29e32e068e4" kindref="member">ADMinY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f7Settings.offsetY);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>f7Settings.width);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>f7Settings.height);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a57b568b83dc44556ed0a5950289b6df9" kindref="member">PGPixelFormat</ref>,<sp/>f7Settings.pixelFormat);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a0f268d32bb9ec757fd79f53855751c75" kindref="member">PGPacketSizeActual</ref>,<sp/>packetSizeActual);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>format7<sp/>mode<sp/>changes<sp/>the<sp/>supported<sp/>values<sp/>of<sp/>pixel<sp/>format<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>createDynamicEnums();</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>format7<sp/>mode<sp/>changes<sp/>the<sp/>available<sp/>properties<sp/>can<sp/>also<sp/>change<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllProperties();</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal">asynStatus<sp/>pointGrey::setGigEImageParams()</highlight></codeline>
<codeline lineno="1856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/>GigEImageSettings<sp/>gigESettings;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/>PixelFormat<sp/>pixelFormat;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resumeAcquire;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/>Mode<sp/>gigEMode;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itemp;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minPacketSize,<sp/>maxPacketSize;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minPacketDelay,<sp/>maxPacketDelay;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetSize;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetDelay;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeX,<sp/>sizeY,<sp/>minX,<sp/>minY;</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binX,<sp/>binY;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hsMax,<sp/>vsMax,<sp/>hsUnit,<sp/>vsUnit;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hpMax,<sp/>vpMax,<sp/>hpUnit,<sp/>vpUnit;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binningMode;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;setGigEImageParams&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pGigECamera_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Must<sp/>stop<sp/>acquisition<sp/>before<sp/>changing<sp/>these<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::StopCapture,<sp/>pGigECamera_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;StopCapture();</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>resumeAcquire<sp/>=<sp/>(error<sp/>==<sp/>PGRERROR_OK);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>GigE<sp/>imaging<sp/>mode<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a029510048f3c9a2f3bb4acf1e6423051" kindref="member">PGFormat7Mode</ref>,<sp/>&amp;itemp);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>gigEMode<sp/>=<sp/>(Mode)itemp;</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::SetGigEImagingMode,<sp/>pGigECamera_=%p,<sp/>gigEMode=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>gigEMode);</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;SetGigEImagingMode(gigEMode);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetGigEImagingMode&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>GigE<sp/>image<sp/>settings<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::GetGigEImageSettingsInfo,<sp/>pGigECamera_=%p,<sp/>pGigEImageSettingsInfo_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>pGigEImageSettingsInfo_);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImageSettingsInfo(pGigEImageSettingsInfo_);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImageSettingsInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/>&amp;sizeX);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>,<sp/>&amp;sizeY);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a23f8a7537c0c221ed3c5a72af90e276e" kindref="member">ADMinX</ref>,<sp/>&amp;minX);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1ae1b0c891ee0ecd596439b29e32e068e4" kindref="member">ADMinY</ref>,<sp/>&amp;minY);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a57b568b83dc44556ed0a5950289b6df9" kindref="member">PGPixelFormat</ref>,<sp/>&amp;itemp);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>pixelFormat<sp/>=<sp/>(PixelFormat)itemp;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>size<sp/>limits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/>hsMax<sp/>=<sp/>pGigEImageSettingsInfo_-&gt;maxWidth;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/>vsMax<sp/>=<sp/>pGigEImageSettingsInfo_-&gt;maxHeight;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/>hsMax);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>,<sp/>vsMax);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>size<sp/>units<sp/>(minimum<sp/>increment)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>hsUnit<sp/>=<sp/>pGigEImageSettingsInfo_-&gt;imageHStepSize;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/>vsUnit<sp/>=<sp/>pGigEImageSettingsInfo_-&gt;imageVStepSize;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>offset<sp/>units<sp/>(minimum<sp/>increment)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/>hpUnit<sp/>=<sp/>pGigEImageSettingsInfo_-&gt;offsetHStepSize;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>vpUnit<sp/>=<sp/>pGigEImageSettingsInfo_-&gt;offsetVStepSize;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>logic<sp/>probably<sp/>needs<sp/>work!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/>hpMax<sp/>=<sp/>hsMax;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>vpMax<sp/>=<sp/>vsMax;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACEIO_DRIVER,<sp/></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s<sp/>hsMax=%d,<sp/>vsMax=%d,<sp/>hsUnit=%d,<sp/>vsUnit=%d,<sp/>hpMax=%d,<sp/>vpMax=%d,<sp/>hpUnit=%d,<sp/>vpUnit=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>hsMax,<sp/>vsMax,<sp/>hsUnit,<sp/>vsUnit,<sp/><sp/>hpMax,<sp/>vpMax,<sp/>hpUnit,<sp/>vpUnit);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>the<sp/>requested<sp/>values<sp/>to<sp/>obey<sp/>the<sp/>increment<sp/>and<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeX<sp/>%<sp/>hsUnit)<sp/>sizeX<sp/>=<sp/>(sizeX/hsUnit)<sp/>*<sp/>hsUnit;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeY<sp/>%<sp/>vsUnit)<sp/>sizeY<sp/>=<sp/>(sizeY/vsUnit)<sp/>*<sp/>vsUnit;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minX<sp/>%<sp/>hpUnit)<sp/><sp/>minX<sp/><sp/>=<sp/>(minX/hpUnit)<sp/><sp/>*<sp/>hpUnit;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minY<sp/>%<sp/>vpUnit)<sp/><sp/>minY<sp/><sp/>=<sp/>(minY/vpUnit)<sp/><sp/>*<sp/>vpUnit;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeX<sp/>&lt;<sp/>hsUnit)<sp/>sizeX<sp/>=<sp/>hsUnit;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeX<sp/>&gt;<sp/>hsMax)<sp/><sp/>sizeX<sp/>=<sp/>hsMax;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeY<sp/>&lt;<sp/>vsUnit)<sp/>sizeY<sp/>=<sp/>vsUnit;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeY<sp/>&gt;<sp/>vsMax)<sp/><sp/>sizeY<sp/>=<sp/>vsMax;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minX<sp/>&lt;<sp/>0)<sp/>minX<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minX<sp/>&gt;<sp/>hpMax)<sp/><sp/>minX<sp/>=<sp/>hpMax;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minY<sp/>&lt;<sp/>0)<sp/>minY<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minY<sp/>&gt;<sp/>vpMax)<sp/><sp/>minY<sp/>=<sp/>vpMax;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>gigESettings.offsetX<sp/>=<sp/>minX;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>gigESettings.offsetY<sp/>=<sp/>minY;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/>gigESettings.width<sp/><sp/><sp/>=<sp/>sizeX;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>gigESettings.height<sp/><sp/>=<sp/>sizeY;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>gigESettings.pixelFormat<sp/>=<sp/>pixelFormat;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(gigESettings.reserved,<sp/>0,<sp/>8*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Attempt<sp/>to<sp/>write<sp/>the<sp/>parameters<sp/>to<sp/>camera<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACEIO_DRIVER,<sp/></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>setting<sp/>GigE<sp/>parameters<sp/>width=%d,<sp/>height=%d,<sp/>offsetX=%d,<sp/>offsetY=%d,<sp/>pixelFormat=0x%x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gigESettings.width,<sp/>gigESettings.height,<sp/></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gigESettings.offsetX,<sp/>gigESettings.offsetY,<sp/>gigESettings.pixelFormat);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::SetGigEImageSettings,<sp/>pGigECamera_=%p,<sp/>&amp;gigESettings=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>&amp;gigESettings);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;SetGigEImageSettings(&amp;gigESettings);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetGigEImageSettings&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>packet<sp/>size<sp/>and<sp/>delay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(PACKET_SIZE,<sp/><ref refid="classpoint_grey_1a2902c949f3287faa1454c83f43aff7b9" kindref="member">PGGigEPropertyValueMin</ref>,<sp/>&amp;minPacketSize);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a33efadffe6207c0bb789df09259411c7" kindref="member">PGMaxPacketSize</ref>,<sp/>&amp;maxPacketSize);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1ac7dee34f4a0cb3f8ff90dc784c665527" kindref="member">PGPacketSize</ref>,<sp/>&amp;packetSize);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packetSize<sp/>&lt;=<sp/>0)<sp/>packetSize<sp/>=<sp/>maxPacketSize;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packetSize<sp/>&lt;<sp/>minPacketSize)<sp/>packetSize<sp/>=<sp/>minPacketSize;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packetSize<sp/>&gt;<sp/>maxPacketSize)<sp/>packetSize<sp/>=<sp/>maxPacketSize;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>setGigEPropertyValue(PACKET_SIZE,<sp/>packetSize);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a0f268d32bb9ec757fd79f53855751c75" kindref="member">PGPacketSizeActual</ref>,<sp/>packetSize);</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a3e8d201b5f32f6431337b1a003ee9a20" kindref="member">PGPacketDelay</ref>,<sp/>&amp;packetDelay);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(PACKET_DELAY,<sp/><ref refid="classpoint_grey_1a2902c949f3287faa1454c83f43aff7b9" kindref="member">PGGigEPropertyValueMin</ref>,<sp/>&amp;minPacketDelay);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(PACKET_DELAY,<sp/><ref refid="classpoint_grey_1a1da5f5c491b764a4086bca99dfcafe10" kindref="member">PGGigEPropertyValueMax</ref>,<sp/>&amp;maxPacketDelay);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packetDelay<sp/>&lt;<sp/>minPacketDelay)<sp/>packetDelay<sp/>=<sp/>minPacketDelay;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packetDelay<sp/>&gt;<sp/>maxPacketDelay)<sp/>packetDelay<sp/>=<sp/>maxPacketDelay;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>setGigEPropertyValue(PACKET_DELAY,<sp/>packetDelay);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>resend<sp/>Enable,<sp/>assume<sp/>gigEConfig<sp/>structure<sp/>reflects<sp/>camera<sp/>hardware<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enablePacketResend;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a140a30d45ee5b45f559c05704078df54" kindref="member">PGPacketResendEnable</ref>,<sp/>&amp;enablePacketResend);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/>pGigEConfig_-&gt;enablePacketResend<sp/>=<sp/>enablePacketResend;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,<sp/></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::SetGigEConfig<sp/>pGigECamera=%p,<sp/>pGigEConfig-&gt;enablePacketResend<sp/>=%d,<sp/>pGigEConfig-&gt;registerTimeoutRetries=%d,<sp/>pGigEConfig-&gt;registerTimeout=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>pGigEConfig_<sp/>-&gt;<sp/>enablePacketResend,<sp/>pGigEConfig_-&gt;<sp/>registerTimeoutRetries,<sp/>pGigEConfig_-&gt;registerTimeout<sp/>);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;SetGigEConfig(pGigEConfig_);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetGigeEConfig&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>binning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a542aa32ca6c6f30fe499a88e18915d33" kindref="member">PGBinningMode</ref>,<sp/>&amp;binningMode);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::SetGigEImageBinningSettings,<sp/>pGigECamera_=%p,<sp/>binX=%d,<sp/>binY=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>binningMode,<sp/>binningMode);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;SetGigEImageBinningSettings(binningMode,<sp/></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binningMode);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetGigEImageBinningSettings&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>back<sp/>the<sp/>actual<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImagingMode(&amp;gigEMode);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImagingMode&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>GigECamera::GetGigEImagingMode,<sp/>pGigECamera_=%p,<sp/>gigEMode=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>gigEMode);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a029510048f3c9a2f3bb4acf1e6423051" kindref="member">PGFormat7Mode</ref>,<sp/>gigEMode);</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImageBinningSettings(&amp;binX,<sp/>&amp;binY);<sp/></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImageBinningSettings&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>GigECamera::GetGigEImageBinningSettings,<sp/>pGigECamera_=%p,<sp/>binX=%d,<sp/>binY=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>binX,<sp/>binY);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a542aa32ca6c6f30fe499a88e18915d33" kindref="member">PGBinningMode</ref>,<sp/>binX);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a11d483194e60669d11e0a4ff4bb919f3" kindref="member">ADBinX</ref>,<sp/>binX);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a0001097ff0ab8b55e564057699655c83" kindref="member">ADBinY</ref>,<sp/>binY);</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::GetGigEImageSettings,<sp/>pGigECamera_=%p,<sp/>&amp;gigESettings=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>&amp;gigESettings);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImageSettings(&amp;gigESettings);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImageSettings&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a23f8a7537c0c221ed3c5a72af90e276e" kindref="member">ADMinX</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gigESettings.offsetX);</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1ae1b0c891ee0ecd596439b29e32e068e4" kindref="member">ADMinY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gigESettings.offsetY);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>gigESettings.width);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>gigESettings.height);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a57b568b83dc44556ed0a5950289b6df9" kindref="member">PGPixelFormat</ref>,<sp/>gigESettings.pixelFormat);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>GigE<sp/>mode<sp/>changes<sp/>the<sp/>supported<sp/>values<sp/>of<sp/>pixel<sp/>format<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/>createDynamicEnums();</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>GigE<sp/>mode<sp/>changes<sp/>the<sp/>available<sp/>properties<sp/>can<sp/>also<sp/>change<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllProperties();</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllGigEProperties();</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal">cleanup:</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resumeAcquire)<sp/>{</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::StartCapture,<sp/>pGigECamera_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;StartCapture();</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;StartCapture&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>PGRERROR_OK)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal">asynStatus<sp/>pointGrey::setTrigger()</highlight></codeline>
<codeline lineno="2057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numImages;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numExposures;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>triggerMode;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>triggerPolarity;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>triggerSource;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skipFrames;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;setTrigger&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1ae191abe1436e6dd02510fcbbac59dbc1" kindref="member">ADTriggerMode</ref>,<sp/>&amp;triggerMode);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a824d9fc7c3eb8b0f53c2c1de560d466d" kindref="member">PGTriggerPolarity</ref>,<sp/>&amp;triggerPolarity);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1ad413903ad8667c04350abed947e6e1ed" kindref="member">PGTriggerSource</ref>,<sp/>&amp;triggerSource);</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetTriggerMode(pTriggerMode_);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetTriggerMode&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>CameraBase::GetTriggerMode,<sp/>pCameraBase_=%p,<sp/>pTriggerMode_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pTriggerMode_);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(triggerMode<sp/>==<sp/><ref refid="_a_d_driver_8h_1ab0b114b63ad5e0f7c44f370579916032a1399c613e20867100043cba7b3e6b50a" kindref="member">ADTriggerInternal</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTriggerMode_-&gt;onOff<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTriggerMode_-&gt;onOff<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Point<sp/>Grey<sp/>values<sp/>are<sp/>1<sp/>less<sp/>than<sp/>the<sp/>enum<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triggerMode--;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTriggerMode_-&gt;mode<sp/>=<sp/>triggerMode;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTriggerMode_-&gt;polarity<sp/>=<sp/>triggerPolarity;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTriggerMode_-&gt;source<sp/>=<sp/>triggerSource;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(triggerMode)<sp/>{</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a071bcf217255e695add34f56159c659c" kindref="member">PGSkipFrames</ref>,<sp/>&amp;skipFrames);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTriggerMode_-&gt;parameter<sp/>=<sp/>skipFrames;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a25e11dff81ea84715fc8fe5ca290bacb" kindref="member">ADNumExposures</ref>,<sp/>&amp;numExposures);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTriggerMode_-&gt;parameter<sp/>=<sp/>numExposures;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>15:</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>,<sp/>&amp;numImages);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTriggerMode_-&gt;parameter<sp/>=<sp/>numImages;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::SetTriggerMode,<sp/>pCameraBase_=%p,<sp/>pTriggerMode_=%p\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onOff=%d,<sp/>polarity=%d,<sp/>source=%d,<sp/>mode=%d,<sp/>parameter=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pTriggerMode_,</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTriggerMode_-&gt;onOff,<sp/>pTriggerMode_-&gt;polarity,<sp/>pTriggerMode_-&gt;source,<sp/></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTriggerMode_-&gt;mode,<sp/>pTriggerMode_-&gt;parameter);</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;SetTriggerMode(pTriggerMode_);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetTriggerMode&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>trigger<sp/>mode<sp/>changes<sp/>the<sp/>properties<sp/>can<sp/>also<sp/>change<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>getAllProperties();</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal">asynStatus<sp/>pointGrey::softwareTrigger()</highlight></codeline>
<codeline lineno="2117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;softwareTrigger&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::FireSoftwareTrigger,<sp/>pCameraBase_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;FireSoftwareTrigger();</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;FireSoftwareTrigger&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal">asynStatus<sp/>pointGrey::setStrobe()</highlight></codeline>
<codeline lineno="2131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>polarity;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enable;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delay;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>duration;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;setStrobe&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1afc8c4ac61e4dbaf51f93965f6c49cbcd" kindref="member">PGStrobeSource</ref>,<sp/><sp/><sp/>&amp;source);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a7ab81414e6ac4303b0c34fdc490f61f6" kindref="member">PGStrobeEnable</ref>,<sp/><sp/><sp/>&amp;enable);</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1abcedc7e80cda881c468c9ce278663dfc" kindref="member">PGStrobePolarity</ref>,<sp/>&amp;polarity);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpoint_grey_1a92b130978fe05dfbf51f4b3e2887f6ff" kindref="member">PGStrobeDelay</ref>,<sp/><sp/><sp/><sp/><sp/>&amp;delay);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="classpoint_grey_1a6472f670704c26903a2494347d93af33" kindref="member">PGStrobeDuration</ref>,<sp/><sp/>&amp;duration);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>pStrobeControl_-&gt;source<sp/><sp/><sp/>=<sp/>source;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>pStrobeControl_-&gt;onOff<sp/><sp/><sp/><sp/>=<sp/>enable<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/>pStrobeControl_-&gt;polarity<sp/>=<sp/>polarity;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/>pStrobeControl_-&gt;delay<sp/><sp/><sp/><sp/>=<sp/>(float)(delay*1000.);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/>pStrobeControl_-&gt;duration<sp/>=<sp/>(float)(duration*1000.);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::SetStrobe,<sp/>pCameraBase_=%p,<sp/>pStrobeControl_=%p\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>source=%d,<sp/>onOff=%d,<sp/>polarity=%d,<sp/>delay=%f,<sp/>duration=%f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pStrobeControl_,</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pStrobeControl_-&gt;source,<sp/>pStrobeControl_-&gt;onOff,<sp/>pStrobeControl_-&gt;polarity,<sp/></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pStrobeControl_-&gt;delay,<sp/>pStrobeControl_-&gt;duration);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;SetStrobe(pStrobeControl_);</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetStrobe&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal">asynStatus<sp/>pointGrey::createStaticEnums()</highlight></codeline>
<codeline lineno="2163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>creates<sp/>enum<sp/>strings<sp/>and<sp/>values<sp/>for<sp/>all<sp/>enums<sp/>that<sp/>are<sp/>fixed<sp/>for<sp/>a<sp/>given<sp/>camera.</highlight></codeline>
<codeline lineno="2165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>It<sp/>is<sp/>only<sp/>called<sp/>once<sp/>at<sp/>startup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode,<sp/>rate,<sp/>shift,<sp/>pin,<sp/>format;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>VideoMode<sp/>videoMode;</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>FrameRate<sp/>frameRate;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref><sp/>*pEnum;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supported,<sp/>modeSupported<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;createStaticEnums&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Video<sp/>mode<sp/>enums.<sp/>A<sp/>video<sp/>mode<sp/>is<sp/>supported<sp/>if<sp/>it<sp/>is<sp/>supported<sp/>for<sp/>any<sp/>frame<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/>numValidVideoModes_<sp/>=<sp/>0;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mode=0;<sp/>mode&lt;NUM_VIDEOMODES;<sp/>mode++)<sp/>{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>videoMode<sp/>=<sp/>(VideoMode)mode;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(videoMode<sp/>==<sp/>VIDEOMODE_FORMAT7)<sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>assume<sp/>format7<sp/>is<sp/>always<sp/>supported<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modeSupported<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCamera_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modeSupported<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rate=0;<sp/>rate&lt;NUM_FRAMERATES;<sp/>rate++)<sp/>{</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameRate<sp/>=<sp/>(FrameRate)rate;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frameRate<sp/>==<sp/>FRAMERATE_FORMAT7)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetVideoModeAndFrameRateInfo(videoMode,<sp/>frameRate,<sp/>&amp;supported);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetVideoModeAndFrameRateInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>Camera::GetVideoModeAndFrameRateInfo,<sp/>pCamera_=%p,<sp/>videoMode=%d,<sp/>frameRate%d,<sp/>supported=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_,<sp/>videoMode,<sp/>frameRate,<sp/>supported);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(supported)<sp/>modeSupported<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modeSupported)<sp/>{</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>videoModeEnums_<sp/>+<sp/>numValidVideoModes_;</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pEnum-&gt;<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>,<sp/>videoModeStrings[videoMode]);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum-&gt;<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>videoMode;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidVideoModes_++;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCamera_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Format7<sp/>mode<sp/>enums<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>modes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidFormat7Modes_<sp/>=<sp/>0;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mode=0;<sp/>mode&lt;NUM_MODES;<sp/>mode++)<sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFormat7Info_-&gt;mode<sp/>=<sp/>(Mode)mode;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetFormat7Info(pFormat7Info_,<sp/>&amp;supported);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetFormat7Info&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>Camera::GetFormat7Info,<sp/>pCamera_=%p,<sp/>pFormat7Info_=%p,<sp/>supported=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_,<sp/>pFormat7Info_,<sp/>supported);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(supported)<sp/>{</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>format7ModeEnums_<sp/>+<sp/>numValidFormat7Modes_;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(pEnum-&gt;<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>(%dx%d)&quot;</highlight><highlight class="normal">,<sp/>mode,<sp/>pFormat7Info_-&gt;maxWidth,<sp/>pFormat7Info_-&gt;maxHeight);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum-&gt;<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidFormat7Modes_++;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numValidFormat7Modes_<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>assume<sp/>that<sp/>the<sp/>lowest<sp/>supported<sp/>mode<sp/>is<sp/>the<sp/>full<sp/>chip<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a535f4c7d03e30b1efe4f7dad854cfc3f" kindref="member">ADMaxSizeX</ref>,<sp/>pFormat7Info_-&gt;maxWidth);</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a93caa26e32c3765ba19e1ac74a2f50cc" kindref="member">ADMaxSizeY</ref>,<sp/>pFormat7Info_-&gt;maxHeight);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/><sp/><sp/><sp/>pFormat7Info_-&gt;maxWidth);</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>,<sp/><sp/><sp/><sp/>pFormat7Info_-&gt;maxHeight);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pGigECamera_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GigE<sp/>mode<sp/>mode<sp/>enums<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>modes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidFormat7Modes_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>for<sp/>GigE<sp/>we<sp/>cannot<sp/>inquire<sp/>about<sp/>a<sp/>mode<sp/>without<sp/>setting<sp/>the<sp/>camera<sp/>to<sp/>that<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>need<sp/>to<sp/>remember<sp/>the<sp/>current<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mode<sp/>currentMode;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImagingMode(&amp;currentMode);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImagingMode&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>GigECamera::GetGigEImagingMode,<sp/>pGigECamera_=%p,<sp/>currentMode=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>currentMode);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mode=0;<sp/>mode&lt;NUM_MODES;<sp/>mode++)<sp/>{</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;QueryGigEImagingMode((Mode)mode,<sp/>&amp;supported);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;QueryGigEImagingMode&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>GigECamera::QueryGigEImagingMode,<sp/>pGigECamera_=%p,<sp/>mode=%d,<sp/>supported=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>mode,<sp/>supported);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(supported)<sp/>{</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::SetGigEImagingMode,<sp/>pGigECamera_=%p,<sp/>mode=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>mode);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;SetGigEImagingMode((Mode)mode);</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetGigEImagingMode&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::GetGigEImageSettingsInfo,<sp/>pGigECamera_=%p,<sp/>pGigEImageSettingsInfo_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>pGigEImageSettingsInfo_);</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImageSettingsInfo(pGigEImageSettingsInfo_);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImageSettingsInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>format7ModeEnums_<sp/>+<sp/>numValidFormat7Modes_;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(pEnum-&gt;<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>(%dx%d)&quot;</highlight><highlight class="normal">,<sp/>mode,<sp/>pGigEImageSettingsInfo_-&gt;maxWidth,<sp/></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGigEImageSettingsInfo_-&gt;maxHeight);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum-&gt;<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidFormat7Modes_++;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numValidFormat7Modes_<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>assume<sp/>that<sp/>the<sp/>lowest<sp/>supported<sp/>mode<sp/>is<sp/>the<sp/>full<sp/>chip<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a535f4c7d03e30b1efe4f7dad854cfc3f" kindref="member">ADMaxSizeX</ref>,<sp/>pGigEImageSettingsInfo_-&gt;maxWidth);</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a93caa26e32c3765ba19e1ac74a2f50cc" kindref="member">ADMaxSizeY</ref>,<sp/>pGigEImageSettingsInfo_-&gt;maxHeight);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a918ef4b3d80695f6872fd169b09b639a" kindref="member">ADSizeX</ref>,<sp/><sp/><sp/><sp/>pGigEImageSettingsInfo_-&gt;maxWidth);</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a59ba3ba61b2b6f51dc9d88d81680b632" kindref="member">ADSizeY</ref>,<sp/><sp/><sp/><sp/>pGigEImageSettingsInfo_-&gt;maxHeight);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Binning<sp/>mode<sp/>enums<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pGigECamera_)</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidBinningModes_<sp/>=<sp/><ref refid="point_grey_8cpp_1a77804f73118c7934d33320d98838a96c" kindref="member">NUM_BINNING_MODES</ref>;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidBinningModes_<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mode=0;<sp/>mode&lt;numValidBinningModes_;<sp/>mode++)<sp/>{</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>binningModeEnums_<sp/>+<sp/>mode;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pEnum-&gt;<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>,<sp/>binningModeStrings[mode]);</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum-&gt;<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>binningModeValues[mode];</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>pixel<sp/>format<sp/>enums<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/>numValidConvertPixelFormats_<sp/>=<sp/><ref refid="point_grey_8cpp_1a7d1b6fa54b67628848fc9cf2a4d86352" kindref="member">NUM_CONVERT_PIXEL_FORMATS</ref>;</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(format=0;<sp/>format&lt;numValidConvertPixelFormats_;<sp/>format++)<sp/>{</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>convertPixelFormatEnums_<sp/>+<sp/>format;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pEnum-&gt;<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>,<sp/>convertPixelFormatStrings[format]);</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum-&gt;<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>convertPixelFormatValues[format];</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trigger<sp/>mode<sp/>enums<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::GetTriggerModeInfo,<sp/>pCameraBase_=%p,<sp/>pTriggerModeInfo_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pTriggerModeInfo_);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetTriggerModeInfo(pTriggerModeInfo_);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetTriggerModeInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/>numValidTriggerModes_<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>modes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mode=0;<sp/>mode&lt;<ref refid="point_grey_8cpp_1ac615b62e4dc370d277f98f4e837bf954" kindref="member">NUM_TRIGGER_MODES</ref>;<sp/>mode++)<sp/>{</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>trigger<sp/>mode<sp/>is<sp/>always<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>supported<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>=<sp/><ref refid="point_grey_8cpp_1ac615b62e4dc370d277f98f4e837bf954" kindref="member">NUM_TRIGGER_MODES</ref><sp/>-<sp/>mode<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>supported<sp/>=<sp/>((pTriggerModeInfo_-&gt;modeMask<sp/>&gt;&gt;<sp/>shift)<sp/>&amp;<sp/>0x1)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(supported)<sp/>{</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>triggerModeEnums_<sp/>+<sp/>numValidTriggerModes_;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pEnum-&gt;<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>,<sp/>triggerModeStrings[mode]);</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum-&gt;<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidTriggerModes_++;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trigger<sp/>source<sp/>enums<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>numValidTriggerSources_<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pin=0;<sp/>pin&lt;<ref refid="point_grey_8cpp_1ae1a70432cf02543f2f8e9432d6f0ef0c" kindref="member">NUM_GPIO_PINS</ref>;<sp/>pin++)<sp/>{</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>=<sp/><ref refid="point_grey_8cpp_1ae1a70432cf02543f2f8e9432d6f0ef0c" kindref="member">NUM_GPIO_PINS</ref><sp/>-<sp/>pin<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>supported<sp/>=<sp/>((pTriggerModeInfo_-&gt;sourceMask<sp/>&gt;&gt;<sp/>shift)<sp/>&amp;<sp/>0x1)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(supported)<sp/>{</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>triggerSourceEnums_<sp/>+<sp/>numValidTriggerSources_;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pEnum-&gt;<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>,<sp/>GPIOStrings[pin]);</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum-&gt;<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>pin;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidTriggerSources_++;</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Strobe<sp/>source<sp/>enums<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/>numValidStrobeSources_<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pin=0;<sp/>pin&lt;<ref refid="point_grey_8cpp_1ae1a70432cf02543f2f8e9432d6f0ef0c" kindref="member">NUM_GPIO_PINS</ref>;<sp/>pin++)<sp/>{</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pStrobeInfo_-&gt;source<sp/>=<sp/>pin;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::GetStrobeInfo,<sp/>pCameraBase_=%p,<sp/>pStrobeInfo_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pStrobeInfo_);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetStrobeInfo(pStrobeInfo_);</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetStrobeInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pStrobeInfo_-&gt;present)<sp/>{</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>strobeSourceEnums_<sp/>+<sp/>numValidStrobeSources_;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pEnum-&gt;<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>,<sp/>GPIOStrings[pin]);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum-&gt;<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>pin;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidStrobeSources_++;</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal">asynStatus<sp/>pointGrey::createDynamicEnums()</highlight></codeline>
<codeline lineno="2361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format,<sp/>rate;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/>VideoMode<sp/>currentVideoMode;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/>FrameRate<sp/>frameRate,<sp/>currentFrameRate;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/>Format7ImageSettings<sp/>f7Settings;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/>GigEImageSettings<sp/>gigEImageSettings;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetSize;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percentage;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supported;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenum_struct__t" kindref="compound">enumStruct_t</ref><sp/>*pEnum;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enumStrings[NUM_PIXEL_FORMATS];</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enumValues[NUM_PIXEL_FORMATS];</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enumSeverities[NUM_PIXEL_FORMATS];</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;createDynamicEnums&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCamera_)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>an<sp/>IIDC<sp/>(not<sp/>GigE)<sp/>camera<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>current<sp/>video<sp/>mode<sp/>is<sp/>format7<sp/>then<sp/>this<sp/>function<sp/>creates<sp/>enum<sp/>strings<sp/>and<sp/>values<sp/></highlight></codeline>
<codeline lineno="2382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>all<sp/>of<sp/>the<sp/>valid<sp/>pixel<sp/>formats<sp/>for<sp/>the<sp/>current<sp/>format7<sp/>mode.</highlight></codeline>
<codeline lineno="2383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Otherwise<sp/>it<sp/>creates<sp/>enum<sp/>strings<sp/>and<sp/>values<sp/>for<sp/>all<sp/>valid<sp/>frame<sp/>rates<sp/>for<sp/>the<sp/>current<sp/>video<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetVideoModeAndFrameRate(&amp;currentVideoMode,<sp/>&amp;currentFrameRate);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetVideoModeAndFrameRate&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>Camera::GetVideoModeAndFrameRate,<sp/>pCamera_=%p,<sp/>currentVideoMode=%d,<sp/>currentFrameRate=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_,<sp/>currentVideoMode,<sp/>currentFrameRate);</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a57f1347bcd594f54fd0130025bf0b7fb" kindref="member">PGVideoMode</ref>,<sp/>currentVideoMode);</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentVideoMode<sp/>==<sp/>VIDEOMODE_FORMAT7)<sp/>{</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetFormat7Configuration(&amp;f7Settings,<sp/>&amp;packetSize,<sp/>&amp;percentage);</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetFormat7Configuration&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>Camera::GetFormat7Configuration,<sp/>pCamera_=%p,<sp/>&amp;f7Settings=%p,<sp/>packetSize=%d,<sp/>percentage=%f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_,<sp/>&amp;f7Settings,<sp/>packetSize,<sp/>percentage);</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFormat7Info_-&gt;mode<sp/>=<sp/>f7Settings.mode;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a029510048f3c9a2f3bb4acf1e6423051" kindref="member">PGFormat7Mode</ref>,<sp/>f7Settings.mode);</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetFormat7Info(pFormat7Info_,<sp/>&amp;supported);</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetFormat7Info&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>Camera::GetFormat7Info,<sp/>pCamera_=%p,<sp/>pFormat7Info_=%p,<sp/>supported=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_,<sp/>pFormat7Info_,<sp/>supported);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidPixelFormats_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(format=0;<sp/>format&lt;(int)NUM_PIXEL_FORMATS;<sp/>format++)<sp/>{</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pFormat7Info_-&gt;pixelFormatBitField<sp/>&amp;<sp/>pixelFormatValues[format])<sp/>==<sp/>pixelFormatValues[format])<sp/>{</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>pixelFormatEnums_<sp/>+<sp/>numValidPixelFormats_;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pEnum-&gt;<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>,<sp/>pixelFormatStrings[format]);</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum-&gt;<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>pixelFormatValues[format];</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidPixelFormats_++;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a57b568b83dc44556ed0a5950289b6df9" kindref="member">PGPixelFormat</ref>,<sp/>f7Settings.pixelFormat);</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;numValidPixelFormats_;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumStrings[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>pixelFormatEnums_[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumValues[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/><sp/>pixelFormatEnums_[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumSeverities[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doCallbacksEnum(enumStrings,<sp/>enumValues,<sp/>enumSeverities,<sp/></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidPixelFormats_,<sp/><ref refid="classpoint_grey_1a57b568b83dc44556ed0a5950289b6df9" kindref="member">PGPixelFormat</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Format<sp/>all<sp/>valid<sp/>frame<sp/>rates<sp/>for<sp/>the<sp/>current<sp/>video<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a79a2ed83cf0ebd65e9c68051bdd4cddd" kindref="member">PGFrameRate</ref>,<sp/>currentFrameRate);</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidFrameRates_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rate=0;<sp/>rate&lt;NUM_FRAMERATES;<sp/>rate++)<sp/>{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameRate<sp/>=<sp/>(FrameRate)rate;</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frameRate<sp/>==<sp/>FRAMERATE_FORMAT7)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetVideoModeAndFrameRateInfo(currentVideoMode,<sp/>frameRate,<sp/>&amp;supported);</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetVideoModeAndFrameRateInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>Camera::GetVideoModeAndFrameRateInfo,<sp/>pCamera_=%p,<sp/>currentVideoMode=%d,<sp/>frameRate=%d,<sp/>supported=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCamera_,<sp/>currentVideoMode,<sp/>frameRate,<sp/>supported);</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(supported)<sp/>{</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>frameRateEnums_<sp/>+<sp/>numValidFrameRates_;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pEnum-&gt;<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>,<sp/>frameRateStrings[rate]);</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum-&gt;<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>rate;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidFrameRates_++;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;numValidFrameRates_;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumStrings[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>frameRateEnums_[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumValues[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/><sp/>frameRateEnums_[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumSeverities[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doCallbacksEnum(enumStrings,<sp/>enumValues,<sp/>enumSeverities,<sp/></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidFrameRates_,<sp/><ref refid="classpoint_grey_1a79a2ed83cf0ebd65e9c68051bdd4cddd" kindref="member">PGFrameRate</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pGigECamera_)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>GigE<sp/>camera<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::GetGigEImageSettings,<sp/>pGigECamera_=%p,<sp/>&amp;gigEImageSettings=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>&amp;gigEImageSettings);</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImageSettings(&amp;gigEImageSettings);</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImageSettings&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::GetGigEImageSettingsInfo,<sp/>pGigECamera_=%p,<sp/>pGigEImageSettingsInfo_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>pGigEImageSettingsInfo_);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImageSettingsInfo(pGigEImageSettingsInfo_);</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImageSettingsInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidPixelFormats_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(format=0;<sp/>format&lt;(int)NUM_PIXEL_FORMATS;<sp/>format++)<sp/>{</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pGigEImageSettingsInfo_-&gt;pixelFormatBitField<sp/>&amp;<sp/></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixelFormatValues[format])<sp/>==<sp/>pixelFormatValues[format])<sp/>{</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum<sp/>=<sp/>pixelFormatEnums_<sp/>+<sp/>numValidPixelFormats_;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pEnum-&gt;<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>,<sp/>pixelFormatStrings[format]);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnum-&gt;<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref><sp/>=<sp/>pixelFormatValues[format];</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidPixelFormats_++;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a57b568b83dc44556ed0a5950289b6df9" kindref="member">PGPixelFormat</ref>,<sp/>gigEImageSettings.pixelFormat);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;numValidPixelFormats_;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumStrings[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>pixelFormatEnums_[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].<ref refid="structenum_struct__t_1ac06085f35779376cbe7eb85007769b8f" kindref="member">string</ref>;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumValues[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/><sp/>pixelFormatEnums_[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>].<ref refid="structenum_struct__t_1a03dbcc57ce83c8dc439561fad3034412" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumSeverities[<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doCallbacksEnum(enumStrings,<sp/>enumValues,<sp/>enumSeverities,<sp/></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numValidPixelFormats_,<sp/><ref refid="classpoint_grey_1a57b568b83dc44556ed0a5950289b6df9" kindref="member">PGPixelFormat</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal">asynStatus<sp/>pointGrey::getAllProperties()</highlight></codeline>
<codeline lineno="2500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyInfo<sp/>*pPropInfo;</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>Property<sp/>*pProperty;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addr;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dtmp;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName=</highlight><highlight class="stringliteral">&quot;getAllProperties&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Iterate<sp/>through<sp/>all<sp/>of<sp/>the<sp/>available<sp/>properties<sp/>and<sp/>update<sp/>their<sp/>values<sp/>and<sp/>settings<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(addr=0;<sp/>addr&lt;<ref refid="point_grey_8cpp_1a2b6573ab5111e79e03216ce92942e25c" kindref="member">NUM_PROPERTIES</ref>;<sp/>addr++)<sp/>{</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPropInfo<sp/>=<sp/>allPropInfos_[addr];</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProperty<sp/>=<sp/>allProperties_[addr];</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::GetPropertyInfo,<sp/>pCameraBase_=%p,<sp/>pPropInfo=%p,<sp/>propertyType=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pPropInfo,<sp/>pProperty-&gt;type);</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetPropertyInfo(pPropInfo);</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetPropertyInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetProperty(pProperty);</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetProperty&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>CameraBase::GetProperty,<sp/>pCameraBase_=%p,<sp/>pProperty=%p,<sp/>pProperty-&gt;valueA=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pProperty,<sp/>pProperty-&gt;valueA);</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_FLOW,</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%s:<sp/>checking<sp/>propertyType<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>addr);</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pPropInfo-&gt;present)<sp/>{</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a50ae5223ac71c6e158e466fdeab6038b" kindref="member">PGPropertyAvail</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1);</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a03a3ccf4cacebd245577c23f3f083f1c" kindref="member">PGPropertyOnOffAvail</ref>,<sp/><sp/><sp/>pPropInfo-&gt;onOffSupported);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a781d7b8e8a9715cb8a8cdc98e001b7ac" kindref="member">PGPropertyOnePushAvail</ref>,<sp/>pPropInfo-&gt;onePushSupported);</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a50decb5b21a5b44b262f2427da4e13c3" kindref="member">PGPropertyAutoAvail</ref>,<sp/><sp/><sp/><sp/>pPropInfo-&gt;autoSupported);</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1aeac0f8bf1772f599bd655de717ffabc5" kindref="member">PGPropertyManAvail</ref>,<sp/><sp/><sp/><sp/><sp/>pPropInfo-&gt;manualSupported);</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a63f57ed1e0038b9b1acdb7b972ac1047" kindref="member">PGPropertyAbsAvail</ref>,<sp/><sp/><sp/><sp/><sp/>pPropInfo-&gt;absValSupported);</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a68c1081ac90854fd617e13b83b835e08" kindref="member">PGPropertyOnOff</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProperty-&gt;onOff);</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1ad0b3bf36980d2c7720866c5a85b69732" kindref="member">PGPropertyAutoMode</ref>,<sp/><sp/><sp/><sp/><sp/>pProperty-&gt;autoManualMode);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a2b72e6495dfe45231ac29303af902641" kindref="member">PGPropertyAbsMode</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>pProperty-&gt;absControl);</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a3a0a732383ef0c7a697ea18f1ae611b4" kindref="member">PGPropertyValue</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProperty-&gt;valueA);</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1ae8dad86581728a440d186f7215a7b83a" kindref="member">PGPropertyValueB</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProperty-&gt;valueB);</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a5e343e09316e50747836e51e80ce0c7f" kindref="member">PGPropertyValueMin</ref>,<sp/><sp/><sp/><sp/><sp/>pPropInfo-&gt;min);</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1ab7109a5b41cb042b6ad012d6c9ea274d" kindref="member">PGPropertyValueMax</ref>,<sp/><sp/><sp/><sp/><sp/>pPropInfo-&gt;max);</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>propertyType<sp/>is<sp/>not<sp/>available<sp/>in<sp/>the<sp/>camera,<sp/>we<sp/>just<sp/>set</highlight></codeline>
<codeline lineno="2544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>all<sp/>the<sp/>parameters<sp/>to<sp/>0<sp/>or<sp/>-1<sp/>to<sp/>indicate<sp/>this<sp/>is<sp/>not<sp/>available<sp/>to<sp/>the<sp/>user.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a50ae5223ac71c6e158e466fdeab6038b" kindref="member">PGPropertyAvail</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a03a3ccf4cacebd245577c23f3f083f1c" kindref="member">PGPropertyOnOffAvail</ref>,<sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a68c1081ac90854fd617e13b83b835e08" kindref="member">PGPropertyOnOff</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a781d7b8e8a9715cb8a8cdc98e001b7ac" kindref="member">PGPropertyOnePushAvail</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a50decb5b21a5b44b262f2427da4e13c3" kindref="member">PGPropertyAutoAvail</ref>,<sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1aeac0f8bf1772f599bd655de717ffabc5" kindref="member">PGPropertyManAvail</ref>,<sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a63f57ed1e0038b9b1acdb7b972ac1047" kindref="member">PGPropertyAbsAvail</ref>,<sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1ad0b3bf36980d2c7720866c5a85b69732" kindref="member">PGPropertyAutoMode</ref>,<sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a2b72e6495dfe45231ac29303af902641" kindref="member">PGPropertyAbsMode</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>-1);</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a3a0a732383ef0c7a697ea18f1ae611b4" kindref="member">PGPropertyValue</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1);</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a5e343e09316e50747836e51e80ce0c7f" kindref="member">PGPropertyValueMin</ref>,<sp/><sp/><sp/><sp/><sp/>-1);</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1ab7109a5b41cb042b6ad012d6c9ea274d" kindref="member">PGPropertyValueMax</ref>,<sp/><sp/><sp/><sp/><sp/>-1);</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>propertyType<sp/>does<sp/>not<sp/>support<sp/>&apos;absolute&apos;<sp/>control<sp/>then<sp/>we<sp/>just</highlight></codeline>
<codeline lineno="2560"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>set<sp/>all<sp/>the<sp/>absolute<sp/>values<sp/>to<sp/>-1.0<sp/>to<sp/>indicate<sp/>it<sp/>is<sp/>not<sp/>available<sp/>to<sp/>the<sp/>user<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pPropInfo-&gt;absValSupported)<sp/>{<sp/></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(addr,<sp/><sp/><ref refid="classpoint_grey_1a13b0e4e890ae97e5bff5693f78841d63" kindref="member">PGPropertyValueAbs</ref>,<sp/><sp/><sp/><sp/>pProperty-&gt;absValue);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(addr,<sp/><sp/><ref refid="classpoint_grey_1a8ccb2d1d04066c0dac373368d16153a8" kindref="member">PGPropertyValueAbsMin</ref>,<sp/>pPropInfo-&gt;absMin);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(addr,<sp/><sp/><ref refid="classpoint_grey_1afe70bd1ca4e33e29b7d95ac98a7ba0df" kindref="member">PGPropertyValueAbsMax</ref>,<sp/>pPropInfo-&gt;absMax);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(addr,<sp/><sp/><ref refid="classpoint_grey_1a13b0e4e890ae97e5bff5693f78841d63" kindref="member">PGPropertyValueAbs</ref>,<sp/><sp/><sp/><sp/>-1.0);</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(addr,<sp/><sp/><ref refid="classpoint_grey_1afe70bd1ca4e33e29b7d95ac98a7ba0df" kindref="member">PGPropertyValueAbsMax</ref>,<sp/>-1.0);</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(addr,<sp/><sp/><ref refid="classpoint_grey_1a8ccb2d1d04066c0dac373368d16153a8" kindref="member">PGPropertyValueAbsMin</ref>,<sp/>-1.0);</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Map<sp/>a<sp/>few<sp/>of<sp/>the<sp/>AreaDetector<sp/>parameters<sp/>on<sp/>to<sp/>the<sp/>camera<sp/>properties<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(SHUTTER,<sp/><ref refid="classpoint_grey_1a13b0e4e890ae97e5bff5693f78841d63" kindref="member">PGPropertyValueAbs</ref>,<sp/>&amp;dtmp);</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Camera<sp/>units<sp/>are<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref>,<sp/>dtmp/1000.);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(FRAME_RATE,<sp/><ref refid="classpoint_grey_1a13b0e4e890ae97e5bff5693f78841d63" kindref="member">PGPropertyValueAbs</ref>,<sp/>&amp;dtmp);</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Camera<sp/>units<sp/>are<sp/>fps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_a_d_driver_1a8d5333aa86509cbd8f5fd824e79b2799" kindref="member">ADAcquirePeriod</ref>,<sp/>1./dtmp);</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/>getDoubleParam(GAIN,<sp/><ref refid="classpoint_grey_1a13b0e4e890ae97e5bff5693f78841d63" kindref="member">PGPropertyValueAbs</ref>,<sp/>&amp;dtmp);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_a_d_driver_1af7a169a1ab5a9069c5d556bf5c7ac387" kindref="member">ADGain</ref>,<sp/>dtmp);</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>callbacks<sp/>for<sp/>each<sp/>propertyType<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(addr=0;<sp/>addr&lt;<ref refid="point_grey_8cpp_1a2b6573ab5111e79e03216ce92942e25c" kindref="member">NUM_PROPERTIES</ref>;<sp/>addr++)<sp/>callParamCallbacks(addr);</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal">asynStatus<sp/>pointGrey::getGigEConfigParams()</highlight></codeline>
<codeline lineno="2591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName=</highlight><highlight class="stringliteral">&quot;getGigEConfigParams&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pGigECamera_<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEConfig(pGigEConfig_);</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEConfigStruct&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>GigECamera::GetGigEConfigParam,<sp/>pGigECamera_=%p,<sp/>pGigEConfig-&gt;enablePacketResend=%d,<sp/>pGigEConfig-&gt;registerTimeoutRetries=%d,<sp/>pGigEConfig-&gt;registerTimeout=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>pGigEConfig_-&gt;enablePacketResend,<sp/>pGigEConfig_-&gt;registerTimeoutRetries,<sp/>pGigEConfig_-&gt;registerTimeout);</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a140a30d45ee5b45f559c05704078df54" kindref="member">PGPacketResendEnable</ref>,pGigEConfig_-&gt;enablePacketResend);<sp/><sp/></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal">asynStatus<sp/>pointGrey::getAllGigEProperties()</highlight></codeline>
<codeline lineno="2609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/>GigEProperty<sp/>*pProperty;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addr;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itemp;</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName=</highlight><highlight class="stringliteral">&quot;getAllGigeEProperties&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pGigECamera_<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Iterate<sp/>through<sp/>all<sp/>of<sp/>the<sp/>available<sp/>properties<sp/>and<sp/>update<sp/>their<sp/>values<sp/>and<sp/>settings<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(addr=0;<sp/>addr&lt;<ref refid="point_grey_8cpp_1a44d77a541523850f608940c22a46ac55" kindref="member">NUM_GIGE_PROPERTIES</ref>;<sp/>addr++)<sp/>{</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProperty<sp/>=<sp/>allGigEProperties_[addr];</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEProperty(pProperty);</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEProperty&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>called<sp/>GigECamera::GetGigEProperty,<sp/>pGigECamera_=%p,<sp/>pProperty=%p,<sp/>pProperty-&gt;propType=%d,<sp/>pProperty-&gt;value=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>pProperty,<sp/>pProperty-&gt;propType,<sp/>pProperty-&gt;value);</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pProperty-&gt;isReadable)<sp/>{</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a1d5eaca85cdf5e2e5910794d667e1c92" kindref="member">PGGigEPropertyValue</ref>,<sp/><sp/><sp/><sp/><sp/>pProperty-&gt;value);</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a2902c949f3287faa1454c83f43aff7b9" kindref="member">PGGigEPropertyValueMin</ref>,<sp/><sp/>pProperty-&gt;min);</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(addr,<sp/><ref refid="classpoint_grey_1a1da5f5c491b764a4086bca99dfcafe10" kindref="member">PGGigEPropertyValueMax</ref>,<sp/><sp/>pProperty-&gt;max);</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Map<sp/>a<sp/>few<sp/>of<sp/>the<sp/>Point<sp/>Grey<sp/>parameters<sp/>on<sp/>to<sp/>the<sp/>GigE<sp/>properties<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(PACKET_SIZE,<sp/><ref refid="classpoint_grey_1a1d5eaca85cdf5e2e5910794d667e1c92" kindref="member">PGGigEPropertyValue</ref>,<sp/>&amp;itemp);</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a0f268d32bb9ec757fd79f53855751c75" kindref="member">PGPacketSizeActual</ref>,<sp/>itemp);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(PACKET_DELAY,<sp/><ref refid="classpoint_grey_1a1d5eaca85cdf5e2e5910794d667e1c92" kindref="member">PGGigEPropertyValue</ref>,<sp/>&amp;itemp);</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1ab1233b9a19c7bca7d7aa8478c11bb574" kindref="member">PGPacketDelayActual</ref>,<sp/>itemp);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>callbacks<sp/>for<sp/>each<sp/>propertyType<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(addr=0;<sp/>addr&lt;<ref refid="point_grey_8cpp_1a44d77a541523850f608940c22a46ac55" kindref="member">NUM_GIGE_PROPERTIES</ref>;<sp/>addr++)<sp/>callParamCallbacks(addr);</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal">asynStatus<sp/>pointGrey::startCapture()</highlight></codeline>
<codeline lineno="2647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;startCapture&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>the<sp/>camera<sp/>transmission...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a8cdc9e9fbabaadaa3c87108aad2e2895" kindref="member">ADNumImagesCounter</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_d_driver_1ac05bfd5d3c6bc63910d6fbd4fb909d50" kindref="member">setShutter</ref>(1);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::StartCapture,<sp/>pCameraBase_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_);</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;StartCapture();</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;StartCapture&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/>epicsEventSignal(startEventId_);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal">asynStatus<sp/>pointGrey::stopCapture()</highlight></codeline>
<codeline lineno="2666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;stopCapture&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_d_driver_1ac05bfd5d3c6bc63910d6fbd4fb909d50" kindref="member">setShutter</ref>(0);</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::StopCapture,<sp/>pCameraBase_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_);</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;StopCapture();</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;StopCapture&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal">asynStatus<sp/>pointGrey::readStatus()</highlight></codeline>
<codeline lineno="2682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;readStatus&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetStats(pCameraStats_);</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetStats&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>CameraBase::GetStats,<sp/>pCameraBase_=%p,<sp/>pCameraStats_=%p,<sp/>pCameraStats_-&gt;temperature=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pCameraBase_,<sp/>pCameraStats_,<sp/>pCameraStats_-&gt;temperature);</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_a_d_driver_1a625f815727135a2af747ae5086bf21d5" kindref="member">ADTemperatureActual</ref>,<sp/>pCameraStats_-&gt;temperature/10.<sp/>-<sp/>273.15);</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1ae5fbc618db10c0098c567870a78af44a" kindref="member">PGCorruptFrames</ref>,<sp/><sp/><sp/><sp/>pCameraStats_-&gt;imageCorrupt);</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a3000e108a78e226a6e22dc9a1218ed7a" kindref="member">PGDriverDropped</ref>,<sp/><sp/><sp/><sp/>pCameraStats_-&gt;imageDriverDropped);</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCameraStats_-&gt;imageXmitFailed<sp/>==<sp/>0x80000000)<sp/>pCameraStats_-&gt;imageXmitFailed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1ac021fed7ce75fa32131da88f7672d627" kindref="member">PGTransmitFailed</ref>,<sp/><sp/><sp/>pCameraStats_-&gt;imageXmitFailed);</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classpoint_grey_1a47eca17e9c10e7f3ea44de4167ebcf33" kindref="member">PGDroppedFrames</ref>,<sp/><sp/><sp/><sp/>pCameraStats_-&gt;imageDropped);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpoint_grey_1ad82328c7fa0ccc585e7e39991a373aa4" kindref="member">pointGrey::report</ref>(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>details)</highlight></codeline>
<codeline lineno="2710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCameras;</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/>Camera<sp/>cam;</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode,<sp/>rate;</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source;</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/>asynStatus<sp/>status;</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supported;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>property;</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixelFormatIndex;</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;report&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pBusMgr_-&gt;GetNumOfCameras(&amp;numCameras);</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetNumOfCameras&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\nNumber<sp/>of<sp/>cameras<sp/>detected:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>numCameras);</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>=0;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>&lt;numCameras;<sp/><ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PGRGuid<sp/>guid;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CameraInfo<sp/>camInfo;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pBusMgr_-&gt;GetCameraFromIndex(<ref refid="namespacemake_adl_1a518a859cd4b1663659f1e61fc40a2d30" kindref="member">i</ref>,<sp/>&amp;guid);</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetCameraFromIndex&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>to<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>cam.Connect(&amp;guid);</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;Connect&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>camera<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>cam.GetCameraInfo(&amp;camInfo);</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetCameraInfo&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Serial<sp/>number:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>camInfo.serialNumber);</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>model:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>camInfo.modelName);</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>vendor:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>camInfo.vendorName);</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Sensor:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>camInfo.sensorInfo);</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Resolution:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>camInfo.sensorResolution);</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Firmware<sp/>version:<sp/><sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>camInfo.firmwareVersion);</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Firmware<sp/>build<sp/>time:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>camInfo.firmwareBuildTime);</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disconnect<sp/>from<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>cam.Disconnect();</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;Connect&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>seems<sp/>like<sp/>disconnected<sp/>from<sp/>the<sp/>cam<sp/>object<sp/>here<sp/>causes<sp/>the<sp/>already<sp/>found<sp/>camera<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>be<sp/>reconnected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>connectCamera();</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_ERROR,</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>error<sp/>calling<sp/>connectCamera()\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName);</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCamera_)<sp/>{</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classpoint_grey_1a029510048f3c9a2f3bb4acf1e6423051" kindref="member">PGFormat7Mode</ref>,<sp/>&amp;mode);</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFormat7Info_-&gt;mode<sp/>=<sp/>(Mode)mode;</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetFormat7Info(pFormat7Info_,<sp/>&amp;supported);</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetFormat7Info&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Currently<sp/>connected<sp/>IIDC<sp/>camera<sp/>Format7<sp/>information\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>mode:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pFormat7Info_-&gt;mode);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>maxWidth:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pFormat7Info_-&gt;maxWidth);</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>maxHeight:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pFormat7Info_-&gt;maxHeight);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>offsetHStepSize:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pFormat7Info_-&gt;offsetHStepSize);</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>offsetVStepSize:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pFormat7Info_-&gt;offsetVStepSize);</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>imageHStepSize:<sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pFormat7Info_-&gt;imageHStepSize);</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>imageVStepSize:<sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pFormat7Info_-&gt;imageVStepSize);</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pixelFormatBitField<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>pFormat7Info_-&gt;pixelFormatBitField);</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>vendorPixelFormatBitField<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>pFormat7Info_-&gt;vendorPixelFormatBitField);</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pGigECamera_)<sp/>{</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImageSettingsInfo(pGigEImageSettingsInfo_);</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImageSettingsInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Currently<sp/>connected<sp/>GigE<sp/>camera<sp/>image<sp/>information\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>maxWidth:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;maxWidth);</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>maxHeight:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;maxHeight);</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>offsetHStepSize:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;offsetHStepSize);</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>offsetVStepSize:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;offsetVStepSize);</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>imageHStepSize:<sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;imageHStepSize);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>imageVStepSize:<sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;imageVStepSize);</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pixelFormatBitField<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;pixelFormatBitField);</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>vendorPixelFormatBitField<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;vendorPixelFormatBitField);</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(details<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCamera_)<sp/>{</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VideoMode<sp/>videoMode;</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FrameRate<sp/>frameRate;</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetSize;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percentage;</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Format7ImageSettings<sp/>f7Settings;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\nSupported<sp/>IIDC<sp/>video<sp/>modes<sp/>and<sp/>rates:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mode=0;<sp/>mode&lt;NUM_VIDEOMODES;<sp/>mode++)<sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>videoMode<sp/>=<sp/>(VideoMode)mode;</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(videoMode<sp/>==<sp/>VIDEOMODE_FORMAT7)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rate=0;<sp/>rate&lt;NUM_FRAMERATES;<sp/>rate++)<sp/>{</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameRate<sp/>=<sp/>(FrameRate)rate;</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frameRate<sp/>==<sp/>FRAMERATE_FORMAT7)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetVideoModeAndFrameRateInfo(videoMode,<sp/>frameRate,<sp/>&amp;supported);</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetVideoModeAndFrameRateInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(supported)<sp/>{</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Video<sp/>mode<sp/>%d<sp/>(%s)<sp/>and<sp/>frame<sp/>rate<sp/>%d<sp/>(%s)\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode,<sp/>videoModeStrings[mode],<sp/>rate,<sp/>frameRateStrings[rate]);</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetVideoModeAndFrameRate(&amp;videoMode,<sp/>&amp;frameRate);</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetVideoModeAndFrameRate&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\nCurrent<sp/>image<sp/>settings\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Mode:<sp/>%d<sp/>(%s)\n&quot;</highlight><highlight class="normal">,<sp/>videoMode,<sp/>videoModeStrings[videoMode]);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Rate:<sp/>%d<sp/>(%s)\n&quot;</highlight><highlight class="normal">,<sp/>frameRate,<sp/>frameRateStrings[frameRate]);</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(videoMode<sp/>==<sp/>VIDEOMODE_FORMAT7)<sp/>{</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCamera_-&gt;GetFormat7Configuration(&amp;f7Settings,<sp/>&amp;packetSize,<sp/>&amp;percentage);</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetFormat7Configuration&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixelFormatIndex<sp/>=<sp/>getPixelFormatIndex(f7Settings.pixelFormat);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Format7<sp/>video<sp/>format<sp/>currently<sp/>selected\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Packet<sp/>size:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>packetSize);</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Bandwidth<sp/>%%:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>percentage);</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mode:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>f7Settings.mode);</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Offset:<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>f7Settings.offsetX,<sp/>f7Settings.offsetY);</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size:<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>f7Settings.width,<sp/>f7Settings.height);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>PixelFormat:<sp/>index=%d,<sp/>value=0x%x<sp/>[%s]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixelFormatIndex,<sp/>f7Settings.pixelFormat,<sp/>pixelFormatStrings[pixelFormatIndex]);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pGigECamera_)<sp/>{</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetSize;</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetDelay;</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>heartBeat;</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>heartBeatTimeout;</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binX,<sp/>binY;</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GigEImageSettings<sp/>gigESettings;</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mode<sp/>gigEMode;</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImagingMode(&amp;gigEMode);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImagingMode&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\nSupported<sp/>GigE<sp/>modes:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mode=0;<sp/>mode&lt;NUM_MODES;<sp/>mode++)<sp/>{</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;QueryGigEImagingMode((Mode)mode,<sp/>&amp;supported);</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;QueryGigEImagingMode&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(supported)<sp/>{</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>GigE<sp/>mode<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>mode);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::SetGigEImagingMode,<sp/>pGigECamera_=%p,<sp/>mode=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>mode);</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;SetGigEImagingMode((Mode)mode);</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetGigEImagingMode&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynPrint(pasynUserSelf,<sp/>ASYN_TRACE_WARNING,</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s::%s<sp/>calling<sp/>GigECamera::GetGigEImageSettingsInfo,<sp/>pGigECamera_=%p,<sp/>pGigEImageSettingsInfo_=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_d_time_pix_8cpp_1af0e94d13028051cd5339d204bfbb057d" kindref="member">driverName</ref>,<sp/>functionName,<sp/>pGigECamera_,<sp/>pGigEImageSettingsInfo_);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImageSettingsInfo(pGigEImageSettingsInfo_);</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImageSettingsInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>maxWidth:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;maxWidth);</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>maxHeight:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;maxHeight);</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>offsetHStepSize:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;offsetHStepSize);</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>offsetVStepSize:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;offsetVStepSize);</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>imageHStepSize:<sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;imageHStepSize);</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>imageVStepSize:<sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;imageVStepSize);</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>pixelFormatBitField<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;pixelFormatBitField);</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>vendorPixelFormatBitField<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>pGigEImageSettingsInfo_-&gt;vendorPixelFormatBitField);</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;SetGigEImagingMode(gigEMode);</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;SetGigEImagingMode&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImageSettings(&amp;gigESettings);</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImageSettings&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;GetGigEImageBinningSettings(&amp;binX,<sp/>&amp;binY);</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEImageBinningSettings&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pGigECamera_-&gt;<sp/>GetGigEConfig(pGigEConfig_);</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetGigEConfig&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixelFormatIndex<sp/>=<sp/>getPixelFormatIndex(gigESettings.pixelFormat);</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getAllGigEProperties();</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(PACKET_SIZE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpoint_grey_1a1d5eaca85cdf5e2e5910794d667e1c92" kindref="member">PGGigEPropertyValue</ref>,<sp/>&amp;packetSize);</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(PACKET_DELAY,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpoint_grey_1a1d5eaca85cdf5e2e5910794d667e1c92" kindref="member">PGGigEPropertyValue</ref>,<sp/>&amp;packetDelay);</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(HEARTBEAT,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpoint_grey_1a1d5eaca85cdf5e2e5910794d667e1c92" kindref="member">PGGigEPropertyValue</ref>,<sp/>&amp;heartBeat);</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(HEARTBEAT_TIMEOUT,<sp/><ref refid="classpoint_grey_1a1d5eaca85cdf5e2e5910794d667e1c92" kindref="member">PGGigEPropertyValue</ref>,<sp/>&amp;heartBeatTimeout);</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>GigE<sp/>image<sp/>settings\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mode:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>gigEMode);</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Packet<sp/>size:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>packetSize);</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Packet<sp/>delay:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>packetDelay);</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Packet<sp/>resend<sp/>enable:%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>pGigEConfig_<sp/>-&gt;<sp/>enablePacketResend);</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Heartbeat:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>heartBeat);</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Heartbeat<sp/>timeout:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>heartBeatTimeout);</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Offset:<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>gigESettings.offsetX,<sp/>gigESettings.offsetY);</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size:<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>gigESettings.width,<sp/>gigESettings.height);</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Binning:<sp/>%u<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>binX,<sp/>binY);</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PixelFormat:<sp/>index=%d,<sp/>value=0x%x<sp/>[%s]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixelFormatIndex,<sp/>gigESettings.pixelFormat,<sp/>pixelFormatStrings[pixelFormatIndex]);</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Iterate<sp/>through<sp/>all<sp/>of<sp/>the<sp/>available<sp/>properties<sp/>and<sp/>report<sp/>on<sp/>them<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\nSupported<sp/>properties\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/>Property<sp/>*pProperty;</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyInfo<sp/>*pPropInfo;</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(property=0;<sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal">&lt;<ref refid="point_grey_8cpp_1a2b6573ab5111e79e03216ce92942e25c" kindref="member">NUM_PROPERTIES</ref>;<sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal">++)<sp/>{</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProperty<sp/>=<sp/>allProperties_[property];</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPropInfo<sp/>=<sp/>allPropInfos_[property];</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetProperty(pProperty);</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetProperty&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetPropertyInfo(pPropInfo);</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetPropertyInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pProperty-&gt;present)<sp/>{</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyTypeStrings[property]);</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>min<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPropInfo-&gt;min);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>max<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPropInfo-&gt;max);</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProperty-&gt;valueA);</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>hasAutoMode<sp/><sp/><sp/>=<sp/>%d<sp/><sp/><sp/><sp/><sp/>status=%d\n&quot;</highlight><highlight class="normal">,<sp/>pPropInfo-&gt;autoSupported,<sp/><sp/><sp/><sp/>pProperty-&gt;autoManualMode);</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>hasManualMode<sp/>=<sp/>%d<sp/><sp/><sp/><sp/><sp/>status=%d\n&quot;</highlight><highlight class="normal">,<sp/>pPropInfo-&gt;manualSupported,<sp/><sp/>!pProperty-&gt;autoManualMode);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>hasOnOff<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%d<sp/><sp/><sp/><sp/><sp/>status=%d\n&quot;</highlight><highlight class="normal">,<sp/>pPropInfo-&gt;onOffSupported,<sp/><sp/><sp/>pProperty-&gt;onOff);</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>hasOnePush<sp/><sp/><sp/><sp/>=<sp/>%d<sp/><sp/><sp/><sp/><sp/>status=%d\n&quot;</highlight><highlight class="normal">,<sp/>pPropInfo-&gt;onePushSupported,<sp/>pProperty-&gt;onePush);</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>hasReadout<sp/><sp/><sp/><sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPropInfo-&gt;readOutSupported);</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>hasAbsControl<sp/>=<sp/>%d<sp/><sp/><sp/><sp/><sp/>status=%d\n&quot;</highlight><highlight class="normal">,<sp/>pPropInfo-&gt;absValSupported,<sp/><sp/>pProperty-&gt;absControl);</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pPropInfo-&gt;absValSupported)<sp/>{<sp/></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>units<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%s<sp/><sp/><sp/><sp/>abbreviated=%s\n&quot;</highlight><highlight class="normal">,<sp/>pPropInfo-&gt;pUnits,<sp/>pPropInfo-&gt;pUnitAbbr);</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>min<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>pPropInfo-&gt;absMin);</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>max<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>pPropInfo-&gt;absMax);</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>pProperty-&gt;absValue);</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>%s<sp/>is<sp/>not<sp/>supported\n&quot;</highlight><highlight class="normal">,<sp/>propertyTypeStrings[property]);</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetTriggerMode(pTriggerMode_);</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetTriggerMode&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\nTrigger<sp/>mode\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mode:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pTriggerMode_-&gt;mode);</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>onOff:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pTriggerMode_-&gt;onOff);</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>polarity:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pTriggerMode_-&gt;polarity);</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>source:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pTriggerMode_-&gt;source);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>parameter:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pTriggerMode_-&gt;parameter);</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetTriggerModeInfo(pTriggerModeInfo_);</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetTriggerModeInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\nTrigger<sp/>mode<sp/>information\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>present:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>pTriggerModeInfo_-&gt;present);</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readOutSupported:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>pTriggerModeInfo_-&gt;readOutSupported);</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onOffSupported:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>pTriggerModeInfo_-&gt;onOffSupported);</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>polaritySupported:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>pTriggerModeInfo_-&gt;polaritySupported);</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueReadable:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>pTriggerModeInfo_-&gt;valueReadable);</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceMask:<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>pTriggerModeInfo_-&gt;sourceMask);</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>softwareTriggerSupported:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>pTriggerModeInfo_-&gt;softwareTriggerSupported);</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modeMask:<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>pTriggerModeInfo_-&gt;modeMask);</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\nStrobe<sp/>information\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>pStrobeControl_-&gt;source;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;<ref refid="point_grey_8cpp_1ae1a70432cf02543f2f8e9432d6f0ef0c" kindref="member">NUM_GPIO_PINS</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pStrobeInfo_-&gt;source<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetStrobeInfo(pStrobeInfo_);</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetStrobeInfo&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pStrobeInfo_-&gt;present)<sp/>{</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>Strobe<sp/>source<sp/>%d:<sp/>present\n&quot;</highlight><highlight class="normal">,<sp/>j);</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>readOutSupported:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pStrobeInfo_-&gt;readOutSupported);</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>onOffSupported:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pStrobeInfo_-&gt;onOffSupported);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>polaritySupported:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pStrobeInfo_-&gt;polaritySupported);</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minValue:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>pStrobeInfo_-&gt;minValue);</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxValue:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>pStrobeInfo_-&gt;maxValue);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pStrobeControl_-&gt;source<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetStrobe(pStrobeControl_);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetStrobe&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onOff:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pStrobeControl_-&gt;onOff);</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>polarity:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pStrobeControl_-&gt;polarity);</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>pStrobeControl_-&gt;delay);</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duration:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>pStrobeControl_-&gt;duration);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/>pStrobeControl_-&gt;source<sp/>=<sp/>source;</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>pCameraBase_-&gt;GetStats(pCameraStats_);</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkError(error,<sp/>functionName,<sp/></highlight><highlight class="stringliteral">&quot;GetStats&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCameraStats_-&gt;imageXmitFailed<sp/>==<sp/>0x80000000)<sp/>pCameraStats_-&gt;imageXmitFailed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\nCamera<sp/>statistics\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Images<sp/>dropped:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;imageDropped);</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Images<sp/>corrupt:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;imageCorrupt);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Transmit<sp/>failed:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;imageXmitFailed);</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Driver<sp/>dropped:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;imageDriverDropped);</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Register<sp/>read<sp/>failed:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;regReadFailed);</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Register<sp/>write<sp/>failed:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;regWriteFailed);</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Port<sp/>errors:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;portErrors);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Camera<sp/>power<sp/>up:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;cameraPowerUp);</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>voltages:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;numVoltages);</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;pCameraStats_-&gt;numVoltages;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voltage<sp/>%d:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>j,<sp/>pCameraStats_-&gt;cameraVoltages[j]);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>currents:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;numCurrents);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;pCameraStats_-&gt;numCurrents;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>%d:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>j,<sp/>pCameraStats_-&gt;cameraCurrents[j]);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Temperature<sp/>(C):<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;temperature/10.<sp/>-<sp/>273.15);</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Time<sp/>since<sp/>initialization:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;timeSinceInitialization);</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Time<sp/>since<sp/>bus<sp/>reset:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;timeSinceBusReset);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>#<sp/>resend<sp/>packets<sp/>requested:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;numResendPacketsRequested);</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>#<sp/>resend<sp/>packets<sp/>received:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;numResendPacketsReceived);</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Time<sp/>stamp:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>pCameraStats_-&gt;timeStamp.seconds<sp/>+<sp/></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCameraStats_-&gt;timeStamp.microSeconds/1e6);</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/>done:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1ac3f2d73a05eb54357ec3f052e1b000f2" kindref="member">ADDriver::report</ref>(fp,<sp/>details);</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"></highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>configArg0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Port<sp/>name&quot;</highlight><highlight class="normal">,<sp/>iocshArgString};</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>configArg1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;cameraId&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>configArg2<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;traceMask&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>configArg3<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;memoryChannel&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>configArg4<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;maxBuffers&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>configArg5<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;maxMemory&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>configArg6<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;priority&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>configArg7<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;stackSize&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>configArgs[]<sp/>=<sp/>{&amp;configArg0,</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;configArg1,</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;configArg2,</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;configArg3,</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;configArg4,</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;configArg5,</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;configArg6,</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;configArg7};</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshFuncDef<sp/>configpointGrey<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;pointGreyConfig&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>configArgs};</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>configCallFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArgBuf<sp/>*args)</highlight></codeline>
<codeline lineno="3055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="point_grey_8cpp_1a271c779ebbbf99f1e91806fa7f137c1a" kindref="member">pointGreyConfig</ref>(args[0].sval,<sp/>args[1].ival,<sp/>args[2].ival,<sp/></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[3].ival,<sp/>args[4].ival,<sp/>args[5].ival,</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[6].ival,<sp/>args[7].ival);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pointGreyRegister(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>iocshRegister(&amp;configpointGrey,<sp/>configCallFunc);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><ref refid="point_grey_8cpp_1aa24b4e8378fd76b5bbb54ee7c0efbfa5" kindref="member">epicsExportRegistrar</ref>(pointGreyRegister);</highlight></codeline>
<codeline lineno="3069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/ADPointGrey/pointGreyApp/src/pointGrey.cpp"/>
  </compounddef>
</doxygen>
