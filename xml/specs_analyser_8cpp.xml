<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="specs_analyser_8cpp" kind="file" language="C++">
    <compoundname>specsAnalyser.cpp</compoundname>
    <includes refid="specs_analyser_8h" local="yes">specsAnalyser.h</includes>
    <incdepgraph>
      <node id="4">
        <label>sys/stat.h</label>
      </node>
      <node id="13">
        <label>locale</label>
      </node>
      <node id="19">
        <label>iocsh.h</label>
      </node>
      <node id="23">
        <label>epicsTypes.h</label>
      </node>
      <node id="29">
        <label>NDArray.h</label>
        <link refid="_n_d_array_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>NDAttributeList.h</label>
        <link refid="_n_d_attribute_list_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stdlib.h</label>
      </node>
      <node id="27">
        <label>epicsMutex.h</label>
      </node>
      <node id="12">
        <label>errno.h</label>
      </node>
      <node id="35">
        <label>epicsVersion.h</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="20">
        <label>drvSup.h</label>
      </node>
      <node id="16">
        <label>epicsThread.h</label>
      </node>
      <node id="1">
        <label>/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp</label>
        <link refid="specs_analyser_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>epicsExport.h</label>
      </node>
      <node id="22">
        <label>ADDriver.h</label>
        <link refid="_a_d_driver_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ADCoreVersion.h</label>
        <link refid="_a_d_core_version_8h"/>
      </node>
      <node id="34">
        <label>ADCoreAPI.h</label>
        <link refid="_a_d_core_a_p_i_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>asynNDArrayDriver.h</label>
        <link refid="asyn_n_d_array_driver_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>epicsString.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="2">
        <label>specsAnalyser.h</label>
        <link refid="specs_analyser_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ellLib.h</label>
      </node>
      <node id="6">
        <label>sstream</label>
      </node>
      <node id="32">
        <label>NDAttribute.h</label>
        <link refid="_n_d_attribute_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>asynDriver.h</label>
      </node>
      <node id="11">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="37">
        <label>Codec.h</label>
        <link refid="_codec_8h"/>
      </node>
      <node id="25">
        <label>epicsTime.h</label>
      </node>
      <node id="28">
        <label>asynPortDriver.h</label>
      </node>
      <node id="30">
        <label>set</label>
      </node>
      <node id="24">
        <label>epicsMessageQueue.h</label>
      </node>
      <node id="15">
        <label>algorithm</label>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
      <node id="39">
        <label>asynOctetSyncIO.h</label>
      </node>
      <node id="17">
        <label>epicsEvent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="specs_analyser_8cpp_1a549543d84175e83cd13c62e97e705e5e" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg specsAnalyserConfigArg0</definition>
        <argsstring></argsstring>
        <name>specsAnalyserConfigArg0</name>
        <initializer>= {&quot;portName&quot;, iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2301" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specs_analyser_8cpp_1ad998d911a4093fc43bdb3dfc18542abf" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg specsAnalyserConfigArg1</definition>
        <argsstring></argsstring>
        <name>specsAnalyserConfigArg1</name>
        <initializer>= {&quot;driverPortName&quot;, iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2302" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specs_analyser_8cpp_1abee9bedf530bc25dd00f8b854e6ad8ea" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg specsAnalyserConfigArg2</definition>
        <argsstring></argsstring>
        <name>specsAnalyserConfigArg2</name>
        <initializer>= {&quot;Max number of <ref refid="class_n_d_array" kindref="compound">NDArray</ref> buffers&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2303" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specs_analyser_8cpp_1aeaae835f66f5e470f545afae7f806cc2" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg specsAnalyserConfigArg3</definition>
        <argsstring></argsstring>
        <name>specsAnalyserConfigArg3</name>
        <initializer>= {&quot;maxMemory&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2304" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specs_analyser_8cpp_1a241463b25727dddebde7783b16240b79" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg specsAnalyserConfigArg4</definition>
        <argsstring></argsstring>
        <name>specsAnalyserConfigArg4</name>
        <initializer>= {&quot;priority&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2305" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specs_analyser_8cpp_1a84e4eb2edfef756c7d7aea9d27223aeb" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg specsAnalyserConfigArg5</definition>
        <argsstring></argsstring>
        <name>specsAnalyserConfigArg5</name>
        <initializer>= {&quot;stackSize&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2306" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specs_analyser_8cpp_1ad725a295584b10af7c7d151039edde1b" prot="public" static="yes" mutable="no">
        <type>const iocshArg *const</type>
        <definition>const iocshArg* const specsAnalyserConfigArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>specsAnalyserConfigArgs</name>
        <initializer>=  {&amp;specsAnalyserConfigArg0,
                                                            &amp;specsAnalyserConfigArg1,
                                                            &amp;specsAnalyserConfigArg2,
                                                            &amp;specsAnalyserConfigArg3,
                                                            &amp;specsAnalyserConfigArg4,
                                                            &amp;specsAnalyserConfigArg5}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2308" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specs_analyser_8cpp_1afd7748c6a2aeb37c05e390380e87024b" prot="public" static="yes" mutable="no">
        <type>const iocshFuncDef</type>
        <definition>const iocshFuncDef configSpecsAnalyser</definition>
        <argsstring></argsstring>
        <name>configSpecsAnalyser</name>
        <initializer>= {&quot;specsAnalyserConfig&quot;, 6, specsAnalyserConfigArgs}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2315" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specs_analyser_8cpp_1a2f210673df9d0ad2d9ec43bfd957b7b4" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg specsAnalyserDebugArg0</definition>
        <argsstring></argsstring>
        <name>specsAnalyserDebugArg0</name>
        <initializer>= {&quot;port name&quot;, iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2323" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specs_analyser_8cpp_1a55e7c7d6e4251b7c3898efae1b7e6a18" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg specsAnalyserDebugArg1</definition>
        <argsstring></argsstring>
        <name>specsAnalyserDebugArg1</name>
        <initializer>= {&quot;method name&quot;, iocshArgString}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2324" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specs_analyser_8cpp_1afcc9d24e9d793c6683fa12800a7d44d0" prot="public" static="yes" mutable="no">
        <type>const iocshArg</type>
        <definition>const iocshArg specsAnalyserDebugArg2</definition>
        <argsstring></argsstring>
        <name>specsAnalyserDebugArg2</name>
        <initializer>= {&quot;debug on or off&quot;, iocshArgInt}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2325" column="23" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specs_analyser_8cpp_1acd69bedd57169b8133246eed7adde618" prot="public" static="yes" mutable="no">
        <type>const iocshArg *const</type>
        <definition>const iocshArg* const specsAnalyserDebugArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>specsAnalyserDebugArgs</name>
        <initializer>=  {&amp;specsAnalyserDebugArg0,
                                                           &amp;specsAnalyserDebugArg1,
                                                           &amp;specsAnalyserDebugArg2}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2327" column="30" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specs_analyser_8cpp_1ac52aca6fb6c4be8660c9df1ad9373e4e" prot="public" static="yes" mutable="no">
        <type>const iocshFuncDef</type>
        <definition>const iocshFuncDef debugSpecsAnalyser</definition>
        <argsstring></argsstring>
        <name>debugSpecsAnalyser</name>
        <initializer>= {&quot;specsAnalyserDebug&quot;, 3, specsAnalyserDebugArgs}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2331" column="27" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2331" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="specs_analyser_8cpp_1a2f6cf5450726fc9a65f001018cce8b6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int specsAnalyserConfig</definition>
        <argsstring>(const char *portName, const char *driverPort, int maxBuffers, size_t maxMemory, int priority, int stackSize)</argsstring>
        <name>specsAnalyserConfig</name>
        <param>
          <type>const char *</type>
          <declname>portName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>driverPort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxBuffers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxMemory</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stackSize</declname>
        </param>
        <briefdescription>
<para>A bit of C glue to make the config function available in the startup script (ioc shell) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="8" column="7" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="8" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="specs_analyser_8cpp_1a858be1f5f13c4941ae0c79dd74fa478c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int specsSetDebugLevel</definition>
        <argsstring>(const char *driver, const char *method, int debug)</argsstring>
        <name>specsSetDebugLevel</name>
        <param>
          <type>const char *</type>
          <declname>driver</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>method</declname>
        </param>
        <param>
          <type>int</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="14" column="7" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="14" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="specs_analyser_8cpp_1a801b88c3e0068881413c99598fe6953b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void specsAnalyserTaskC</definition>
        <argsstring>(void *drvPvt)</argsstring>
        <name>specsAnalyserTaskC</name>
        <param>
          <type>void *</type>
          <declname>drvPvt</declname>
        </param>
        <briefdescription>
<para>Function to run the analyser task within a separate thread in C++. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="31" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="specs_analyser_8cpp_1aef3a17ac3daa86d7250aa7d9ff584655" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void configSpecsAnalyserCallFunc</definition>
        <argsstring>(const iocshArgBuf *args)</argsstring>
        <name>configSpecsAnalyserCallFunc</name>
        <param>
          <type>const iocshArgBuf *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2317" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2317" bodyend="2320"/>
      </memberdef>
      <memberdef kind="function" id="specs_analyser_8cpp_1ae9ba2840f3d9861ebb9f9f7cf4a50548" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void debugSpecsAnalyserCallFunc</definition>
        <argsstring>(const iocshArgBuf *args)</argsstring>
        <name>debugSpecsAnalyserCallFunc</name>
        <param>
          <type>const iocshArgBuf *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2333" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2333" bodyend="2336"/>
      </memberdef>
      <memberdef kind="function" id="specs_analyser_8cpp_1ab4d91244c551c3655b16420acda758a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void specsAnalyserRegister</definition>
        <argsstring>(void)</argsstring>
        <name>specsAnalyserRegister</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2338" column="13" bodyfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" bodystart="2338" bodyend="2342"/>
      </memberdef>
      <memberdef kind="function" id="specs_analyser_8cpp_1ae7c2a581b057737ac3f4e13e9e1ac0e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>epicsExportRegistrar</definition>
        <argsstring>(specsAnalyserRegister)</argsstring>
        <name>epicsExportRegistrar</name>
        <param>
          <type>specsAnalyserRegister</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" line="2344" column="1" declfile="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp" declline="2344" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="specs_analyser_8h" kindref="compound">specsAnalyser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8cpp_1a2f6cf5450726fc9a65f001018cce8b6d" kindref="member">specsAnalyserConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*driverPort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_specs_analyser" kindref="compound">SpecsAnalyser</ref>(portName,<sp/>driverPort,<sp/>maxBuffers,<sp/>maxMemory,<sp/>priority,<sp/>stackSize);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8cpp_1a858be1f5f13c4941ae0c79dd74fa478c" kindref="member">specsSetDebugLevel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*driver,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*method,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>debug)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser" kindref="compound">SpecsAnalyser</ref><sp/>*sA;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;specsSetDebugLevel&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>sA<sp/>=<sp/>(<ref refid="class_specs_analyser" kindref="compound">SpecsAnalyser</ref>*)findAsynPortDriver(driver);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sA){</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s:<sp/>Error:<sp/>port<sp/>%s<sp/>not<sp/>found.&quot;</highlight><highlight class="normal">,<sp/>functionName,<sp/>driver);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sA-&gt;<ref refid="class_specs_analyser_1a6735677313df130d48ac6d9609e42120" kindref="member">debugLevel</ref>(method,<sp/>debug);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>specsAnalyserTaskC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*drvPvt)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser" kindref="compound">SpecsAnalyser</ref><sp/>*pPvt<sp/>=<sp/>(<ref refid="class_specs_analyser" kindref="compound">SpecsAnalyser</ref><sp/>*)drvPvt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPvt-&gt;<ref refid="class_specs_analyser_1a65bc1c6e446519aebbf2f1a233ae97f7" kindref="member">specsAnalyserTask</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="class_specs_analyser_1ac6ae2318561ee8250c6c4f0dfc26d70c" kindref="member">SpecsAnalyser::~SpecsAnalyser</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="class_specs_analyser_1a2311d526d08e2d1e40248a4d06d118f1" kindref="member">SpecsAnalyser::SpecsAnalyser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*portName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*driverPort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxMemory,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackSize)<sp/>:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="class_a_d_driver" kindref="compound">ADDriver</ref>(portName,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="specs_analyser_8h_1a8530dba42689b0e29e4f136baeb7901f" kindref="member">NUM_SPECS_PARAMS</ref>,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxBuffers,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxMemory,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynEnumMask<sp/>|<sp/>asynFloat64ArrayMask,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynEnumMask<sp/>|<sp/>asynFloat64ArrayMask,<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>interfaces<sp/>beyond<sp/>those<sp/>set<sp/>in<sp/>ADDriver.cpp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASYN_CANBLOCK,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="comment">//asynflags<sp/>(CANBLOCK<sp/>means<sp/>separate<sp/>thread<sp/>for<sp/>this<sp/>driver)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stackSize)<sp/></highlight><highlight class="comment">//<sp/>thread<sp/>priority<sp/>and<sp/>stack<sp/>size<sp/>(0=default)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::SpecsAnalyser&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>flag<sp/>to<sp/>state<sp/>this<sp/>is<sp/>our<sp/>first<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>firstConnect_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>debugger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>initDebugger(1);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>debugLevel(</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::asynWriteRead&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Initialize<sp/>non<sp/>static<sp/>data<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>portUser_<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>strcpy(driverPort_,<sp/>driverPort);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>epicsEvents<sp/>for<sp/>signalling<sp/>to<sp/>the<sp/>SPECS<sp/>Analyser<sp/>task<sp/>when<sp/>acquisition<sp/>starts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>this-&gt;startEventId_<sp/>=<sp/>epicsEventCreate(epicsEventEmpty);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;startEventId_){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>debug(functionName,<sp/></highlight><highlight class="stringliteral">&quot;epicsEventCreate<sp/>failure<sp/>for<sp/>start<sp/>event&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>epicsEvents<sp/>for<sp/>signalling<sp/>to<sp/>the<sp/>SPECS<sp/>Analyser<sp/>task<sp/>when<sp/>acquisition<sp/>stops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>this-&gt;stopEventId_<sp/>=<sp/>epicsEventCreate(epicsEventEmpty);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;stopEventId_){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>debug(functionName,<sp/></highlight><highlight class="stringliteral">&quot;epicsEventCreate<sp/>failure<sp/>for<sp/>stop<sp/>event&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>all<sp/>SPECS<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a61ff7e549b84e074a4295c8f7ec285a2" kindref="member">SPECSConnectString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSConnect_);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a9c168e0061daad1292137286139f9aae" kindref="member">SPECSConnectedString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSConnected_);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a67e351e4f7b4d4b66b7d0f99a44991c9" kindref="member">SPECSPauseAcqString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSPauseAcq_);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1aa1de6f4a5fc33ab7a8418acea64c7988" kindref="member">SPECSMsgCounterString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSMsgCounter_);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a8096d0d53aed988f613907149474196b" kindref="member">SPECSServerNameString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSServerName_);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a31452ad8178149f6002cf24915f11941" kindref="member">SPECSProtocolVersionString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSProtocolVersion_);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a6cc1c5d8235ba796bd2cd0222a54bb7e" kindref="member">SPECSProtocolVersionMinorString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSProtocolVersionMinor_);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a4c4dd281b1a9021ae211cb7aec91c722" kindref="member">SPECSProtocolVersionMajorString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSProtocolVersionMajor_);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a550cf3cea5bfd9ebc053c3b2e53b2507" kindref="member">SPECSStartEnergyString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSStartEnergy_);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a483ac37bbd574e7a7328306122cbb3e5" kindref="member">SPECSEndEnergyString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSEndEnergy_);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1af8d1142e547f24f2739e768f64b2716e" kindref="member">SPECSRetardingRatioString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSRetardingRatio_);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a1ef59c496a79c8a581dcdd57d0457526" kindref="member">SPECSKineticEnergyString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSKineticEnergy_);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a451446f5692c1c7d8623e16ac2028d10" kindref="member">SPECSStepWidthString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSStepWidth_);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a37777c9ea9a47dc4cc7e9b947594f4ed" kindref="member">SPECSSamplesString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSSamples_);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a2bbc694ad888280c251f552782211873" kindref="member">SPECSSamplesIterationString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSSamplesIteration_);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a5113772abe8af799b0e20666f1db3f66" kindref="member">SPECSSnapshotValuesString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSSnapshotValues_);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a733a2c43a82255a4eda1a2e69617567e" kindref="member">SPECSPassEnergyString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSPassEnergy_);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a46889e2aa0f4d5cf1a2338eb691b3165" kindref="member">SPECSLensModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSLensMode_);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1aef9fcf694474a9630261869d0afcd6d5" kindref="member">SPECSScanRangeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSScanRange_);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1ad887857f22cc30818074966bcd15d7a8" kindref="member">SPECSCurrentSampleString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSCurrentSample_);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a8a453519c4aae056db8a118c5bd45d04" kindref="member">SPECSPercentCompleteString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSPercentComplete_);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1abb9858dbfb5b294efd94a93b50102baf" kindref="member">SPECSRemainingTimeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSRemainingTime_);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a94918469e5a94672f3afc24b0eeba75b" kindref="member">SPECSCurrentSampleIterationString</ref>,<sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSCurrentSampleIteration_);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a9326f18125db5fc68ee79a885d6614cc" kindref="member">SPECSPercentCompleteIterationString</ref>,<sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSPercentCompleteIteration_);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1aa9441825cc16949cb460baf712f7ddb6" kindref="member">SPECSRemainingTimeIterationString</ref>,<sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSRemainingTimeIteration_);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a73e6faecd155933de98ed48d0e90cc90" kindref="member">SPECSAcqSpectrumString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64Array,<sp/><sp/>&amp;SPECSAcqSpectrum_);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1aa183df09671bdc8a1a9d1e38bcb950e9" kindref="member">SPECSAcqImageString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64Array,<sp/><sp/>&amp;SPECSAcqImage_);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1ae4e7f5a6f6d17f54c5c8e9271b4a81c4" kindref="member">SPECSRunModeString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSRunMode_);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a7dbcaed03e46f1c03b0b293e33e98dc6" kindref="member">SPECSDefineString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSDefine_);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a93ce42441cec83e5c353bba5c68f3a39" kindref="member">SPECSValidateString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSValidate_);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a6329f7a06ae6274ce52ac8a201e3b2c3" kindref="member">SPECSNonEnergyChannelsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSNonEnergyChannels_);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a53d6eb0f413c0b1284ffcd48a11dbe44" kindref="member">SPECSNonEnergyUnitsString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamOctet,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSNonEnergyUnits_);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a573cb9d7e84e33f4aee0f3004e4c68b2" kindref="member">SPECSNonEnergyMaxString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSNonEnergyMax_);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a8ecf0291ccef5bde1367557186472b91" kindref="member">SPECSNonEnergyMinString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSNonEnergyMin_);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a708323d21328decd60c4ae24aabf534c" kindref="member">SPECSSafeStateString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamInt32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSSafeState_);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>createParam(<ref refid="specs_analyser_8h_1a00d9889a244b384600812a2dcdadaa30" kindref="member">SPECSDataDelayMaxString</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynParamFloat64,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;SPECSDataDelayMax_);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>SPECS<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>setIntegerParam(SPECSConnected_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>setIntegerParam(SPECSPauseAcq_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>setIntegerParam(SPECSMsgCounter_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>setIntegerParam(SPECSPercentComplete_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>setIntegerParam(SPECSCurrentSample_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>setIntegerParam(SPECSSnapshotValues_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>setIntegerParam(SPECSSamplesIteration_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>setIntegerParam(SPECSPercentCompleteIteration_,<sp/><sp/>0);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>setIntegerParam(SPECSCurrentSampleIteration_,<sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>setDoubleParam(SPECSRemainingTime_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>setStringParam(ADManufacturer,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SPECS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>setIntegerParam(SPECSSafeState_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>setDoubleParam(SPECSDataDelayMax_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5.0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>debug(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>up<sp/>polling<sp/>task....&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>thread<sp/>that<sp/>runs<sp/>the<sp/>acquisition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>(epicsThreadCreate(</highlight><highlight class="stringliteral">&quot;SpecsAnalyserTask&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadPriorityMedium,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadGetStackSize(epicsThreadStackMedium),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(EPICSTHREADFUNC)specsAnalyserTaskC,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug(functionName,<sp/></highlight><highlight class="stringliteral">&quot;epicsTheadCreate<sp/>failure<sp/>for<sp/>image<sp/>task&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>makeConnection();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Failed<sp/>connection<sp/>is<sp/>not<sp/>terminal<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(status<sp/>!=<sp/>asynSuccess){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>setIntegerParam(ADStatus,<sp/>ADStatusError);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>setStringParam(ADStatusMessage,<sp/>&quot;Not<sp/>connected<sp/>to<sp/>SPECS&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>callParamCallbacks();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>status<sp/>=<sp/>asynSuccess;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>in<sp/>the<sp/>lens<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>readSpectrumParameter(SPECSLensMode_);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>in<sp/>the<sp/>scan<sp/>ranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>readSpectrumParameter(SPECSScanRange_);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>run<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>|=<sp/>readRunModes();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>status<sp/>is<sp/>bad.<sp/><sp/>If<sp/>it<sp/>is<sp/>do<sp/>our<sp/>best<sp/>to<sp/>set<sp/>the<sp/>status<sp/>record<sp/>and<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>setIntegerParam(ADStatus,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(ADStatusMessage,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialise<sp/>-<sp/>check<sp/>connection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a0d139916fd3d91b0a5281682258d130b" kindref="member">SpecsAnalyser::makeConnection</ref>()</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1ac86f22cc78986aba219c6a0add89b63a" kindref="member">connect</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstConnect_<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>our<sp/>first<sp/>connection<sp/>attempt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>in<sp/>the<sp/>device<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a19ec76f1f23a17b94e3c0a4813a44e5a" kindref="member">readDeviceVisibleName</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>all<sp/>of<sp/>the<sp/>available<sp/>parameters<sp/>obtained<sp/>from<sp/>the<sp/>hardware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a59863ff568ed74943a88c4e554fc800c" kindref="member">setupEPICSParameters</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>in<sp/>the<sp/>lists<sp/>of<sp/>enumerated<sp/>types<sp/>ready<sp/>for<sp/>use<sp/>by<sp/>records</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>number<sp/>of<sp/>non-energy<sp/>channels<sp/>(slices)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nonEnergyChannels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">getAnalyserParameter</ref>(</highlight><highlight class="stringliteral">&quot;NumNonEnergyChannels&quot;</highlight><highlight class="normal">,<sp/>nonEnergyChannels);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a54d63f638e6be4e5162c110474df5c2a" kindref="member">SPECSNonEnergyChannels_</ref>,<sp/>nonEnergyChannels);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>any<sp/>updates<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>connection<sp/>established,<sp/>set<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstConnect_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(asynStatus)status;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1ac86f22cc78986aba219c6a0add89b63a" kindref="member">SpecsAnalyser::connect</ref>()</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::connect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>our<sp/>Asyn<sp/>user<sp/>to<sp/>the<sp/>low<sp/>level<sp/>port<sp/>that<sp/>is<sp/>a<sp/>parameter<sp/>to<sp/>this<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a4f4621331f32f945d2f2199a4a2dac4f" kindref="member">asynPortConnect</ref>(driverPort_,<sp/>0,<sp/>&amp;portUser_,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>connect<sp/>to<sp/>low<sp/>level<sp/>asynOctetSyncIO<sp/>port&quot;</highlight><highlight class="normal">,<sp/>driverPort_);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Failure,<sp/>set<sp/>the<sp/>connected<sp/>status<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a10683b5735597c82640ae33de675dbd8" kindref="member">SPECSConnected_</ref>,<sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Success,<sp/>set<sp/>the<sp/>connected<sp/>status<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a10683b5735597c82640ae33de675dbd8" kindref="member">SPECSConnected_</ref>,<sp/><sp/><sp/><sp/><sp/>1);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Connected<sp/>to<sp/>SPECS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5aabf2281b95d16f607f1a7b1c5a8bd" kindref="member">ADStatusIdle</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a489bb13ceafa22ea5aba9fdcf5ce27ed" kindref="member">SpecsAnalyser::disconnect</ref>()</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::disconnect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connected<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a10683b5735597c82640ae33de675dbd8" kindref="member">SPECSConnected_</ref>,<sp/>&amp;connected);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>only<sp/>force<sp/>a<sp/>disconnect<sp/>if<sp/>we<sp/>are<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connected<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>our<sp/>Asyn<sp/>user<sp/>to<sp/>the<sp/>low<sp/>level<sp/>port<sp/>that<sp/>is<sp/>a<sp/>parameter<sp/>to<sp/>this<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a34bc159bddda9ee1a15d6af966b7f1b2" kindref="member">asynPortDisconnect</ref>(portUser_);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>disconnect<sp/>to<sp/>low<sp/>level<sp/>asynOctetSyncIO<sp/>port&quot;</highlight><highlight class="normal">,<sp/>driverPort_);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_specs_analyser_1a65bc1c6e446519aebbf2f1a233ae97f7" kindref="member">SpecsAnalyser::specsAnalyserTask</ref>()</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>acquire;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numImages<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numImagesCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageCounter<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageMode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arrayCallbacks<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acquireTime,<sp/>acquirePeriod,<sp/>delay;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>epicsTimeStamp<sp/>startTime,<sp/>endTime;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>elapsedTime;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><ref refid="class_n_d_array" kindref="compound">NDArray</ref><sp/>*pImage;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dims[2];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><ref refid="_n_d_attribute_8h_1a34b835bcabc3b7f546f4b25c5767cb16" kindref="member">NDDataType_t</ref><sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>epicsFloat64<sp/>*pNDImage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>epicsFloat64<sp/>*image<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>epicsFloat64<sp/>*spectrum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nonEnergyChannels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>energyChannels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentDataPoint<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDataPoints<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runMode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>safeState<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::specsAnalyserTask&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Polling<sp/>thread<sp/>started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1){</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>&amp;acquire);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>not<sp/>acquiring<sp/>or<sp/>encountered<sp/>a<sp/>problem<sp/>then<sp/>wait<sp/>for<sp/>a<sp/>semaphore<sp/>that<sp/>is<sp/>given<sp/>when<sp/>acquisition<sp/>is<sp/>started</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!acquire){</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>paused<sp/>state<sp/>in<sp/>case<sp/>the<sp/>previous<sp/>acquisition<sp/>had<sp/>been<sp/>paused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a4e400a86c7b4757396100265aee8b8b4" kindref="member">SPECSPauseAcq_</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>set<sp/>the<sp/>status<sp/>message<sp/>if<sp/>we<sp/>didn&apos;t<sp/>encounter<sp/>a<sp/>problem<sp/>last<sp/>time,<sp/>so<sp/>we<sp/>don&apos;t<sp/>overwrite<sp/>the<sp/>error<sp/>mesage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!status){</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>the<sp/>acquire<sp/>command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>the<sp/>acquire<sp/>command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adstatus;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/>&amp;adstatus);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adstatus<sp/>!=<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref><sp/>&amp;&amp;<sp/>adstatus<sp/>!=<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref>)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5aabf2281b95d16f607f1a7b1c5a8bd" kindref="member">ADStatusIdle</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>counters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a17625c89904128e0d5ecb935c475e4b7" kindref="member">ADNumExposuresCounter</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a8cdc9e9fbabaadaa3c87108aad2e2895" kindref="member">ADNumImagesCounter</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>the<sp/>lock<sp/>while<sp/>we<sp/>wait<sp/>for<sp/>an<sp/>event<sp/>that<sp/>says<sp/>acquire<sp/>has<sp/>started,<sp/>then<sp/>lock<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>acquire<sp/>to<sp/>start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>epicsEventWait(this-&gt;startEventId_);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>&amp;acquire);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>paused<sp/>state<sp/>in<sp/>case<sp/>the<sp/>previous<sp/>acquisition<sp/>had<sp/>been<sp/>paused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a4e400a86c7b4757396100265aee8b8b4" kindref="member">SPECSPauseAcq_</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>number<sp/>of<sp/>exposures<sp/>(iterations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a25e11dff81ea84715fc8fe5ca290bacb" kindref="member">ADNumExposures</ref>,<sp/>&amp;iterations);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>number<sp/>of<sp/>non-energy<sp/>channels<sp/>ready<sp/>to<sp/>store<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">getAnalyserParameter</ref>(</highlight><highlight class="stringliteral">&quot;NumNonEnergyChannels&quot;</highlight><highlight class="normal">,<sp/>nonEnergyChannels);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a54d63f638e6be4e5162c110474df5c2a" kindref="member">SPECSNonEnergyChannels_</ref>,<sp/>nonEnergyChannels);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>any<sp/>stale<sp/>data<sp/>from<sp/>previous<sp/>acquisitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1a44a017a1b256f50c024df5765466d133" kindref="member">SPECS_CMD_CLEAR</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>desired<sp/>run<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a762da3f9ac8452798b06c7a5f3acdca4" kindref="member">SPECSRunMode_</ref>,<sp/>&amp;runMode);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>spectrum<sp/>according<sp/>to<sp/>the<sp/>run<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(runMode){</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1a9d44c981e1aff90889790fab0a54dcc9" kindref="member">SPECS_RUN_FAT</ref>:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>fixed<sp/>analyser<sp/>transmission<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1abafc64aab205485303699c5959d8bc69" kindref="member">defineSpectrumFAT</ref>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1a26aeba1b2dce5b2e6bb9ed3a934c0c72" kindref="member">SPECS_RUN_SFAT</ref>:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>snapshot<sp/>fixed<sp/>analyser<sp/>transmission<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1ac13f82a97a2aa74b2590a2483ba87b80" kindref="member">defineSpectrumSFAT</ref>();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1a7c36f9c61dfc18d8eb56a071cc9a02cd" kindref="member">SPECS_RUN_FRR</ref>:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>fixed<sp/>retarding<sp/>ratio<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1ac4cfbd5652ccef6426a7b04339bc730b" kindref="member">defineSpectrumFRR</ref>();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1aa83876f7a2d29d2720350bb5953f9c1f" kindref="member">SPECS_RUN_FE</ref>:</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>fixed<sp/>energy<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a274868673e611d13c9a23e363dfe7f43" kindref="member">defineSpectrumFE</ref>();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>bad<sp/>news,<sp/>invalid<sp/>mode<sp/>of<sp/>operation<sp/>abort<sp/>the<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>mode<sp/>of<sp/>operation<sp/>specified,<sp/>aborting&quot;</highlight><highlight class="normal">,<sp/>runMode);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>Validate<sp/>the<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a8820097afff0279606a80df32b4bed94" kindref="member">validateSpectrum</ref>();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>out<sp/>the<sp/>number<sp/>of<sp/>energy<sp/>channels<sp/>(samples)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a569d5963b7e617670de4f2bf7ff0eeb1" kindref="member">SPECSSamplesIteration_</ref>,<sp/>&amp;energyChannels);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>total<sp/>number<sp/>of<sp/>samples<sp/>for<sp/>all<sp/>of<sp/>the<sp/>iterations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1affdc36559d1a5efadf79e934f0e07c97" kindref="member">SPECSSamples_</ref>,<sp/>(energyChannels*iterations));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>mode<sp/>is<sp/>snapshot<sp/>then<sp/>we<sp/>need<sp/>to<sp/>calculate<sp/>the<sp/>number<sp/>of<sp/>energy<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Explanation<sp/>-<sp/>normally<sp/>the<sp/>Validate<sp/>command<sp/>will<sp/>return<sp/>the<sp/>number<sp/>of<sp/>energy<sp/>channels<sp/>via<sp/>the<sp/>&quot;Samples&quot;<sp/>field</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>For<sp/>Snapshot<sp/>mode<sp/>this<sp/>field<sp/>is<sp/>instead<sp/>used<sp/>to<sp/>report<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>that<sp/>will<sp/>be<sp/>used<sp/>to<sp/>tile<sp/>across<sp/>the<sp/>energy<sp/>range<sp/>-<sp/>the<sp/>actual</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>number<sp/>of<sp/>energy<sp/>channels<sp/>is<sp/>given<sp/>by<sp/>Samples<sp/>*<sp/>the<sp/>number<sp/>of<sp/>energy<sp/>channels<sp/>per<sp/>frame.<sp/>This<sp/>is<sp/>given<sp/>by<sp/>the<sp/>detector<sp/>binning<sp/>settings<sp/>in</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>SpecsLab<sp/>which<sp/>aren&apos;t<sp/>currently<sp/>exposed.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(runMode<sp/>==<sp/><ref refid="specs_analyser_8h_1a26aeba1b2dce5b2e6bb9ed3a934c0c72" kindref="member">SPECS_RUN_SFAT</ref>){</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,<sp/>end,<sp/>width;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1a083a5319fd22ec5be159e7b8aeced391" kindref="member">SPECSStartEnergy_</ref>,<sp/>&amp;start);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1a1d1e57f40bd862094092c8d0a918516b" kindref="member">SPECSEndEnergy_</ref>,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1ac8e87a557d03231c69c96eee3d680a0f" kindref="member">SPECSStepWidth_</ref>,<sp/>&amp;width);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>channels<sp/>is<sp/>simply<sp/>(end-start)/width<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energyChannels<sp/>=<sp/>(int)floor(((end-start)/width)+0.5)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a569d5963b7e617670de4f2bf7ff0eeb1" kindref="member">SPECSSamplesIteration_</ref>,<sp/>energyChannels);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1affdc36559d1a5efadf79e934f0e07c97" kindref="member">SPECSSamples_</ref>,<sp/>(energyChannels*iterations));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>image<sp/>buffer<sp/>if<sp/>it<sp/>has<sp/>already<sp/>been<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image){</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(image);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image=0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>spectrum<sp/>buffer<sp/>if<sp/>it<sp/>has<sp/>already<sp/>been<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spectrum){</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(spectrum);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectrum=0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Allocating<sp/>buffers:<sp/>nonEnergyChannels=&quot;</highlight><highlight class="normal">,<sp/>nonEnergyChannels);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Allocating<sp/>buffers:<sp/>energyChannels=&quot;</highlight><highlight class="normal">,<sp/>energyChannels);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Allocating<sp/>buffers:<sp/>image<sp/>malloc<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(nonEnergyChannels<sp/>*<sp/>energyChannels<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(epicsFloat64)));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Allocating<sp/>buffers:<sp/>spectrum<sp/>malloc<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(energyChannels<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(epicsFloat64)));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>the<sp/>required<sp/>memory<sp/>to<sp/>store<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)malloc(nonEnergyChannels<sp/>*<sp/>energyChannels<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(epicsFloat64));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>the<sp/>required<sp/>memory<sp/>to<sp/>store<sp/>the<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectrum<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)malloc(energyChannels<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(epicsFloat64));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image==0<sp/>||<sp/>spectrum==0)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status=asynError;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Allocating<sp/>buffers:<sp/>malloc<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>size<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1a79c89c00ea62734d82c89e09ea8aa47b" kindref="member">NDArraySizeX</ref>,<sp/>energyChannels);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[0]<sp/>=<sp/>energyChannels;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1a75753778fe16182d0771e924f05bde33" kindref="member">NDArraySizeY</ref>,<sp/>nonEnergyChannels);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims[1]<sp/>=<sp/>nonEnergyChannels;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbytes<sp/>=<sp/>(dims[0]<sp/>*<sp/>dims[1])<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1abf6f05821c7d1a9ab6aef60c9374281e" kindref="member">NDArraySize</ref>,<sp/>nbytes);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>data<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1af71358738ff1dbe4c9185f105807f799" kindref="member">NDDataType</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>&amp;<ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>here<sp/>for<sp/>any<sp/>bad<sp/>status,<sp/>if<sp/>there<sp/>is<sp/>a<sp/>problem<sp/>abort<sp/>the<sp/>acquisition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acquire<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>acquire);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>problems,<sp/>continue<sp/>with<sp/>the<sp/>acquisition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>image<sp/>data<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref><sp/>=<sp/>0;<sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref><sp/>&lt;<sp/>energyChannels*nonEnergyChannels;<sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref>++){</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image[<ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref>]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>spectrum<sp/>data<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref><sp/>=<sp/>0;<sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref><sp/>&lt;<sp/>energyChannels;<sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref>++){</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectrum[<ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref>]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>NDArray<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pImage<sp/>=<sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1ad3969854a37329ef4061cc560e9022dc" kindref="member">pNDArrayPool</ref>-&gt;<ref refid="class_n_d_array_pool_1a26b4360694655c4af6c853c2f3d2ce5e" kindref="member">alloc</ref>(2,<sp/>dims,<sp/><ref refid="_a_d_pylon_8cpp_1a048925b4357a1b4d6015c2113e05ce9f" kindref="member">dataType</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>percent<sp/>complete<sp/>and<sp/>current<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a90726c4e4d25c387fa5595e5bdd3a246" kindref="member">SPECSPercentCompleteIteration_</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1ab238f2c910d5ccf52ad99444cb513810" kindref="member">SPECSCurrentSampleIteration_</ref>,<sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a8d9e3ca4d3e24951cc2c7898f2d79118" kindref="member">SPECSPercentComplete_</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a1acd6f5816c73966de5b6ae40f651a6c" kindref="member">SPECSCurrentSample_</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>acquiring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;We<sp/>are<sp/>acquiring&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;startTime);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>exposure<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref>,<sp/>&amp;acquireTime);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1a8d5333aa86509cbd8f5fd824e79b2799" kindref="member">ADAcquirePeriod</ref>,<sp/>&amp;acquirePeriod);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>acquisition<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>,<sp/>&amp;numImages);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a7dcba273d750e726bb3f5e4b7a38f53a" kindref="member">ADImageMode</ref>,<sp/>&amp;imageMode);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a8b6a7410616e81ea25ebdcb5475577bb" kindref="member">SPECSSafeState_</ref>,<sp/>&amp;safeState);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>status<sp/>and<sp/>message<sp/>to<sp/>notify<sp/>user<sp/>we<sp/>are<sp/>acquiring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eabbe057f254bf25b013b4ab2edbed0499" kindref="member">ADStatusInitializing</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Executing<sp/>pre-scan...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>number<sp/>of<sp/>exposures<sp/>(iterations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iteration<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((iteration<sp/>&lt;<sp/>iterations)<sp/>&amp;&amp;<sp/>(acquire<sp/>==<sp/>1)){</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>any<sp/>stale<sp/>data<sp/>from<sp/>previous<sp/>acquisitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1a44a017a1b256f50c024df5765466d133" kindref="member">SPECS_CMD_CLEAR</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>start<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aad2ae4ec00768e23f00507e266955b5a" kindref="member">sendStartCommand</ref>(safeState);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>values;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentDataPoint<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numDataPoints<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1a83120dbaa9593c1016eb0b68eb019b16" kindref="member">SPECS_CMD_GET_STATUS</ref>,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNDImage<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)(pImage-&gt;<ref refid="class_n_d_array_1a9581f9d8f38225a2c2977bbed70fa2b8" kindref="member">pData</ref>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//while<sp/>(acquire<sp/>&amp;&amp;<sp/>status<sp/>==<sp/>asynSuccess<sp/>&amp;&amp;<sp/>(((data[&quot;ControllerState&quot;]<sp/>!=<sp/>&quot;finished&quot;)<sp/>&amp;&amp;<sp/>(data[&quot;ControllerState&quot;]<sp/>!=<sp/>&quot;aborted&quot;)<sp/>&amp;&amp;<sp/>(data[&quot;ControllerState&quot;]<sp/>!=<sp/>&quot;error&quot;))<sp/>||<sp/>(numDataPoints<sp/>!=<sp/>currentDataPoint))){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(acquire<sp/>&amp;&amp;<sp/>status<sp/>==<sp/>asynSuccess<sp/>&amp;&amp;<sp/>(((data[</highlight><highlight class="stringliteral">&quot;ControllerState&quot;</highlight><highlight class="normal">]<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;finished&quot;</highlight><highlight class="normal">)||(currentDataPoint&lt;energyChannels))<sp/>&amp;&amp;<sp/>(data[</highlight><highlight class="stringliteral">&quot;ControllerState&quot;</highlight><highlight class="normal">]<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;aborted&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(data[</highlight><highlight class="stringliteral">&quot;ControllerState&quot;</highlight><highlight class="normal">]<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">))){</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readEndDataPoint;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadSleep(<ref refid="specs_analyser_8h_1afc301293c7aff913991954c291cb1bc3" kindref="member">SPECS_UPDATE_RATE</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1a83120dbaa9593c1016eb0b68eb019b16" kindref="member">SPECS_CMD_GET_STATUS</ref>,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.count(</highlight><highlight class="stringliteral">&quot;Code&quot;</highlight><highlight class="normal">)<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;ControllerState&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Status&quot;</highlight><highlight class="normal">,<sp/>data);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>number<sp/>of<sp/>available<sp/>data<sp/>points,<sp/>and<sp/>retrieve<sp/>any<sp/>that<sp/>are<sp/>not<sp/>already<sp/>in<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a9c8cc5aab8081f61d43bde6560a37f76" kindref="member">readIntegerData</ref>(data,<sp/></highlight><highlight class="stringliteral">&quot;NumberOfAcquiredPoints&quot;</highlight><highlight class="normal">,<sp/>numDataPoints);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numDataPoints<sp/>&gt;<sp/>currentDataPoint){</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDataPoint==0)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea197b4bb1a794d6799db204a5dec4fbd2" kindref="member">ADStatusAcquire</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Acquiring<sp/>data...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>the<sp/>first<sp/>data<sp/>point<sp/>read<sp/>out<sp/>the<sp/>ordinate<sp/>range<sp/>and<sp/>units<sp/>(not<sp/>available<sp/>until<sp/>now).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDataPoint<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>This<sp/>delay<sp/>was<sp/>introduced<sp/>for<sp/>SpecsLab<sp/>4.19<sp/>because<sp/>it<sp/>indicated<sp/>data<sp/>was<sp/>availabe<sp/>when<sp/>it<sp/>wasnt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>I<sp/>beleive<sp/>its<sp/>not<sp/>required<sp/>any<sp/>more<sp/>(SpecsLab<sp/>4.30<sp/>appears<sp/>happy<sp/>without<sp/>it)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>3/8/17<sp/>This<sp/>is<sp/>still<sp/>causing<sp/>problems<sp/>so<sp/>re-introduced<sp/>a<sp/>small<sp/>delay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>dwell<sp/>time<sp/>to<sp/>elapse<sp/>to<sp/>guarantee<sp/>data<sp/>will<sp/>be<sp/>ready<sp/>to<sp/>read<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>period;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1ae6945d4b67676b5291aaa5ad5a11157b" kindref="member">SPECSDataDelayMax_</ref>,<sp/>&amp;period);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period<sp/>=<sp/>fmin(acquireTime,period);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;epicsThreadSleep&quot;</highlight><highlight class="normal">,<sp/>period);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsThreadSleep(period);<sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a7ee15e73df109d8c432506b2dc15831d" kindref="member">readSpectrumDataInfo</ref>(<ref refid="specs_analyser_8h_1abfd77f45bb9c399af7132bd6abcc39feac30154ab3b3c3ce7d27120f541278725" kindref="member">SPECSOrdinateRange</ref>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>the<sp/>extra<sp/>points<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>limits<sp/>the<sp/>size<sp/>of<sp/>the<sp/>read<sp/>request<sp/>here<sp/>to<sp/>request<sp/>the<sp/>data<sp/>in<sp/>chunks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DLS<sp/>detector<sp/>is<sp/>900x1000<sp/>so<sp/>maxValues<sp/>is<sp/>set<sp/>slightly<sp/>larger<sp/>thus<sp/>all<sp/>data<sp/>can<sp/>be<sp/>read<sp/>with<sp/>a<sp/>single<sp/>request<sp/>if<sp/>available<sp/>(as<sp/>occurs<sp/>in<sp/>snapshot<sp/>mode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxValues=1000000;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readEndDataPoint=numDataPoints;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((readEndDataPoint-currentDataPoint)*nonEnergyChannels<sp/>&gt;<sp/>maxValues)<sp/>readEndDataPoint<sp/>=<sp/>currentDataPoint+(maxValues/nonEnergyChannels);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//values.reserve((readEndDataPoint-currentDataPoint)*nonEnergyChannels);<sp/>//<sp/>unfortunately<sp/>this<sp/>doesnt<sp/>seem<sp/>to<sp/>help<sp/>speed<sp/>things<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a631359fc9fc8a18a713e3326cd41797f" kindref="member">readAcquisitionData</ref>(currentDataPoint,<sp/>(readEndDataPoint-1),<sp/>values);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>vector<sp/>of<sp/>newly<sp/>acquired<sp/>points<sp/>and<sp/>store<sp/>in<sp/>the<sp/>correct<sp/>image<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRxDataPoints=(int)values.size();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>samples<sp/>read&quot;</highlight><highlight class="normal">,<sp/>(readEndDataPoint-currentDataPoint));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>data<sp/>points&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)values.size());</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numRxDataPoints<sp/>&lt;<sp/>(readEndDataPoint-currentDataPoint)*nonEnergyChannels)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>enough<sp/>points<sp/>in<sp/>values[]<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;****<sp/>Received<sp/>too<sp/>few<sp/>data<sp/>points<sp/>***&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//readEndDataPoint<sp/>=<sp/>numRxDataPoints/nonEnergyChannels<sp/>+<sp/>currentDataPoint;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1a32061a0b1aa0e8f6b8f2fcd6aeea5435" kindref="member">SPECS_CMD_ABORT</ref>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SPECS<sp/>Receive<sp/>Error,<sp/>see<sp/>log&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1ac2a9315bdefaa07c3f8dc9416feae40f" kindref="member">y</ref><sp/>=<sp/>0;<sp/><ref refid="namespacemake_adl_1ac2a9315bdefaa07c3f8dc9416feae40f" kindref="member">y</ref><sp/>&lt;<sp/>nonEnergyChannels;<sp/><ref refid="namespacemake_adl_1ac2a9315bdefaa07c3f8dc9416feae40f" kindref="member">y</ref>++){</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Quick<sp/>and<sp/>dirty<sp/>fix<sp/>to<sp/>work<sp/>around<sp/>an<sp/>issues<sp/>with<sp/>snapshot<sp/>mode<sp/>-<sp/>if<sp/>samples<sp/>is<sp/>set<sp/>too<sp/>high<sp/>SPECS<sp/>will<sp/>misreport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>end<sp/>energy,<sp/>causing<sp/>us<sp/>to<sp/>allocate<sp/>too<sp/>small<sp/>a<sp/>buffer<sp/>and<sp/>overflow<sp/>it.<sp/>This<sp/>clause<sp/>should<sp/>detect<sp/>this<sp/>case<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>abort<sp/>before<sp/>we<sp/>overflow<sp/>and<sp/>crash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>the<sp/>data<sp/>we<sp/>get<sp/>will<sp/>be<sp/>nonsense<sp/>if<sp/>iterations<sp/>&gt;<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numDataPoints<sp/>&gt;<sp/>energyChannels)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>overflow:<sp/>More<sp/>data<sp/>than<sp/>number<sp/>of<sp/>allocated<sp/>energyChannels<sp/>received&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sent<sp/>the<sp/>message<sp/>to<sp/>the<sp/>analyser<sp/>to<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1a32061a0b1aa0e8f6b8f2fcd6aeea5435" kindref="member">SPECS_CMD_ABORT</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SPECS<sp/>Controller<sp/>Error(B),<sp/>see<sp/>log&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref><sp/>=<sp/>currentDataPoint;<sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref><sp/>&lt;<sp/>readEndDataPoint;<sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref>++){</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Uncomment<sp/>next<sp/>3<sp/>lines<sp/>for<sp/>(slow)<sp/>debug<sp/>print<sp/>out<sp/>of<sp/>all<sp/>data<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//char<sp/>tmpMsg[300];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sprintf(tmpMsg,<sp/>&quot;index=%d<sp/>image[%d,%d]=%lf&quot;,<sp/>index,x,y,values[index]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//debug(functionName,tmpMsg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>the<sp/>first<sp/>iteration<sp/>set<sp/>the<sp/>image<sp/>values,<sp/>otherwise<sp/>add<sp/>them<sp/>to<sp/>the<sp/>current<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iteration<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNDImage[(<ref refid="namespacemake_adl_1ac2a9315bdefaa07c3f8dc9416feae40f" kindref="member">y</ref><sp/>*<sp/>energyChannels)<sp/>+<sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref>]<sp/>=<sp/>values[index];</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image[(<ref refid="namespacemake_adl_1ac2a9315bdefaa07c3f8dc9416feae40f" kindref="member">y</ref><sp/>*<sp/>energyChannels)<sp/>+<sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref>]<sp/>=<sp/>values[index];</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNDImage[(<ref refid="namespacemake_adl_1ac2a9315bdefaa07c3f8dc9416feae40f" kindref="member">y</ref><sp/>*<sp/>energyChannels)<sp/>+<sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref>]<sp/>+=<sp/>values[index];</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image[(<ref refid="namespacemake_adl_1ac2a9315bdefaa07c3f8dc9416feae40f" kindref="member">y</ref><sp/>*<sp/>energyChannels)<sp/>+<sp/><ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref>]<sp/>+=<sp/>values[index];</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Integrate<sp/>for<sp/>the<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectrum[<ref refid="namespacemake_adl_1a75ac3107bf0f8a876fe96f2eed30eb15" kindref="member">x</ref>]<sp/>+=<sp/>values[index];</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>current<sp/>point<sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>data<sp/>points<sp/>retrieved<sp/>so<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentDataPoint<sp/>=<sp/>readEndDataPoint;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>listeners<sp/>of<sp/>the<sp/>update<sp/>to<sp/>the<sp/>spectrum<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iteration<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doCallbacksFloat64Array(spectrum,<sp/>currentDataPoint,<sp/><ref refid="class_specs_analyser_1af1b535870d9f23f1fd1aa15fd6204a44" kindref="member">SPECSAcqSpectrum_</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>the<sp/>first<sp/>iteration<sp/>the<sp/>spectrum<sp/>is<sp/>already<sp/>full<sp/>of<sp/>data,<sp/>so<sp/>always<sp/>post<sp/>the<sp/>full<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doCallbacksFloat64Array(spectrum,<sp/>energyChannels,<sp/><ref refid="class_specs_analyser_1af1b535870d9f23f1fd1aa15fd6204a44" kindref="member">SPECSAcqSpectrum_</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>listeners<sp/>of<sp/>the<sp/>update<sp/>to<sp/>the<sp/>image<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doCallbacksFloat64Array(image,<sp/>(energyChannels*nonEnergyChannels),<sp/><ref refid="class_specs_analyser_1ae5a7157a2933f9dc6fca5a35078e213f" kindref="member">SPECSAcqImage_</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>percent<sp/>complete<sp/>and<sp/>current<sp/>sample<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a90726c4e4d25c387fa5595e5bdd3a246" kindref="member">SPECSPercentCompleteIteration_</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(((currentDataPoint)*100)/energyChannels));</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a8d9e3ca4d3e24951cc2c7898f2d79118" kindref="member">SPECSPercentComplete_</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(((currentDataPoint+(iteration*energyChannels))*100)/(iterations*energyChannels)));</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1ab238f2c910d5ccf52ad99444cb513810" kindref="member">SPECSCurrentSampleIteration_</ref>,<sp/><sp/><sp/>currentDataPoint);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a1acd6f5816c73966de5b6ae40f651a6c" kindref="member">SPECSCurrentSample_</ref>,<sp/><sp/><sp/>currentDataPoint<sp/>+<sp/>(iteration*energyChannels));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>remaining<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dvalue<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>(double)(energyChannels<sp/>-<sp/>(currentDataPoint))<sp/>*<sp/>dvalue;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_specs_analyser_1ad8f5b86cd944ffa984a8340f0c425bc1" kindref="member">SPECSRemainingTimeIteration_</ref>,<sp/>time);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalTime<sp/>=<sp/>(double)(energyChannels<sp/>-<sp/>currentDataPoint<sp/>+<sp/>((iterations-(iteration+1))<sp/>*<sp/>energyChannels))<sp/>*<sp/>dvalue;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_specs_analyser_1ae321d525087702f42d32127ba53eb7da" kindref="member">SPECSRemainingTime_</ref>,<sp/>totalTime);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>acquisition<sp/>status<sp/>(user<sp/>may<sp/>have<sp/>pressed<sp/>abort<sp/>button)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>&amp;acquire);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[</highlight><highlight class="stringliteral">&quot;ControllerState&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[</highlight><highlight class="stringliteral">&quot;Message&quot;</highlight><highlight class="normal">].size()&gt;0)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/>data[</highlight><highlight class="stringliteral">&quot;Message&quot;</highlight><highlight class="normal">].c_str());</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SPECS<sp/>Controller<sp/>Error,<sp/>see<sp/>log&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>acquisition<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>&amp;acquire);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>the<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iteration++;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>the<sp/>iteration<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[0].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref><sp/>=<sp/>dims[0];</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1a71e5be2b11008face8dc6c5be19f71f1" kindref="member">dims</ref>[1].<ref refid="struct_n_d_dimension_1af32ef14ab526ed14d195875fc688f027" kindref="member">size</ref><sp/>=<sp/>dims[1];</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>bit<sp/>of<sp/>areadetector<sp/>image/frame<sp/>statistics...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a46e8f2fa100c21f2f0689c415b441fb0" kindref="member">ADNumImages</ref>,<sp/>&amp;numImages);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a7dcba273d750e726bb3f5e4b7a38f53a" kindref="member">ADImageMode</ref>,<sp/>&amp;imageMode);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1af2354f73acece6ee2427f5069b16fdb5" kindref="member">NDArrayCallbacks</ref>,<sp/>&amp;arrayCallbacks);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1abec5f5fc9922549d745d7dc7f19243ea" kindref="member">NDArrayCounter</ref>,<sp/>&amp;imageCounter);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a8cdc9e9fbabaadaa3c87108aad2e2895" kindref="member">ADNumImagesCounter</ref>,<sp/>&amp;numImagesCounter);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imageCounter++;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>numImagesCounter++;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1abec5f5fc9922549d745d7dc7f19243ea" kindref="member">NDArrayCounter</ref>,<sp/>imageCounter);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a8cdc9e9fbabaadaa3c87108aad2e2895" kindref="member">ADNumImagesCounter</ref>,<sp/>numImagesCounter);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1a62f165653bd0099f31b3d276bdb81d3c" kindref="member">uniqueId</ref><sp/>=<sp/>imageCounter;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1ac449943846ba4c5c18aa1ca5559470c2" kindref="member">timeStamp</ref><sp/>=<sp/>startTime.secPastEpoch<sp/>+<sp/>startTime.nsec<sp/>/<sp/>1.e9;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>any<sp/>attributes<sp/>that<sp/>have<sp/>been<sp/>defined<sp/>for<sp/>this<sp/>driver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classasyn_n_d_array_driver_1a7492ba858d885e2ba226a1c7ef9dcf72" kindref="member">getAttributes</ref>(pImage-&gt;<ref refid="class_n_d_array_1af5aad7b41118f465621cf045ed957469" kindref="member">pAttributeList</ref>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arrayCallbacks){</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>release<sp/>the<sp/>lock<sp/>here,<sp/>or<sp/>we<sp/>can<sp/>get<sp/>into<sp/>a<sp/>deadlock,<sp/>because<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>on<sp/>the<sp/>plugin<sp/>lock,<sp/>and<sp/>the<sp/>plugin<sp/>can<sp/>be<sp/>calling<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Calling<sp/>NDArray<sp/>callback&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doCallbacksGenericPointer(pImage,<sp/><ref refid="classasyn_n_d_array_driver_1a2b2fe51fba9a6ee4146813eac0c47fd1" kindref="member">NDArrayData</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>image<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pImage-&gt;<ref refid="class_n_d_array_1a0c4c61ea4d44ce97db979d24305c996e" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynError){</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>acquisition<sp/>is<sp/>complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((imageMode<sp/>==<sp/><ref refid="_a_d_driver_8h_1a4e304cb4683f0862cc3ca9b5fff213e2a03aaf45614e5ce358814831296e3ca7a" kindref="member">ADImageSingle</ref>)<sp/>||<sp/>((imageMode<sp/>==<sp/><ref refid="_a_d_driver_8h_1a4e304cb4683f0862cc3ca9b5fff213e2adead2fd35be4d7d411f48c04d00d576c" kindref="member">ADImageMultiple</ref>)<sp/>&amp;&amp;<sp/>(numImagesCounter<sp/>&gt;=<sp/>numImages))){</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Acquisition<sp/>completed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>callbacks<sp/>to<sp/>update<sp/>any<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>&amp;acquire);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>acquiring<sp/>then<sp/>sleep<sp/>for<sp/>the<sp/>acquire<sp/>period<sp/>minus<sp/>elapsed<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acquire){</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epicsTimeGetCurrent(&amp;endTime);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elapsedTime<sp/>=<sp/>epicsTimeDiffInSeconds(&amp;endTime,<sp/>&amp;startTime);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>acquirePeriod<sp/>-<sp/>elapsedTime;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delay<sp/>&gt;=<sp/>0.0){</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Delay&quot;</highlight><highlight class="normal">,<sp/>delay);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>set<sp/>the<sp/>status<sp/>to<sp/>indicate<sp/>we<sp/>are<sp/>in<sp/>the<sp/>period<sp/>delay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5f0661ab013affe1ec15bf297bcf40f" kindref="member">ADStatusWaiting</ref>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>epicsEventWaitWithTimeout(this-&gt;stopEventId_,<sp/>delay);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a2e32bcd17e5a54031bf7ab760a5bb236" kindref="member">SpecsAnalyser::readEnum</ref>(asynUser<sp/>*pasynUser,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strings[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>severities[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nElements,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*nIn)</highlight></codeline>
<codeline lineno="717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readEnum&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_specs_analyser_1a15c6be3c17efe0cde5f2203be52501e4" kindref="member">SPECSLensMode_</ref>){</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(index<sp/>=<sp/>0;<sp/>((index<sp/>&lt;<sp/>(size_t)lensModes_.size())<sp/>&amp;&amp;<sp/>(index<sp/>&lt;<sp/>nElements));<sp/>index++){</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strings[index]){</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(strings[index]);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strings[index]<sp/>=<sp/>epicsStrDup(lensModes_[index].c_str());</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>lens<sp/>mode&quot;</highlight><highlight class="normal">,<sp/>strings[index]);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[index]<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>severities[index]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>*nIn<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_specs_analyser_1a1e00cc0334314b737f3425ae4ef2c23c" kindref="member">SPECSScanRange_</ref>){</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(index<sp/>=<sp/>0;<sp/>((index<sp/>&lt;<sp/>(size_t)scanRanges_.size())<sp/>&amp;&amp;<sp/>(index<sp/>&lt;<sp/>nElements));<sp/>index++){</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strings[index]){</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(strings[index]);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strings[index]<sp/>=<sp/>epicsStrDup(scanRanges_[index].c_str());</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>scan<sp/>range&quot;</highlight><highlight class="normal">,<sp/>strings[index]);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[index]<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>severities[index]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>*nIn<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_specs_analyser_1a762da3f9ac8452798b06c7a5f3acdca4" kindref="member">SPECSRunMode_</ref>){</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(index<sp/>=<sp/>0;<sp/>((index<sp/>&lt;<sp/>(size_t)runModes_.size())<sp/>&amp;&amp;<sp/>(index<sp/>&lt;<sp/>nElements));<sp/>index++){</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strings[index]){</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(strings[index]);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strings[index]<sp/>=<sp/>epicsStrDup(runModes_[index].c_str());</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>run<sp/>mode&quot;</highlight><highlight class="normal">,<sp/>strings[index]);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[index]<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>severities[index]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>*nIn<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>*nIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a2fc63c452f5d54a378c01574764b2195" kindref="member">SpecsAnalyser::writeInt32</ref>(asynUser<sp/>*pasynUser,<sp/>epicsInt32<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::writeInt32&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldValue;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters<sp/>for<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adstatus;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>getIntegerParam(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>&amp;oldValue);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/>&amp;adstatus);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>){</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&amp;&amp;<sp/>(adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5aabf2281b95d16f607f1a7b1c5a8bd" kindref="member">ADStatusIdle</ref><sp/>||<sp/>adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref><sp/>||<sp/>adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref>)){</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>an<sp/>event<sp/>to<sp/>wake<sp/>up<sp/>the<sp/>electronAnalyser<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>epicsEventSignal(this-&gt;startEventId_);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&amp;&amp;<sp/>(adstatus<sp/>!=<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5aabf2281b95d16f607f1a7b1c5a8bd" kindref="member">ADStatusIdle</ref>)){</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>paused<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a4e400a86c7b4757396100265aee8b8b4" kindref="member">SPECSPauseAcq_</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref>);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>acquiring<sp/>(<sp/>abort<sp/>any<sp/>hardware<sp/>processings<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>epicsEventSignal(this-&gt;stopEventId_);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sent<sp/>the<sp/>message<sp/>to<sp/>the<sp/>analyser<sp/>to<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1a32061a0b1aa0e8f6b8f2fcd6aeea5435" kindref="member">SPECS_CMD_ABORT</ref>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_specs_analyser_1a7174baee0c25c2a627cfcdcd23e65e44" kindref="member">SPECSConnect_</ref>){</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connected<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>connected<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a10683b5735597c82640ae33de675dbd8" kindref="member">SPECSConnected_</ref>,<sp/>&amp;connected);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>proceed<sp/>if<sp/>we<sp/>are<sp/>not<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connected<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a0d139916fd3d91b0a5281682258d130b" kindref="member">makeConnection</ref>();</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>in<sp/>the<sp/>lens<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="class_specs_analyser_1a4ebd1ae9d439ca83159f357a46d4d308" kindref="member">readSpectrumParameter</ref>(<ref refid="class_specs_analyser_1a15c6be3c17efe0cde5f2203be52501e4" kindref="member">SPECSLensMode_</ref>);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>in<sp/>the<sp/>scan<sp/>ranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="class_specs_analyser_1a4ebd1ae9d439ca83159f357a46d4d308" kindref="member">readSpectrumParameter</ref>(<ref refid="class_specs_analyser_1a1e00cc0334314b737f3425ae4ef2c23c" kindref="member">SPECSScanRange_</ref>);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>the<sp/>run<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>|=<sp/><ref refid="class_specs_analyser_1a0e5d01283bb93950f7b1bea1455559ba" kindref="member">readRunModes</ref>();</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_specs_analyser_1a8332c4afd144a4dae68a02702a8debe2" kindref="member">SPECSDefine_</ref>){</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>new<sp/>definition<sp/>is<sp/>requested<sp/>so<sp/>check<sp/>the<sp/>value<sp/>of<sp/>the<sp/>mode<sp/>and<sp/>send<sp/>the<sp/>required<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runMode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a762da3f9ac8452798b06c7a5f3acdca4" kindref="member">SPECSRunMode_</ref>,<sp/>&amp;runMode);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(runMode){</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1a9d44c981e1aff90889790fab0a54dcc9" kindref="member">SPECS_RUN_FAT</ref>:</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1abafc64aab205485303699c5959d8bc69" kindref="member">defineSpectrumFAT</ref>();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1a26aeba1b2dce5b2e6bb9ed3a934c0c72" kindref="member">SPECS_RUN_SFAT</ref>:</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1ac13f82a97a2aa74b2590a2483ba87b80" kindref="member">defineSpectrumSFAT</ref>();</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1a7c36f9c61dfc18d8eb56a071cc9a02cd" kindref="member">SPECS_RUN_FRR</ref>:</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1ac4cfbd5652ccef6426a7b04339bc730b" kindref="member">defineSpectrumFRR</ref>();</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1aa83876f7a2d29d2720350bb5953f9c1f" kindref="member">SPECS_RUN_FE</ref>:</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a274868673e611d13c9a23e363dfe7f43" kindref="member">defineSpectrumFE</ref>();</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_specs_analyser_1a64211727b3c72bf0226c23d6f488ffa4" kindref="member">SPECSValidate_</ref>){</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>the<sp/>currently<sp/>defined<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a8820097afff0279606a80df32b4bed94" kindref="member">validateSpectrum</ref>();</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_specs_analyser_1a4e400a86c7b4757396100265aee8b8b4" kindref="member">SPECSPauseAcq_</ref>){</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>a<sp/>pause<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>acquire<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="classasyn_n_d_array_driver_1aa06c19f650b4619a7bdbf3a79397c3d3" kindref="member">ADAcquire</ref>,<sp/>&amp;acquire);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>we<sp/>are<sp/>not<sp/>already<sp/>paused<sp/>and<sp/>are<sp/>acquiring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldValue<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>acquire<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>pause<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1a5e822faead65480e89c111ee690693f9" kindref="member">SPECS_CMD_PAUSE</ref>);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Pausing<sp/>the<sp/>current<sp/>acquisition&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Acquisition<sp/>paused&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>act<sp/>on<sp/>the<sp/>pause,<sp/>we<sp/>are<sp/>not<sp/>in<sp/>the<sp/>correct<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a4e400a86c7b4757396100265aee8b8b4" kindref="member">SPECSPauseAcq_</ref>,<sp/>oldValue);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>pause<sp/>in<sp/>the<sp/>current<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>we<sp/>are<sp/>pause<sp/>and<sp/>acquiring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldValue<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>acquire<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>resume<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1ab87e182cace3e7e8470a71d2e5ef0f8c" kindref="member">SPECS_CMD_RESUME</ref>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Resuming<sp/>the<sp/>paused<sp/>acquisition&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Acquiring<sp/>data...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>act<sp/>on<sp/>the<sp/>resume,<sp/>we<sp/>are<sp/>not<sp/>in<sp/>the<sp/>correct<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a4e400a86c7b4757396100265aee8b8b4" kindref="member">SPECSPauseAcq_</ref>,<sp/>oldValue);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>resume<sp/>in<sp/>the<sp/>current<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_specs_analyser_1a54d63f638e6be4e5162c110474df5c2a" kindref="member">SPECSNonEnergyChannels_</ref>){</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a4c8db3d83556d78637c377bdb661a6f5" kindref="member">setAnalyserParameter</ref>(</highlight><highlight class="stringliteral">&quot;NumNonEnergyChannels&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">getAnalyserParameter</ref>(</highlight><highlight class="stringliteral">&quot;NumNonEnergyChannels&quot;</highlight><highlight class="normal">,<sp/>newValue);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>newValue);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>oldValue);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_specs_analyser_1a8b6a7410616e81ea25ebdcb5475577bb" kindref="member">SPECSSafeState_</ref><sp/>&amp;&amp;<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>){</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eae5aabf2281b95d16f607f1a7b1c5a8bd" kindref="member">ADStatusIdle</ref><sp/>||<sp/>adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72ea4f0778c31f69985dab4e84a0d9cb1cf2" kindref="member">ADStatusError</ref><sp/>||<sp/>adstatus<sp/>==<sp/><ref refid="_a_d_driver_8h_1a69820e97c7282152e222297a6d36f72eac174a17d7ad44cb4a19dd727258a582e" kindref="member">ADStatusAborted</ref>)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>SafeState<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1add0cf0c40ed6e1a335bb025416532f3b" kindref="member">SPECS_CMD_SET_SAFE_STATE</ref>);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>act<sp/>on<sp/>the<sp/>safe<sp/>state<sp/>request,<sp/>we<sp/>are<sp/>not<sp/>idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a8b6a7410616e81ea25ebdcb5475577bb" kindref="member">SPECSSafeState_</ref>,<sp/>oldValue);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>enter<sp/>safe<sp/>state<sp/>while<sp/>busy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status=asynError;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>function<sp/>is<sp/>one<sp/>of<sp/>our<sp/>stored<sp/>parameter<sp/>index<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(paramIndexes_.count(</highlight><highlight class="keyword">function</highlight><highlight class="normal">)<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>means<sp/>the<sp/>parameter<sp/>was<sp/>read<sp/>out<sp/>from<sp/>the<sp/>SPECS<sp/>hardware<sp/>at<sp/>startup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Update<sp/>request<sp/>of<sp/>parameter&quot;</highlight><highlight class="normal">,<sp/>paramIndexes_[</highlight><highlight class="keyword">function</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;New<sp/>Value&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a4c8db3d83556d78637c377bdb661a6f5" kindref="member">setAnalyserParameter</ref>(paramMap_[paramIndexes_[</highlight><highlight class="keyword">function</highlight><highlight class="normal">]],<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">getAnalyserParameter</ref>(paramMap_[paramIndexes_[</highlight><highlight class="keyword">function</highlight><highlight class="normal">]],<sp/>newValue);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>newValue);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>oldValue);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>callbacks<sp/>so<sp/>higher<sp/>layers<sp/>see<sp/>any<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status){</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Error,<sp/>status&quot;</highlight><highlight class="normal">,<sp/>status);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Error,<sp/>function&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Error,<sp/>value&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Function&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(asynStatus)status;</highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a4f3b88b26ca3e0bd38c9c76ea1ace3c2" kindref="member">SpecsAnalyser::writeFloat64</ref>(asynUser<sp/>*pasynUser,<sp/>epicsFloat64<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::writeFloat64&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>pasynUser-&gt;reason;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oldValue;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters<sp/>for<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adstatus;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>getDoubleParam(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>&amp;oldValue);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>setDoubleParam(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_a_d_driver_1a6a532aae0f51273450f4e897bf0aed1d" kindref="member">ADStatus</ref>,<sp/>&amp;adstatus);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>function<sp/>is<sp/>one<sp/>of<sp/>our<sp/>stored<sp/>parameter<sp/>index<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(paramIndexes_.count(</highlight><highlight class="keyword">function</highlight><highlight class="normal">)<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>means<sp/>the<sp/>parameter<sp/>was<sp/>read<sp/>out<sp/>from<sp/>the<sp/>SPECS<sp/>hardware<sp/>at<sp/>startup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Update<sp/>request<sp/>of<sp/>parameter&quot;</highlight><highlight class="normal">,<sp/>paramIndexes_[</highlight><highlight class="keyword">function</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;New<sp/>Value&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a4c8db3d83556d78637c377bdb661a6f5" kindref="member">setAnalyserParameter</ref>(paramMap_[paramIndexes_[</highlight><highlight class="keyword">function</highlight><highlight class="normal">]],<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newValue<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">getAnalyserParameter</ref>(paramMap_[paramIndexes_[</highlight><highlight class="keyword">function</highlight><highlight class="normal">]],<sp/>newValue);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>newValue);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(</highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>oldValue);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>callbacks<sp/>so<sp/>higher<sp/>layers<sp/>see<sp/>any<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status){</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Error,<sp/>status&quot;</highlight><highlight class="normal">,<sp/>status);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Error,<sp/>function&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Error,<sp/>value&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Function&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a8820097afff0279606a80df32b4bed94" kindref="member">SpecsAnalyser::validateSpectrum</ref>()</highlight></codeline>
<codeline lineno="980"><highlight class="normal">{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::validateSpectrum&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>command;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>decode;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/><ref refid="namespacemake_adl_1a52d428b79f0c536ff344e210818c6385" kindref="member">lookup</ref>;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dvalue<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ivalue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>command&quot;</highlight><highlight class="normal">,<sp/><ref refid="specs_analyser_8h_1adf30239b4583af93ab60c2fa5915da98" kindref="member">SPECS_CMD_VALIDATE</ref>);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>command<sp/>and<sp/>get<sp/>the<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1adf30239b4583af93ab60c2fa5915da98" kindref="member">SPECS_CMD_VALIDATE</ref>,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>command<sp/>sent<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Spectrum<sp/>validated&quot;</highlight><highlight class="normal">,<sp/>data);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>returned<sp/>values<sp/>to<sp/>set<sp/>the<sp/>EPICS<sp/>parameters<sp/>accordingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>StartEnergy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>decode.str(data[</highlight><highlight class="stringliteral">&quot;StartEnergy&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>decode<sp/>&gt;&gt;<sp/>dvalue;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>decode.clear();</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_specs_analyser_1a083a5319fd22ec5be159e7b8aeced391" kindref="member">SPECSStartEnergy_</ref>,<sp/>dvalue);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>EndEnergy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>decode.str(data[</highlight><highlight class="stringliteral">&quot;EndEnergy&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>decode<sp/>&gt;&gt;<sp/>dvalue;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>decode.clear();</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_specs_analyser_1a1d1e57f40bd862094092c8d0a918516b" kindref="member">SPECSEndEnergy_</ref>,<sp/>dvalue);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>StepWidth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>decode.str(data[</highlight><highlight class="stringliteral">&quot;StepWidth&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>decode<sp/>&gt;&gt;<sp/>dvalue;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>decode.clear();</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_specs_analyser_1ac8e87a557d03231c69c96eee3d680a0f" kindref="member">SPECSStepWidth_</ref>,<sp/>dvalue);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>Samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>decode.str(data[</highlight><highlight class="stringliteral">&quot;Samples&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>decode<sp/>&gt;&gt;<sp/>ivalue;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>decode.clear();</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a569d5963b7e617670de4f2bf7ff0eeb1" kindref="member">SPECSSamplesIteration_</ref>,<sp/>ivalue);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>DwellTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>decode.str(data[</highlight><highlight class="stringliteral">&quot;DwellTime&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>decode<sp/>&gt;&gt;<sp/>dvalue;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>decode.clear();</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref>,<sp/>dvalue);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>PassEnergy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>decode.str(data[</highlight><highlight class="stringliteral">&quot;PassEnergy&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>decode<sp/>&gt;&gt;<sp/>dvalue;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>decode.clear();</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_specs_analyser_1ad4ed96162f8aa94ba42b59628dd7bba2" kindref="member">SPECSPassEnergy_</ref>,<sp/>dvalue);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>LensMode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a52d428b79f0c536ff344e210818c6385" kindref="member">lookup</ref><sp/>=<sp/>data[</highlight><highlight class="stringliteral">&quot;LensMode&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(<ref refid="namespacemake_adl_1a52d428b79f0c536ff344e210818c6385" kindref="member">lookup</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>ivalue<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((index<sp/>&lt;<sp/>lensModes_.size())<sp/>&amp;&amp;<sp/>(ivalue<sp/>==<sp/>-1)){</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lensModes_[index]<sp/>==<sp/><ref refid="namespacemake_adl_1a52d428b79f0c536ff344e210818c6385" kindref="member">lookup</ref>){</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ivalue<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a15c6be3c17efe0cde5f2203be52501e4" kindref="member">SPECSLensMode_</ref>,<sp/>ivalue);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>ScanRange</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemake_adl_1a52d428b79f0c536ff344e210818c6385" kindref="member">lookup</ref><sp/>=<sp/>data[</highlight><highlight class="stringliteral">&quot;ScanRange&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(<ref refid="namespacemake_adl_1a52d428b79f0c536ff344e210818c6385" kindref="member">lookup</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>ivalue<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((index<sp/>&lt;<sp/>scanRanges_.size())<sp/>&amp;&amp;<sp/>(ivalue<sp/>==<sp/>-1)){</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanRanges_[index]<sp/>==<sp/><ref refid="namespacemake_adl_1a52d428b79f0c536ff344e210818c6385" kindref="member">lookup</ref>){</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ivalue<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a1e00cc0334314b737f3425ae4ef2c23c" kindref="member">SPECSScanRange_</ref>,<sp/>ivalue);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*****<sp/>WORKAROUND<sp/>FOR<sp/>FIXED<sp/>ENERGY<sp/>START<sp/>AND<sp/>END<sp/>*******</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runMode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a762da3f9ac8452798b06c7a5f3acdca4" kindref="member">SPECSRunMode_</ref>,<sp/>&amp;runMode);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(runMode<sp/>==<sp/><ref refid="specs_analyser_8h_1aa83876f7a2d29d2720350bb5953f9c1f" kindref="member">SPECS_RUN_FE</ref>){</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ke<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pe<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1acb80be73b64e90af551c3ff050b1edbe" kindref="member">SPECSKineticEnergy_</ref><sp/>,<sp/>&amp;ke);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1ad4ed96162f8aa94ba42b59628dd7bba2" kindref="member">SPECSPassEnergy_</ref>,<sp/>&amp;pe);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_specs_analyser_1a083a5319fd22ec5be159e7b8aeced391" kindref="member">SPECSStartEnergy_</ref>,<sp/>ke-(0.1*pe));</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_specs_analyser_1a1d1e57f40bd862094092c8d0a918516b" kindref="member">SPECSEndEnergy_</ref>,<sp/>ke+(0.1*pe));</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*****<sp/>END<sp/>OF<sp/>WORKAROUND<sp/>*******</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lock();</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>callbacks<sp/>so<sp/>higher<sp/>layers<sp/>see<sp/>any<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;unlock();</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1aad2ae4ec00768e23f00507e266955b5a" kindref="member">SpecsAnalyser::sendStartCommand</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>safeAfter)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::sendStartCommand&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>command;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>correct<sp/>command<sp/>string<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/><ref refid="specs_analyser_8h_1ac9706a3778cff780f58fcd7b63f6a465" kindref="member">SPECS_CMD_START</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>SetSafeStateAfter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(safeAfter)<sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SetSafeStateAfter:\&quot;true\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SetSafeStateAfter:\&quot;false\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>command&quot;</highlight><highlight class="normal">,<sp/>command.str());</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>command<sp/>and<sp/>get<sp/>the<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(command.str());</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1abafc64aab205485303699c5959d8bc69" kindref="member">SpecsAnalyser::defineSpectrumFAT</ref>()</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::defineSpectrumFAT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>command;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dvalue<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ivalue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>correct<sp/>command<sp/>string<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/><ref refid="specs_analyser_8h_1a3771907fdb5e58e18c6a56a0b8b87a65" kindref="member">SPECS_CMD_DEFINE_FAT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>StartEnergy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1a083a5319fd22ec5be159e7b8aeced391" kindref="member">SPECSStartEnergy_</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;StartEnergy:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>EndEnergy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1a1d1e57f40bd862094092c8d0a918516b" kindref="member">SPECSEndEnergy_</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EndEnergy:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>StepWidth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1ac8e87a557d03231c69c96eee3d680a0f" kindref="member">SPECSStepWidth_</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;StepWidth:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>DwellTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DwellTime:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>PassEnergy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1ad4ed96162f8aa94ba42b59628dd7bba2" kindref="member">SPECSPassEnergy_</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PassEnergy:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>LensMode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a15c6be3c17efe0cde5f2203be52501e4" kindref="member">SPECSLensMode_</ref><sp/>,<sp/>&amp;ivalue);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LensMode:\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lensModes_[ivalue]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>ScanRange</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a1e00cc0334314b737f3425ae4ef2c23c" kindref="member">SPECSScanRange_</ref><sp/>,<sp/>&amp;ivalue);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ScanRange:\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scanRanges_[ivalue]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>command&quot;</highlight><highlight class="normal">,<sp/>command.str());</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>command<sp/>and<sp/>get<sp/>the<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(command.str(),<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1ac13f82a97a2aa74b2590a2483ba87b80" kindref="member">SpecsAnalyser::defineSpectrumSFAT</ref>()</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::defineSpectrumSFAT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>command;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dvalue<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ivalue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>correct<sp/>command<sp/>string<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/><ref refid="specs_analyser_8h_1a39497fd22f3ddd2c7d33a0f5552a018d" kindref="member">SPECS_CMD_DEFINE_SFAT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>StartEnergy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1a083a5319fd22ec5be159e7b8aeced391" kindref="member">SPECSStartEnergy_</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;StartEnergy:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>EndEnergy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1a1d1e57f40bd862094092c8d0a918516b" kindref="member">SPECSEndEnergy_</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EndEnergy:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>Samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a702cb202f4bfdbcc99aab64e140ec7e9" kindref="member">SPECSSnapshotValues_</ref><sp/>,<sp/>&amp;ivalue);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Samples:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ivalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>DwellTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DwellTime:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>LensMode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a15c6be3c17efe0cde5f2203be52501e4" kindref="member">SPECSLensMode_</ref><sp/>,<sp/>&amp;ivalue);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LensMode:\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lensModes_[ivalue]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>ScanRange</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a1e00cc0334314b737f3425ae4ef2c23c" kindref="member">SPECSScanRange_</ref><sp/>,<sp/>&amp;ivalue);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ScanRange:\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scanRanges_[ivalue]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>command&quot;</highlight><highlight class="normal">,<sp/>command.str());</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>command<sp/>and<sp/>get<sp/>the<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(command.str(),<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1ac4cfbd5652ccef6426a7b04339bc730b" kindref="member">SpecsAnalyser::defineSpectrumFRR</ref>()</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::defineSpectrumFRR&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>command;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dvalue<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ivalue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>correct<sp/>command<sp/>string<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/><ref refid="specs_analyser_8h_1a21dc84054683737f0d4c354ecef278c5" kindref="member">SPECS_CMD_DEFINE_FRR</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>StartEnergy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1a083a5319fd22ec5be159e7b8aeced391" kindref="member">SPECSStartEnergy_</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;StartEnergy:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>EndEnergy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1a1d1e57f40bd862094092c8d0a918516b" kindref="member">SPECSEndEnergy_</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EndEnergy:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>StepWidth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1ac8e87a557d03231c69c96eee3d680a0f" kindref="member">SPECSStepWidth_</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;StepWidth:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>DwellTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DwellTime:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>RetardingRatio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1a4c8784da6aba9baf28005229808acf78" kindref="member">SPECSRetardingRatio_</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;RetardingRatio:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>LensMode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a15c6be3c17efe0cde5f2203be52501e4" kindref="member">SPECSLensMode_</ref><sp/>,<sp/>&amp;ivalue);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LensMode:\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lensModes_[ivalue]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>ScanRange</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a1e00cc0334314b737f3425ae4ef2c23c" kindref="member">SPECSScanRange_</ref><sp/>,<sp/>&amp;ivalue);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ScanRange:\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scanRanges_[ivalue]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>command&quot;</highlight><highlight class="normal">,<sp/>command.str());</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>command<sp/>and<sp/>get<sp/>the<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(command.str(),<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a274868673e611d13c9a23e363dfe7f43" kindref="member">SpecsAnalyser::defineSpectrumFE</ref>()</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::defineSpectrumFE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>command;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dvalue<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ivalue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>correct<sp/>command<sp/>string<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/><ref refid="specs_analyser_8h_1af8db93419154f97f517eaa3ccd6b03ce" kindref="member">SPECS_CMD_DEFINE_FE</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>KineticEnergy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1acb80be73b64e90af551c3ff050b1edbe" kindref="member">SPECSKineticEnergy_</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;KinEnergy:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>Samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a702cb202f4bfdbcc99aab64e140ec7e9" kindref="member">SPECSSnapshotValues_</ref><sp/>,<sp/>&amp;ivalue);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Samples:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ivalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>DwellTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_a_d_driver_1a922005db3a5a52dd24e6706fdfe1a160" kindref="member">ADAcquireTime</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DwellTime:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>PassEnergy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>getDoubleParam(<ref refid="class_specs_analyser_1ad4ed96162f8aa94ba42b59628dd7bba2" kindref="member">SPECSPassEnergy_</ref><sp/>,<sp/>&amp;dvalue);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PassEnergy:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dvalue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>LensMode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a15c6be3c17efe0cde5f2203be52501e4" kindref="member">SPECSLensMode_</ref><sp/>,<sp/>&amp;ivalue);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LensMode:\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lensModes_[ivalue]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>ScanRange</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a1e00cc0334314b737f3425ae4ef2c23c" kindref="member">SPECSScanRange_</ref><sp/>,<sp/>&amp;ivalue);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ScanRange:\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scanRanges_[ivalue]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>command&quot;</highlight><highlight class="normal">,<sp/>command.str());</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>command<sp/>and<sp/>get<sp/>the<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(command.str(),<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a631359fc9fc8a18a713e3326cd41797f" kindref="member">SpecsAnalyser::readAcquisitionData</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endIndex,<sp/>std::vector&lt;double&gt;<sp/>&amp;values)</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readAcquisitionData&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>data<sp/>from&quot;</highlight><highlight class="normal">,<sp/>startIndex);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>data<sp/>to&quot;</highlight><highlight class="normal">,<sp/>endIndex);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>construct<sp/>the<sp/>command<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>cmd;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/>cmd<sp/>&lt;&lt;<sp/><ref refid="specs_analyser_8h_1aa5d633265addbe50e186606e3d0abd73" kindref="member">SPECS_CMD_GET_DATA</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>FromIndex:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>startIndex<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ToIndex:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endIndex;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>send<sp/>the<sp/>command<sp/>and<sp/>retrieve<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(cmd.str(),<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decode<sp/>the<sp/>data<sp/>into<sp/>the<sp/>individual<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>values.clear();</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>dataString<sp/>=<sp/>data[</highlight><highlight class="stringliteral">&quot;Data&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(dataString,<sp/></highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dval<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>string<sp/>searching<sp/>for<sp/>commas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB<sp/>old<sp/>std::string<sp/>code<sp/>here<sp/>was<sp/>replaced<sp/>with<sp/>straight<sp/>C<sp/>to<sp/>increase<sp/>loop<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>startptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)dataString.c_str();</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>endptr<sp/>=<sp/>startptr;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*endptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*endptr++<sp/>==<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>each<sp/>occurrance<sp/>of<sp/>a<sp/>comma,<sp/>the<sp/>text<sp/>leading<sp/>up<sp/>to<sp/>it<sp/>is<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dval<sp/>=<sp/>strtod(startptr,<sp/>NULL);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.push_back(dval);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startptr<sp/>=<sp/>endptr;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>forget<sp/>the<sp/>final<sp/>data<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>dval<sp/>=<sp/>strtod(startptr,<sp/>NULL);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>values.push_back(dval);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">SpecsAnalyser::sendSimpleCommand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>command,<sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>*data)</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::sendSimpleCommand&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>ldata;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>command&quot;</highlight><highlight class="normal">,<sp/>command);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>command<sp/>and<sp/>get<sp/>the<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1aef8fea6aded7d899411870cb9ea6b117" kindref="member">commandResponse</ref>(command,<sp/><ref refid="structresponse" kindref="compound">response</ref>,<sp/>ldata);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>command<sp/>sent<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>response<sp/>for<sp/>any<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structresponse" kindref="compound">response</ref><sp/>==<sp/><ref refid="specs_analyser_8h_1a0d89f5afa958c8a7005f2aa5c9e0eeaa" kindref="member">SPECS_ERROR_STRING</ref>){</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>successfully<sp/>issue<sp/>the<sp/>command&quot;</highlight><highlight class="normal">,<sp/>command);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>msg<sp/>=<sp/>ldata[</highlight><highlight class="stringliteral">&quot;Code&quot;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>ldata[</highlight><highlight class="stringliteral">&quot;Message&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Returned<sp/>error&quot;</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_a_d_driver_1af8ca049bdf54eede6611e50a284152bc" kindref="member">ADStatusMessage</ref>,<sp/>msg.c_str());</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>*data<sp/>=<sp/>ldata;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a19ec76f1f23a17b94e3c0a4813a44e5a" kindref="member">SpecsAnalyser::readDeviceVisibleName</ref>()</highlight></codeline>
<codeline lineno="1346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readDeviceVisibleName&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>alyzerParameterNames<sp/>to<sp/>get<sp/>the<sp/>list<sp/>of<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1ad431fa0fb3176dcf530de3b9ff15e390" kindref="member">SPECS_CMD_GET_VISNAME</ref>,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Returned<sp/>parameter<sp/>map&quot;</highlight><highlight class="normal">,<sp/>data);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>nameString<sp/>=<sp/>data[</highlight><highlight class="stringliteral">&quot;AnalyzerVisibleName&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(nameString,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="classasyn_n_d_array_driver_1a4c15720b7002ec1ff9278058240d82da" kindref="member">ADModel</ref>,<sp/>nameString.c_str());</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a59863ff568ed74943a88c4e554fc800c" kindref="member">SpecsAnalyser::setupEPICSParameters</ref>()</highlight></codeline>
<codeline lineno="1368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::setupEPICSParameters&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>names;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/>std::locale<sp/>loc;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>call<sp/>getAllAnalyzerParameterNames<sp/>to<sp/>get<sp/>the<sp/>list<sp/>of<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1a44956a21dee2f608f94b4a5f8553dcf1" kindref="member">SPECS_CMD_GET_NAMES</ref>,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Returned<sp/>parameter<sp/>map&quot;</highlight><highlight class="normal">,<sp/>data);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>nameString<sp/>=<sp/>data[</highlight><highlight class="stringliteral">&quot;ParameterNames&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>any<sp/>[]<sp/>and<sp/>whitespace<sp/>from<sp/>the<sp/>ends<sp/>of<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(nameString,<sp/></highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>loop<sp/>over<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>string<sp/>and<sp/>search<sp/>for<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>small<sp/>state<sp/>machine<sp/>for<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>insideQuotes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>rawname;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>nameString.length();<sp/>index++){</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>current<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cc<sp/>=<sp/>nameString.substr(index,<sp/>1);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Are<sp/>we<sp/>inside<sp/>quotes<sp/>(reading<sp/>out<sp/>a<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(insideQuotes<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>the<sp/>character<sp/>a<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>||<sp/>cc<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>||<sp/>cc<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>||<sp/>cc<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>not<sp/>specials<sp/>in<sp/>the<sp/>parameter<sp/>name<sp/>but<sp/>we<sp/>do<sp/>need<sp/>them<sp/>in<sp/>the<sp/>SPECS<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawname<sp/>+=<sp/>cc;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>found&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>parameter<sp/>name<sp/>is<sp/>complete,<sp/>record<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paramMap_[<ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>]<sp/>=<sp/>rawname;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>name<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>rawname<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>we<sp/>are<sp/>no<sp/>longer<sp/>inside<sp/>quotes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insideQuotes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>part<sp/>of<sp/>the<sp/>parameter<sp/>name,<sp/>record<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/>+=<sp/>std::toupper(cc[0],<sp/>loc);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawname<sp/>+=<sp/>cc;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>are<sp/>only<sp/>really<sp/>looking<sp/>for<sp/>opening<sp/>quotation<sp/>marks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cc<sp/>=<sp/>nameString.substr(index,<sp/>1);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insideQuotes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Constructed<sp/>parameter<sp/>map&quot;</highlight><highlight class="normal">,<sp/>paramMap_);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>loop<sp/>over<sp/>paramMap_,<sp/>find<sp/>the<sp/>type<sp/>and<sp/>value<sp/>for<sp/>each,<sp/>and<sp/>create<sp/>the<sp/>asyn<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="specs_analyser_8h_1a18fcc036f049d62022faef28491639f9" kindref="member">SPECSValueType_t</ref><sp/>valType;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ivalue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dvalue<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>svalue<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bvalue<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/>paramMap_.begin();<sp/>iter<sp/>!=<sp/>paramMap_.end();<sp/>iter++){</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a834ee1bb680980d102383767177fc0dd" kindref="member">getAnalyserParameterType</ref>(iter-&gt;second,<sp/>valType);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>parameter<sp/>and<sp/>record<sp/>the<sp/>index<sp/>for<sp/>future<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(valType)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1a18fcc036f049d62022faef28491639f9a463da5ecf746fa7c1d160d0dacec7882" kindref="member">SPECSTypeInteger</ref>:</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>integer<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createParam(iter-&gt;first.c_str(),<sp/>asynParamInt32,<sp/>&amp;index);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>value<sp/>and<sp/>set<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">getAnalyserParameter</ref>(iter-&gt;second,<sp/>ivalue);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(index,<sp/>ivalue);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>index<sp/>to<sp/>parameter<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paramIndexes_[index]<sp/>=<sp/>iter-&gt;first;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1a18fcc036f049d62022faef28491639f9a92a62f4ad1501fe6e9bffa0da9622f6f" kindref="member">SPECSTypeDouble</ref>:</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>double<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createParam(iter-&gt;first.c_str(),<sp/>asynParamFloat64,<sp/>&amp;index);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>value<sp/>and<sp/>set<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">getAnalyserParameter</ref>(iter-&gt;second,<sp/>dvalue);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(index,<sp/>dvalue);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>index<sp/>to<sp/>parameter<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paramIndexes_[index]<sp/>=<sp/>iter-&gt;first;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1a18fcc036f049d62022faef28491639f9a12cdd65591baa9a6fc7b9c223671f43d" kindref="member">SPECSTypeString</ref>:</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>string<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createParam(iter-&gt;first.c_str(),<sp/>asynParamOctet,<sp/>&amp;index);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>value<sp/>and<sp/>set<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">getAnalyserParameter</ref>(iter-&gt;second,<sp/>svalue);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(index,<sp/>svalue.c_str());</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>index<sp/>to<sp/>parameter<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paramIndexes_[index]<sp/>=<sp/>iter-&gt;first;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1a18fcc036f049d62022faef28491639f9ab67c2676d30118285710fa596fc72935" kindref="member">SPECSTypeBool</ref>:</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>here,<sp/>&quot;</highlight><highlight class="normal">,<sp/>status);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>integer<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createParam(iter-&gt;first.c_str(),<sp/>asynParamInt32,<sp/>&amp;index);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>value<sp/>and<sp/>set<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">getAnalyserParameter</ref>(iter-&gt;second,<sp/>bvalue);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess)<sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Success&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(index,<sp/>bvalue);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>index<sp/>to<sp/>parameter<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paramIndexes_[index]<sp/>=<sp/>iter-&gt;first;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>bad,<sp/>all<sp/>cases<sp/>should<sp/>have<sp/>been<sp/>covered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Raise<sp/>this<sp/>as<sp/>an<sp/>error,<sp/>print<sp/>debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Constructed<sp/>paramIndexes_&quot;</highlight><highlight class="normal">,<sp/>paramIndexes_);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a834ee1bb680980d102383767177fc0dd" kindref="member">SpecsAnalyser::getAnalyserParameterType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>,<sp/><ref refid="specs_analyser_8h_1a18fcc036f049d62022faef28491639f9" kindref="member">SPECSValueType_t</ref><sp/>&amp;type)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::getAnalyserParameterType&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cmd<sp/>=<sp/><ref refid="specs_analyser_8h_1a3680f9246cefef4115749c3e3a185522" kindref="member">SPECS_CMD_GET_INFO</ref>;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Parameter&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ParameterName:\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>value<sp/>type&quot;</highlight><highlight class="normal">,<sp/>data[</highlight><highlight class="stringliteral">&quot;ValueType&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[</highlight><highlight class="stringliteral">&quot;ValueType&quot;</highlight><highlight class="normal">]<sp/>==<sp/><ref refid="specs_analyser_8h_1ac4c5ad9cd785331ac90362e7c2fe78a8" kindref="member">SPECS_TYPE_DOUBLE</ref>){</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/><ref refid="specs_analyser_8h_1a18fcc036f049d62022faef28491639f9a92a62f4ad1501fe6e9bffa0da9622f6f" kindref="member">SPECSTypeDouble</ref>;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[</highlight><highlight class="stringliteral">&quot;ValueType&quot;</highlight><highlight class="normal">]<sp/>==<sp/><ref refid="specs_analyser_8h_1ac03496c7ae251afef1486338496945c9" kindref="member">SPECS_TYPE_INTEGER</ref>){</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/><ref refid="specs_analyser_8h_1a18fcc036f049d62022faef28491639f9a463da5ecf746fa7c1d160d0dacec7882" kindref="member">SPECSTypeInteger</ref>;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[</highlight><highlight class="stringliteral">&quot;ValueType&quot;</highlight><highlight class="normal">]<sp/>==<sp/><ref refid="specs_analyser_8h_1ab8945202eb56b5ac711e4b4c83ff8bbb" kindref="member">SPECS_TYPE_STRING</ref>){</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/><ref refid="specs_analyser_8h_1a18fcc036f049d62022faef28491639f9a12cdd65591baa9a6fc7b9c223671f43d" kindref="member">SPECSTypeString</ref>;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[</highlight><highlight class="stringliteral">&quot;ValueType&quot;</highlight><highlight class="normal">]<sp/>==<sp/><ref refid="specs_analyser_8h_1adf6816eefcace554afe4a6462084858a" kindref="member">SPECS_TYPE_BOOL</ref>)</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/><ref refid="specs_analyser_8h_1a18fcc036f049d62022faef28491639f9ab67c2676d30118285710fa596fc72935" kindref="member">SPECSTypeBool</ref>;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">SpecsAnalyser::getAnalyserParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::getAnalyserParameter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cmd<sp/>=<sp/><ref refid="specs_analyser_8h_1a55e2798639fae76362becaaa535e82fd" kindref="member">SPECS_CMD_GET_VALUE</ref>;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Parameter&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ParameterName:\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[</highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\&quot;false\&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[</highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\&quot;true\&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a9c8cc5aab8081f61d43bde6560a37f76" kindref="member">readIntegerData</ref>(data,<sp/></highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">SpecsAnalyser::getAnalyserParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::getAnalyserParameter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cmd<sp/>=<sp/><ref refid="specs_analyser_8h_1a55e2798639fae76362becaaa535e82fd" kindref="member">SPECS_CMD_GET_VALUE</ref>;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Parameter&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ParameterName:\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1aca11278c7aa865f84394d186f25a0c8a" kindref="member">readDoubleData</ref>(data,<sp/></highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">SpecsAnalyser::getAnalyserParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>,<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>&amp;<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::getAnalyserParameter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cmd<sp/>=<sp/><ref refid="specs_analyser_8h_1a55e2798639fae76362becaaa535e82fd" kindref="member">SPECS_CMD_GET_VALUE</ref>;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Parameter&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ParameterName:\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>=<sp/>data[</highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a02a74d9ba0565a1d09e4bed374aff409" kindref="member">SpecsAnalyser::getAnalyserParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::getAnalyserParameter<sp/>(bool)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cmd<sp/>=<sp/><ref refid="specs_analyser_8h_1a55e2798639fae76362becaaa535e82fd" kindref="member">SPECS_CMD_GET_VALUE</ref>;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Parameter&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ParameterName:\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[</highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\&quot;false\&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[</highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\&quot;true\&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>value<sp/>returned<sp/>for<sp/>bool<sp/>parameter:<sp/>&quot;</highlight><highlight class="normal">,<sp/>data[</highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a4c8db3d83556d78637c377bdb661a6f5" kindref="member">SpecsAnalyser::setAnalyserParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::setAnalyserParameter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cmd<sp/>=<sp/><ref refid="specs_analyser_8h_1aaf317cee1c683501022b2f77d89eaef3" kindref="member">SPECS_CMD_SET_VALUE</ref>;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>svalue;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Parameter&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/>svalue<sp/>&lt;&lt;<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ParameterName:\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Value:&quot;</highlight><highlight class="normal"><sp/>+<sp/>svalue.str(),<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a4c8db3d83556d78637c377bdb661a6f5" kindref="member">SpecsAnalyser::setAnalyserParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::setAnalyserParameter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cmd<sp/>=<sp/><ref refid="specs_analyser_8h_1aaf317cee1c683501022b2f77d89eaef3" kindref="member">SPECS_CMD_SET_VALUE</ref>;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>svalue;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Parameter&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/>svalue<sp/>&lt;&lt;<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ParameterName:\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Value:&quot;</highlight><highlight class="normal"><sp/>+<sp/>svalue.str(),<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a4c8db3d83556d78637c377bdb661a6f5" kindref="member">SpecsAnalyser::setAnalyserParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>,<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::setAnalyserParameter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cmd<sp/>=<sp/><ref refid="specs_analyser_8h_1aaf317cee1c683501022b2f77d89eaef3" kindref="member">SPECS_CMD_SET_VALUE</ref>;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Parameter&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ParameterName:\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Value:&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a9c8cc5aab8081f61d43bde6560a37f76" kindref="member">SpecsAnalyser::readIntegerData</ref>(std::map&lt;std::string,<sp/>std::string&gt;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readIntegerData&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>integerValueStream(data[<ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>]);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/>integerValueStream<sp/>&gt;&gt;<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(integerValueStream.fail()){</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>decode<sp/>stream<sp/>into<sp/>integer&quot;</highlight><highlight class="normal">,<sp/>integerValueStream.str());</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1aca11278c7aa865f84394d186f25a0c8a" kindref="member">SpecsAnalyser::readDoubleData</ref>(std::map&lt;std::string,<sp/>std::string&gt;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="1650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readDoubleData&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>doubleValueStream(data[<ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>]);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>doubleValueStream<sp/>&gt;&gt;<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doubleValueStream.fail()){</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>decode<sp/>stream<sp/>into<sp/>double&quot;</highlight><highlight class="normal">,<sp/>doubleValueStream.str());</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a4ebd1ae9d439ca83159f357a46d4d308" kindref="member">SpecsAnalyser::readSpectrumParameter</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>param){</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readSpectrumParameter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;*<sp/>store;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>paramName;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/><ref refid="class_specs_analyser_1a15c6be3c17efe0cde5f2203be52501e4" kindref="member">SPECSLensMode_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>store<sp/>=<sp/>&amp;lensModes_;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>paramName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;LensMode\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>Lens<sp/>Modes...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>==<sp/><ref refid="class_specs_analyser_1a1e00cc0334314b737f3425ae4ef2c23c" kindref="member">SPECSScanRange_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>store<sp/>=<sp/>&amp;scanRanges_;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>paramName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;ScanRange\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>Scan<sp/>Ranges...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>spectrum<sp/>parameter&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>out<sp/>any<sp/>existing<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/>store-&gt;clear();</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>string<sp/>containing<sp/>the<sp/>lens<sp/>modes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cmd<sp/>=<sp/><ref refid="specs_analyser_8h_1a6303c877ff8d38d18f5056732470b546" kindref="member">SPECS_CMD_GET_SPECTRUM</ref>;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ParameterName:&quot;</highlight><highlight class="normal"><sp/>+<sp/>paramName,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess)<sp/>{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>params:&quot;</highlight><highlight class="normal">,<sp/>data[</highlight><highlight class="stringliteral">&quot;Values&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.find(</highlight><highlight class="stringliteral">&quot;Values&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>data.end())<sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stringStream(data[</highlight><highlight class="stringliteral">&quot;Values&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>token;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pull<sp/>out<sp/>the<sp/>individual<sp/>tokens<sp/>and<sp/>clean<sp/>them<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!stringStream.eof())<sp/>{</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(stringStream,<sp/>token,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/>token);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::remove<sp/>moves<sp/>all<sp/>instances<sp/>of<sp/>character<sp/>to<sp/>end<sp/>of<sp/>string<sp/>and<sp/>returns<sp/>position<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>removed<sp/>character<sp/>in<sp/>new<sp/>string.<sp/>erase<sp/>then<sp/>truncates<sp/>the<sp/>string<sp/>at<sp/>that<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token.erase(std::remove(token.begin(),<sp/>token.end(),<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">),<sp/>token.end());</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token.erase(std::remove(token.begin(),<sp/>token.end(),<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">),<sp/>token.end());</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token.erase(std::remove(token.begin(),<sp/>token.end(),<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">),<sp/>token.end());</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/>token);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store-&gt;push_back(token);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>values<sp/>returned<sp/>for<sp/>param<sp/>&quot;</highlight><highlight class="normal">,<sp/>paramName);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>enum<sp/>field<sp/>always<sp/>contains<sp/>at<sp/>least<sp/>one<sp/>entry<sp/>to<sp/>avoid<sp/>EDM<sp/>problems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>caused<sp/>by<sp/>the<sp/>SDEF<sp/>field<sp/>not<sp/>being<sp/>set<sp/>in<sp/>the<sp/>mbbi/mbbo<sp/>records.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess)<sp/>{</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>&quot;</highlight><highlight class="normal">,<sp/>paramName);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>store-&gt;push_back(</highlight><highlight class="stringliteral">&quot;Not<sp/>connected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>the<sp/>discovered<sp/>changes<sp/>back<sp/>up<sp/>to<sp/>EPICS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>this<sp/>regardless<sp/>of<sp/>the<sp/>value<sp/>of<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strings[store-&gt;size()];</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values[store-&gt;size()];</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>severities[store-&gt;size()];</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>((index<sp/>&lt;<sp/>(size_t)store-&gt;size()));<sp/>index++){</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/>strings[index]<sp/>=<sp/>epicsStrDup((*store)[index].c_str());</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>lens<sp/>mode&quot;</highlight><highlight class="normal">,<sp/>strings[index]);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>values[index]<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>severities[index]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>set<sp/>status<sp/>so<sp/>as<sp/>not<sp/>to<sp/>mask<sp/>faults<sp/>with<sp/>the<sp/>remote<sp/>access<sp/>(since<sp/>this<sp/>should<sp/>always<sp/>succeed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/>this-&gt;doCallbacksEnum(strings,<sp/>values,<sp/>severities,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)store-&gt;size(),<sp/>param,<sp/>0);</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a0e5d01283bb93950f7b1bea1455559ba" kindref="member">SpecsAnalyser::readRunModes</ref>()</highlight></codeline>
<codeline lineno="1741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readRunModes&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>Run<sp/>Modes...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>values<sp/>are<sp/>defined<sp/>by<sp/>the<sp/>SPECS<sp/>interface<sp/>software<sp/>and<sp/>will<sp/>not<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/>runModes_.push_back(</highlight><highlight class="stringliteral">&quot;Fixed<sp/>Transmission&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/>runModes_.push_back(</highlight><highlight class="stringliteral">&quot;Snapshot&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/>runModes_.push_back(</highlight><highlight class="stringliteral">&quot;Fixed<sp/>Retarding<sp/>Ratio&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/>runModes_.push_back(</highlight><highlight class="stringliteral">&quot;Fixed<sp/>Energy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a7ee15e73df109d8c432506b2dc15831d" kindref="member">SpecsAnalyser::readSpectrumDataInfo</ref>(<ref refid="specs_analyser_8h_1abfd77f45bb9c399af7132bd6abcc39fe" kindref="member">SPECSDataInfoParam_t</ref><sp/>param)</highlight></codeline>
<codeline lineno="1765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::asynPortConnect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>parameterName;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cmd<sp/>=<sp/><ref refid="specs_analyser_8h_1a52783173994f08cea3b6c1188dd6e25d" kindref="member">SPECS_CMD_GET_DATA_INFO</ref>;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>unit;</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="mar3xx__pck_8c_1abb702d8b501669a23aa0ab3b281b9384" kindref="member">min</ref>,<sp/><ref refid="mar3xx__pck_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(param)<sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1abfd77f45bb9c399af7132bd6abcc39feac30154ab3b3c3ce7d27120f541278725" kindref="member">SPECSOrdinateRange</ref>:</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;OrdinateRange\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>parameter&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>Spectrum<sp/>Data<sp/>Info<sp/>&quot;</highlight><highlight class="normal">,<sp/>parameterName);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess)<sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(cmd<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ParameterName:&quot;</highlight><highlight class="normal"><sp/>+<sp/>parameterName,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess)<sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(param)<sp/>{</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="specs_analyser_8h_1abfd77f45bb9c399af7132bd6abcc39feac30154ab3b3c3ce7d27120f541278725" kindref="member">SPECSOrdinateRange</ref>:</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unit<sp/>=<sp/>data[</highlight><highlight class="stringliteral">&quot;Unit&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(unit<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unit<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(unit,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_specs_analyser_1ab0414ed2724d9b4552d0290df010b360" kindref="member">SPECSNonEnergyUnits_</ref>,<sp/>unit.c_str());</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_specs_analyser_1aca11278c7aa865f84394d186f25a0c8a" kindref="member">readDoubleData</ref>(data,<sp/></highlight><highlight class="stringliteral">&quot;Min&quot;</highlight><highlight class="normal">,<sp/><ref refid="mar3xx__pck_8c_1abb702d8b501669a23aa0ab3b281b9384" kindref="member">min</ref>)<sp/>==<sp/>asynSuccess)</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_specs_analyser_1a285f47ee0c03aef3d14061d948c46931" kindref="member">SPECSNonEnergyMin_</ref>,<sp/><ref refid="mar3xx__pck_8c_1abb702d8b501669a23aa0ab3b281b9384" kindref="member">min</ref>);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_specs_analyser_1aca11278c7aa865f84394d186f25a0c8a" kindref="member">readDoubleData</ref>(data,<sp/></highlight><highlight class="stringliteral">&quot;Max&quot;</highlight><highlight class="normal">,<sp/><ref refid="mar3xx__pck_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>)<sp/>==<sp/>asynSuccess)</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDoubleParam(<ref refid="class_specs_analyser_1a3c97b8fc537b8e22ab055ab3bc230fac" kindref="member">SPECSNonEnergyMax_</ref>,<sp/><ref refid="mar3xx__pck_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>parameter&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a4f4621331f32f945d2f2199a4a2dac4f" kindref="member">SpecsAnalyser::asynPortConnect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*port,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addr,<sp/>asynUser<sp/>**ppasynUser,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*inputEos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*outputEos)</highlight></codeline>
<codeline lineno="1832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::asynPortConnect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>pasynOctetSyncIO-&gt;connect(<sp/>port,<sp/>addr,<sp/>ppasynUser,<sp/>NULL);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>connect<sp/>to<sp/>port&quot;</highlight><highlight class="normal">,<sp/>port);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>pasynOctetSyncIO-&gt;setInputEos(*ppasynUser,<sp/>inputEos,<sp/>strlen(inputEos));</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>pasynOctetSyncIO-&gt;setOutputEos(*ppasynUser,<sp/>outputEos,<sp/>strlen(outputEos));</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Connected<sp/>to<sp/>low<sp/>level<sp/>asynOctetSyncIO<sp/>port&quot;</highlight><highlight class="normal">,<sp/>port);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>connected<sp/>successfully<sp/>to<sp/>the<sp/>port<sp/>so<sp/>reset<sp/>the<sp/>message<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a46d8fd157629745606c1f6d316388675" kindref="member">SPECSMsgCounter_</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>that<sp/>we<sp/>are<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a10683b5735597c82640ae33de675dbd8" kindref="member">SPECSConnected_</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>the<sp/>connect<sp/>command<sp/>to<sp/>complete<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a97a208c93f533a8179e8278779e9c9a0" kindref="member">sendSimpleCommand</ref>(<ref refid="specs_analyser_8h_1afdae27cde6622700339d8fee13d1772d" kindref="member">SPECS_CMD_CONNECT</ref>,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>send<sp/>command&quot;</highlight><highlight class="normal">,<sp/><ref refid="specs_analyser_8h_1afdae27cde6622700339d8fee13d1772d" kindref="member">SPECS_CMD_CONNECT</ref>);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Connect<sp/>command<sp/>return<sp/>data&quot;</highlight><highlight class="normal">,<sp/>data);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>connection<sp/>was<sp/>successful,<sp/>record<sp/>the<sp/>server<sp/>name<sp/>and<sp/>the<sp/>protocol<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>server<sp/>=<sp/>data[</highlight><highlight class="stringliteral">&quot;ServerName&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(server,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_specs_analyser_1ac82c71b99ce94604b15477cc04f1d2ef" kindref="member">SPECSServerName_</ref>,<sp/>server.c_str());</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>protocol<sp/>=<sp/>data[</highlight><highlight class="stringliteral">&quot;ProtocolVersion&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(protocol,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/>setStringParam(<ref refid="class_specs_analyser_1acbe16e8fb813c86e1b0d36afdcdce35d" kindref="member">SPECSProtocolVersion_</ref>,<sp/>protocol.c_str());</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a34bc159bddda9ee1a15d6af966b7f1b2" kindref="member">SpecsAnalyser::asynPortDisconnect</ref>(asynUser<sp/>*pasynUser)</highlight></codeline>
<codeline lineno="1874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::asynPortDisconnect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>data;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>pasynOctetSyncIO-&gt;disconnect(pasynUser);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>disconnect<sp/>from<sp/>asyn<sp/>port&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>that<sp/>we<sp/>are<sp/>not<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a10683b5735597c82640ae33de675dbd8" kindref="member">SPECSConnected_</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1aef8fea6aded7d899411870cb9ea6b117" kindref="member">SpecsAnalyser::commandResponse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>&amp;command,<sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>&amp;<ref refid="structresponse" kindref="compound">response</ref>,<sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>&amp;data)</highlight></codeline>
<codeline lineno="1898"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::commandResponse&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>errorCode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>replyString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>nameValueString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>replyArray[<ref refid="specs_analyser_8h_1a3a7478a406f25c74253e4d20161ab6fd" kindref="member">SPECS_MAX_STRING</ref>];</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>to<sp/>send&quot;</highlight><highlight class="normal">,<sp/>command);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="class_specs_analyser_1a58e0780587225834be745eebb7bf7ed7" kindref="member">asynWriteRead</ref>(command.c_str(),<sp/>replyArray);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Response<sp/>received&quot;</highlight><highlight class="normal">,<sp/>replyArray);</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>continue<sp/>if<sp/>the<sp/>status<sp/>is<sp/>good...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK<sp/>we<sp/>need<sp/>to<sp/>first<sp/>find<sp/>out<sp/>if<sp/>the<sp/>command<sp/>was<sp/>accepted<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/>replyString.assign(replyArray);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>OK<sp/>or<sp/>ERROR<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(replyString.substr(0,<sp/>2)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>parse<sp/>the<sp/>response<sp/>if<sp/>there<sp/>is<sp/>something<sp/>to<sp/>parse!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(replyString.length()<sp/>&gt;<sp/>3){</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replyString<sp/>=<sp/>replyString.substr(2);</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>any<sp/>:<sp/>and<sp/>whitespace<sp/>from<sp/>the<sp/>ends<sp/>of<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(replyString);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>loop<sp/>over<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>string<sp/>and<sp/>search<sp/>for<sp/>name<sp/>value<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>small<sp/>state<sp/>machine<sp/>for<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insideQuotes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nameCheck<sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueCheck<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayCheck<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parsing<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parsing)<sp/>{</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>replyString.length();<sp/>index++){</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>current<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>cc<sp/>=<sp/>replyString.substr(index,<sp/>1);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Are<sp/>we<sp/>name<sp/>checking<sp/>or<sp/>value<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nameCheck<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>the<sp/>character<sp/>a<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>the<sp/>name,<sp/>now<sp/>start<sp/>the<sp/>value<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nameCheck<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueCheck<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/>+=<sp/>cc;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueCheck<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>+=<sp/>cc;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>the<sp/>last<sp/>character<sp/>then<sp/>we<sp/>must<sp/>be<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>inside<sp/>a<sp/>quote<sp/>we<sp/>only<sp/>care<sp/>about<sp/>the<sp/>end<sp/>quote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(insideQuotes<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>check<sp/>previous<sp/>character<sp/>for<sp/>&apos;\&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>tcc<sp/>=<sp/>replyString.substr(index-1,<sp/>1);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tcc<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insideQuotes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>see<sp/>a<sp/>[<sp/>then<sp/>we<sp/>are<sp/>in<sp/>an<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayCheck<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>see<sp/>a<sp/>]<sp/>then<sp/>we<sp/>are<sp/>exiting<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayCheck<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>see<sp/>a<sp/>&quot;<sp/>then<sp/>we<sp/>are<sp/>entering<sp/>quotes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insideQuotes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>see<sp/>a<sp/>&apos;<sp/>&apos;<sp/>then<sp/>we<sp/>might<sp/>be<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>we<sp/>are<sp/>not<sp/>inside<sp/>quotes<sp/>and<sp/>not<sp/>inside<sp/>an<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((insideQuotes<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(arrayCheck<sp/>==<sp/>0)){</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>the<sp/>value<sp/>is<sp/>complete<sp/>so<sp/>store<sp/>the<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(<ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[<ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>]<sp/>=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nameCheck<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueCheck<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>now<sp/>assume<sp/>entire<sp/>response<sp/>has<sp/>been<sp/>parsed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueCheck<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arrayCheck<sp/>==<sp/>1<sp/>||<sp/>insideQuotes<sp/>==1)<sp/>{</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eomReason;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nread<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;*******Raw<sp/>response<sp/>incomplete******&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pasynOctetSyncIO-&gt;read(portUser_,<sp/>replyArray,<sp/><ref refid="specs_analyser_8h_1a3a7478a406f25c74253e4d20161ab6fd" kindref="member">SPECS_MAX_STRING</ref>-1,<sp/><ref refid="specs_analyser_8h_1a81bf649b0cf6dbdbf7b58ff0f8d34c6f" kindref="member">SPECS_TIMEOUT</ref>,<sp/>&amp;nread,<sp/>&amp;eomReason);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replyArray[nread]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Extra<sp/>received&quot;</highlight><highlight class="normal">,<sp/>replyArray);</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>continue<sp/>if<sp/>the<sp/>status<sp/>is<sp/>good...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>asynSuccess){</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replyString.assign(replyArray);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>any<sp/>:<sp/>and<sp/>whitespace<sp/>from<sp/>the<sp/>ends<sp/>of<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(replyString);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsing<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>reply<sp/>and<sp/>we<sp/>are<sp/>not<sp/>in<sp/>quotes<sp/>or<sp/>brackets<sp/>so<sp/>must<sp/>have<sp/>complete<sp/>name:value<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(<ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(<ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[<ref refid="namespacemake_db_and_edl_1a2832407c256551abb325d5ee9e587443" kindref="member">name</ref>]<sp/>=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structresponse" kindref="compound">response</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>replyString<sp/>=<sp/>replyString.substr(5);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>any<sp/>:<sp/>and<sp/>whitespace<sp/>from<sp/>the<sp/>front<sp/>of<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(replyString);</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>out<sp/>the<sp/>next<sp/>number,<sp/>as<sp/>this<sp/>is<sp/>the<sp/>error<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(replyString.substr(0,<sp/>1).find_first_of(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>std::string::npos){</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorCode<sp/>+=<sp/>replyString.substr(0,<sp/>1);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replyString<sp/>=<sp/>replyString.substr(1);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorCode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>error<sp/>is<sp/>that<sp/>we<sp/>are<sp/>not<sp/>connected,<sp/>force<sp/>full<sp/>disconnect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a489bb13ceafa22ea5aba9fdcf5ce27ed" kindref="member">disconnect</ref>();</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Code&quot;</highlight><highlight class="normal">]<sp/>=<sp/>errorCode;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>any<sp/>:<sp/>and<sp/>whitespace<sp/>from<sp/>the<sp/>ends<sp/>of<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">cleanString</ref>(replyString);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>message<sp/>into<sp/>the<sp/>map<sp/>with<sp/>index<sp/>Message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;Message&quot;</highlight><highlight class="normal">]<sp/>=<sp/>replyString;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a58e0780587225834be745eebb7bf7ed7" kindref="member">SpecsAnalyser::asynWriteRead</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structresponse" kindref="compound">response</ref>)</highlight></codeline>
<codeline lineno="2043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*functionName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SpecsAnalyser::asynWriteRead&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/>asynStatus<sp/>status<sp/>=<sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eomReason;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nwrite<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nread<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connected<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sendString[<ref refid="specs_analyser_8h_1a3a7478a406f25c74253e4d20161ab6fd" kindref="member">SPECS_MAX_STRING</ref>];</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>replyArray[<ref refid="specs_analyser_8h_1a3a7478a406f25c74253e4d20161ab6fd" kindref="member">SPECS_MAX_STRING</ref>];</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgCounter;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>message<sp/>counter,<sp/>and<sp/>increment<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a46d8fd157629745606c1f6d316388675" kindref="member">SPECSMsgCounter_</ref>,<sp/>&amp;msgCounter);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/>msgCounter++;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msgCounter<sp/>&gt;<sp/>9999){</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>msgCounter<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>value<sp/>once<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a46d8fd157629745606c1f6d316388675" kindref="member">SPECSMsgCounter_</ref>,<sp/>msgCounter);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/>callParamCallbacks();</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Setup<sp/>the<sp/>string<sp/>to<sp/>send<sp/>to<sp/>the<sp/>detector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>String<sp/>starts<sp/>with<sp/>query:<sp/><sp/><sp/><sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Followed<sp/>by<sp/>4<sp/>digit<sp/>number:<sp/><sp/>nnnn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>a<sp/>space<sp/>and<sp/>finally<sp/>the<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/>sprintf(sendString,<sp/></highlight><highlight class="stringliteral">&quot;?%04d<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>msgCounter,<sp/>command);</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>asyn<sp/>port<sp/>user<sp/>then<sp/>something<sp/>higher<sp/>up<sp/>has<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>to<sp/>set<sp/>connected<sp/>to<sp/>0<sp/>and<sp/>then<sp/>bail<sp/>out<sp/>of<sp/>this<sp/>call<sp/>with<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!portUser_)<sp/>{</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classasyn_n_d_array_driver_1abf87462bc5853f8e5a56db5e93acd956" kindref="member">setIntegerParam</ref>(<ref refid="class_specs_analyser_1a10683b5735597c82640ae33de675dbd8" kindref="member">SPECSConnected_</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynError;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>connected<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/>getIntegerParam(<ref refid="class_specs_analyser_1a10683b5735597c82640ae33de675dbd8" kindref="member">SPECSConnected_</ref>,<sp/>&amp;connected);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>proceed<sp/>if<sp/>we<sp/>are<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connected<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>pasynOctetSyncIO-&gt;flush(portUser_);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pasynOctetSyncIO-&gt;writeRead(portUser_<sp/>,</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendString,<sp/>strlen(sendString),</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replyArray,<sp/><ref refid="specs_analyser_8h_1a3a7478a406f25c74253e4d20161ab6fd" kindref="member">SPECS_MAX_STRING</ref>-1,</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="specs_analyser_8h_1a81bf649b0cf6dbdbf7b58ff0f8d34c6f" kindref="member">SPECS_TIMEOUT</ref>,</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nwrite,<sp/>&amp;nread,<sp/>&amp;eomReason<sp/>);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>replyArray[nread]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Raw<sp/>response&quot;</highlight><highlight class="normal">,<sp/>replyArray);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>out<sp/>the<sp/>response,<sp/>message<sp/>counter,<sp/>and<sp/>error<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status<sp/>&amp;&amp;<sp/>(replyArray[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Problem<sp/>with<sp/>response<sp/>string.<sp/><sp/>Record<sp/>the<sp/>error<sp/>and<sp/>return<sp/>error<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status){</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>replyString(replyArray);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>the<sp/>4<sp/>digits<sp/>(1..5)<sp/>for<sp/>the<sp/>message<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(replyString.substr(1,4).c_str(),<sp/></highlight><highlight class="stringliteral">&quot;%04d&quot;</highlight><highlight class="normal">,<sp/>&amp;counter);</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>message<sp/>counter<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>sent<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>message<sp/>counter&quot;</highlight><highlight class="normal">,<sp/>msgCounter);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;Response<sp/>message<sp/>counter&quot;</highlight><highlight class="normal">,<sp/>counter);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counter<sp/>!=<sp/>msgCounter){</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Problem<sp/>with<sp/>message<sp/>ID.<sp/><sp/>Record<sp/>the<sp/>error<sp/>and<sp/>return<sp/>error<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>response<sp/>to<sp/>the<sp/>return<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<ref refid="structresponse" kindref="compound">response</ref>,<sp/>replyString.substr(6).c_str());</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">debug</ref>(functionName,<sp/></highlight><highlight class="stringliteral">&quot;****Error<sp/>asynStatus=&quot;</highlight><highlight class="normal">,status);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>asynError;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1aa4860a007948f4de145369331715cbb5" kindref="member">SpecsAnalyser::cleanString</ref>(<ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>&amp;str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>&amp;search,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>where)</highlight></codeline>
<codeline lineno="2127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(where<sp/>==<sp/>0<sp/>||<sp/>where<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>from<sp/>the<sp/>front<sp/>of<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str.substr(0,<sp/>1).find_first_of(search)<sp/>!=<sp/>std::string::npos){</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>str.substr(1);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(where<sp/>==<sp/>0<sp/>||<sp/>where<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>from<sp/>the<sp/>back<sp/>of<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str.substr(str.length()-1,<sp/>1).find_first_of(search)<sp/>!=<sp/>std::string::npos){</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>str.substr(0,<sp/>str.length()-1);</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1af49fa9878fa56d7cd51f7a125bc2b3a2" kindref="member">SpecsAnalyser::initDebugger</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initDebug)</highlight></codeline>
<codeline lineno="2144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>all<sp/>debugging<sp/>levels<sp/>to<sp/>initialised<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::SpecsAnalyser&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::specsAnalyserTask&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readEnum&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::writeInt32&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::writeFloat64&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::validateSpectrum&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::defineSpectrumFAT&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::defineSpectrumSFAT&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::defineSpectrumFRR&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::defineSpectrumFE&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readAcquisitionData&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::sendSimpleCommand&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::setupEPICSParameters&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::getAnalyserParameterType&quot;</highlight><highlight class="normal">]<sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::getAnalyserParameter&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readIntegerData&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readDoubleData&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readSpectrumParameter&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readRunModes&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readSpectrumDataInfo&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::asynPortConnect&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::commandResponse&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::asynWriteRead&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initDebug;</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a6735677313df130d48ac6d9609e42120" kindref="member">SpecsAnalyser::debugLevel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>method,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>onOff)</highlight></codeline>
<codeline lineno="2173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(method<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::SpecsAnalyser&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::specsAnalyserTask&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readEnum&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::writeInt32&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::writeFloat64&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::validateSpectrum&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::defineSpectrumFAT&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::defineSpectrumSFAT&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::defineSpectrumFRR&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::defineSpectrumFE&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readAcquisitionData&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::sendSimpleCommand&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::setupEPICSParameters&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::getAnalyserParameterType&quot;</highlight><highlight class="normal">]<sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::getAnalyserParameter&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readIntegerData&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readDoubleData&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readSpectrumParameter&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readRunModes&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::readSpectrumDataInfo&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::asynPortConnect&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::commandResponse&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[</highlight><highlight class="stringliteral">&quot;SpecsAnalyser::asynWriteRead&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/>debugMap_[method]<sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">SpecsAnalyser::debug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>method,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="2205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>for<sp/>the<sp/>debug<sp/>entry<sp/>in<sp/>the<sp/>debug<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMap_.count(method)<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>check<sp/>if<sp/>debug<sp/>is<sp/>turned<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMap_[method]<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>the<sp/>debug<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>method<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">SpecsAnalyser::debug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>method,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="2218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>for<sp/>the<sp/>debug<sp/>entry<sp/>in<sp/>the<sp/>debug<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMap_.count(method)<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>check<sp/>if<sp/>debug<sp/>is<sp/>turned<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMap_[method]<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>the<sp/>debug<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>method<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">SpecsAnalyser::debug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>method,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>msg,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="2231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>for<sp/>the<sp/>debug<sp/>entry<sp/>in<sp/>the<sp/>debug<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMap_.count(method)<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>check<sp/>if<sp/>debug<sp/>is<sp/>turned<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMap_[method]<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>the<sp/>debug<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>method<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">SpecsAnalyser::debug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>method,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="2244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>for<sp/>the<sp/>debug<sp/>entry<sp/>in<sp/>the<sp/>debug<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMap_.count(method)<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>check<sp/>if<sp/>debug<sp/>is<sp/>turned<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMap_[method]<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref><sp/>val<sp/>=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trim<sp/>the<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val.erase(val.find_last_not_of(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)+1);</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>the<sp/>debug<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>method<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>val<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">SpecsAnalyser::debug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>method,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>msg,<sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="2261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>for<sp/>the<sp/>debug<sp/>entry<sp/>in<sp/>the<sp/>debug<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMap_.count(method)<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>check<sp/>if<sp/>debug<sp/>is<sp/>turned<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMap_[method]<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>the<sp/>debug<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>method<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[std::map&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>map<sp/>of<sp/>data,<sp/>so<sp/>log<sp/>the<sp/>entire<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>.begin();<sp/>iter<sp/>!=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>.end();<sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter-&gt;second<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal">asynStatus<sp/><ref refid="class_specs_analyser_1a2c008251d0728d780494193a58d8f6df" kindref="member">SpecsAnalyser::debug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>method,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehdf5_1abeed318faeb13380e1b4221bd4198bf1aea271040d7a5b8d9af9cbf6564d262d5" kindref="member">std::string</ref>&amp;<sp/>msg,<sp/>std::map&lt;int,<sp/>std::string&gt;<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="2281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/>std::map&lt;int,<sp/>std::string&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>for<sp/>the<sp/>debug<sp/>entry<sp/>in<sp/>the<sp/>debug<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMap_.count(method)<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>check<sp/>if<sp/>debug<sp/>is<sp/>turned<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMap_[method]<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>the<sp/>debug<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>method<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[std::map&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>map<sp/>of<sp/>data,<sp/>so<sp/>log<sp/>the<sp/>entire<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>.begin();<sp/>iter<sp/>!=<sp/><ref refid="namespacemake_db_and_edl_1a7cc19c5fdb190aab14fe515dd85b45b7" kindref="member">value</ref>.end();<sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter-&gt;second<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asynSuccess;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Code<sp/>required<sp/>for<sp/>iocsh<sp/>registration<sp/>of<sp/>the<sp/>SPECS<sp/>analyser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>specsAnalyserConfigArg0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;portName&quot;</highlight><highlight class="normal">,<sp/>iocshArgString};</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>specsAnalyserConfigArg1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;driverPortName&quot;</highlight><highlight class="normal">,<sp/>iocshArgString};</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>specsAnalyserConfigArg2<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Max<sp/>number<sp/>of<sp/>NDArray<sp/>buffers&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>specsAnalyserConfigArg3<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;maxMemory&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>specsAnalyserConfigArg4<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;priority&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>specsAnalyserConfigArg5<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;stackSize&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>specsAnalyserConfigArgs[]<sp/>=<sp/><sp/>{&amp;specsAnalyserConfigArg0,</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;specsAnalyserConfigArg1,</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;specsAnalyserConfigArg2,</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;specsAnalyserConfigArg3,</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;specsAnalyserConfigArg4,</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;specsAnalyserConfigArg5};</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshFuncDef<sp/>configSpecsAnalyser<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;specsAnalyserConfig&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>specsAnalyserConfigArgs};</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>configSpecsAnalyserCallFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArgBuf<sp/>*<ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>)</highlight></codeline>
<codeline lineno="2318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="specs_analyser_8cpp_1a2f6cf5450726fc9a65f001018cce8b6d" kindref="member">specsAnalyserConfig</ref>(<ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[0].sval,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[1].sval,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[2].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[3].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[4].ival,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[5].ival);</highlight></codeline>
<codeline lineno="2320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Code<sp/>required<sp/>for<sp/>setting<sp/>the<sp/>debug<sp/>level<sp/>of<sp/>the<sp/>SPECS<sp/>analyser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>specsAnalyserDebugArg0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;port<sp/>name&quot;</highlight><highlight class="normal">,<sp/>iocshArgString};</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>specsAnalyserDebugArg1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;method<sp/>name&quot;</highlight><highlight class="normal">,<sp/>iocshArgString};</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>specsAnalyserDebugArg2<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;debug<sp/>on<sp/>or<sp/>off&quot;</highlight><highlight class="normal">,<sp/>iocshArgInt};</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArg<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>specsAnalyserDebugArgs[]<sp/>=<sp/><sp/>{&amp;specsAnalyserDebugArg0,</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;specsAnalyserDebugArg1,</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;specsAnalyserDebugArg2};</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshFuncDef<sp/>debugSpecsAnalyser<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;specsAnalyserDebug&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>specsAnalyserDebugArgs};</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>debugSpecsAnalyserCallFunc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iocshArgBuf<sp/>*<ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>)</highlight></codeline>
<codeline lineno="2334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="specs_analyser_8cpp_1a858be1f5f13c4941ae0c79dd74fa478c" kindref="member">specsSetDebugLevel</ref>(<ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[0].sval,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[1].sval,<sp/><ref refid="namespacemake_adl_1a1d55f39db2066eab50e6f2b21abc00f1" kindref="member">args</ref>[2].ival);</highlight></codeline>
<codeline lineno="2336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>specsAnalyserRegister(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/>iocshRegister(&amp;configSpecsAnalyser,<sp/>configSpecsAnalyserCallFunc);</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/>iocshRegister(&amp;debugSpecsAnalyser,<sp/>debugSpecsAnalyserCallFunc);</highlight></codeline>
<codeline lineno="2342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><ref refid="specs_analyser_8cpp_1ae7c2a581b057737ac3f4e13e9e1ac0e9" kindref="member">epicsExportRegistrar</ref>(specsAnalyserRegister);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/areaDetector/areaDetector/specsAnalyser/specsAnalyserApp/src/specsAnalyser.cpp"/>
  </compounddef>
</doxygen>
